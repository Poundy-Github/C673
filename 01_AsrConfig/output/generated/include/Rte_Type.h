#ifndef RTE_TYPE_H
#define RTE_TYPE_H
/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \version 6.6.3
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2021 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

/*
 * This file contains Rte type definitions
 *
 * This file has been automatically generated by
 * EB tresos AutoCore Rte Generator Version 6.6.3
 * on Mon Jul 24 10:50:51 CST 2023. !!!IGNORE-LINE!!!
 */

/*
 * \addtogroup Rte Runtime Environment
 * @{
 */

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* ==================[Includes]=============================================== */
#include <Rte.h>
#include <ComStack_Types.h>
#include <Can_GeneralTypes.h>

/* ==================[Types]================================================== */
#ifndef RTE_TYPE_ComM_ModeType
#define RTE_TYPE_ComM_ModeType
typedef VAR(uint8, TYPEDEF) ComM_ModeType;
#endif
#ifndef RTE_TYPE_ComM_UserHandleType
#define RTE_TYPE_ComM_UserHandleType
typedef VAR(uint8, TYPEDEF) ComM_UserHandleType;
#endif
#ifndef RTE_TYPE_ComM_InhibitionStatusType
#define RTE_TYPE_ComM_InhibitionStatusType
typedef VAR(uint8, TYPEDEF) ComM_InhibitionStatusType;
#endif
#ifndef RTE_TYPE_ComM_InternalHandleArrayType
#define RTE_TYPE_ComM_InternalHandleArrayType
typedef VAR(ComM_UserHandleType, TYPEDEF) ComM_InternalHandleArrayType[1];
#endif
#ifndef RTE_TYPE_ComM_UserHandleArrayType
#define RTE_TYPE_ComM_UserHandleArrayType
typedef struct
{
  VAR(uint8, TYPEDEF) numberOfRequesters;
  VAR(ComM_InternalHandleArrayType, TYPEDEF) handleArray;
} ComM_UserHandleArrayType;
#endif
#ifndef RTE_TYPE_Dcm_SecLevelType
#define RTE_TYPE_Dcm_SecLevelType
typedef VAR(uint8, TYPEDEF) Dcm_SecLevelType;
#endif
#ifndef RTE_TYPE_Dcm_SesCtrlType
#define RTE_TYPE_Dcm_SesCtrlType
typedef VAR(uint8, TYPEDEF) Dcm_SesCtrlType;
#endif
#ifndef RTE_TYPE_Dcm_ProtocolType
#define RTE_TYPE_Dcm_ProtocolType
typedef VAR(uint8, TYPEDEF) Dcm_ProtocolType;
#endif
#ifndef RTE_TYPE_Dcm_OpStatusType
#define RTE_TYPE_Dcm_OpStatusType
typedef VAR(uint8, TYPEDEF) Dcm_OpStatusType;
#endif
#ifndef RTE_TYPE_Dcm_ConfirmationStatusType
#define RTE_TYPE_Dcm_ConfirmationStatusType
typedef VAR(uint8, TYPEDEF) Dcm_ConfirmationStatusType;
#endif
#ifndef RTE_TYPE_Dcm_NegativeResponseCodeType
#define RTE_TYPE_Dcm_NegativeResponseCodeType
typedef VAR(uint8, TYPEDEF) Dcm_NegativeResponseCodeType;
#endif
#ifndef RTE_TYPE_Dcm_SecSeedSA_Level1_ArrayType
#define RTE_TYPE_Dcm_SecSeedSA_Level1_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_SecSeedSA_Level1_ArrayType[4];
#endif
#ifndef RTE_TYPE_Dcm_SecKeySA_Level1_ArrayType
#define RTE_TYPE_Dcm_SecKeySA_Level1_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_SecKeySA_Level1_ArrayType[4];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F120
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F120
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F120[4];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F120_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F120_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F120_ArrayType[4];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F121
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F121
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F121[4];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F121_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F121_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F121_ArrayType[4];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F122
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F122
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F122[4];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F122_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F122_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F122_ArrayType[4];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F189
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F189
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F189[8];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F189_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F189_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F189_ArrayType[8];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F089
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F089
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F089[8];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F089_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F089_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F089_ArrayType[8];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F187
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F187
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F187[21];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F187_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F187_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F187_ArrayType[21];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F18A
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F18A
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F18A[7];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F18A_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F18A_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F18A_ArrayType[7];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F18C
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F18C
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F18C[13];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F18C_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F18C_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F18C_ArrayType[13];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F190
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F190
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F190[17];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F190_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F190_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F190_ArrayType[17];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F170
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F170
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F170[4];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F170_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F170_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F170_ArrayType[4];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F171
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F171
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F171[4];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F171_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F171_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F171_ArrayType[4];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F184
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F184
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F184[7];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F184_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F184_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F184_ArrayType[7];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F188
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F188
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F188[20];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F188_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F188_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F188_ArrayType[20];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F123
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F123
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F123[20];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F123_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F123_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F123_ArrayType[20];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F191
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F191
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F191[9];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F191_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F191_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F191_ArrayType[9];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F194
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F194
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F194[8];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F194_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F194_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F194_ArrayType[8];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1F1
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1F1
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F1F1[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F1F1_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F1F1_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F1F1_ArrayType[1];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1F2
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1F2
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F1F2[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F1F2_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F1F2_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F1F2_ArrayType[1];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1F3
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1F3
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F1F3[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F1F3_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F1F3_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F1F3_ArrayType[1];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1F5
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1F5
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F1F5[8];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F1F5_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F1F5_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F1F5_ArrayType[8];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_3BAF
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_3BAF
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_3BAF[2];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_3BAF_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_3BAF_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_3BAF_ArrayType[2];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_0103
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_0103
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_0103[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_0103_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_0103_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_0103_ArrayType[1];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1F7
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1F7
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F1F7[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F1F7_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F1F7_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F1F7_ArrayType[1];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1F8
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1F8
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F1F8[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F1F8_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F1F8_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F1F8_ArrayType[1];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1F9
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1F9
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F1F9[8];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F1F9_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F1F9_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F1F9_ArrayType[8];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_11B7
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_11B7
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_11B7[2];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_11B7_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_11B7_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_11B7_ArrayType[2];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1FA
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1FA
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F1FA[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F1FA_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F1FA_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F1FA_ArrayType[1];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1FB
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1FB
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F1FB[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F1FB_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F1FB_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F1FB_ArrayType[1];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1FC
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1FC
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F1FC[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F1FC_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F1FC_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F1FC_ArrayType[1];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_11B5
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_11B5
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_11B5[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_11B5_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_11B5_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_11B5_ArrayType[1];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F186
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F186
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F186[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F186_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F186_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F186_ArrayType[1];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1FE
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1FE
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F1FE[2];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F1FE_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F1FE_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F1FE_ArrayType[2];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1FF
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1FF
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F1FF[2];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F1FF_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F1FF_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F1FF_ArrayType[2];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD14
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD14
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_FD14[49];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_FD14_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_FD14_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_FD14_ArrayType[49];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD15
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD15
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_FD15[49];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_FD15_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_FD15_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_FD15_ArrayType[49];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD16
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD16
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_FD16[49];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_FD16_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_FD16_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_FD16_ArrayType[49];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD17
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD17
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_FD17[49];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_FD17_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_FD17_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_FD17_ArrayType[49];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD18
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD18
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_FD18[49];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_FD18_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_FD18_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_FD18_ArrayType[49];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD19
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD19
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_FD19[49];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_FD19_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_FD19_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_FD19_ArrayType[49];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD1E
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD1E
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_FD1E[2];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_FD1E_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_FD1E_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_FD1E_ArrayType[2];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD1F
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD1F
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_FD1F[8];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_FD1F_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_FD1F_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_FD1F_ArrayType[8];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD20
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD20
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_FD20[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_FD20_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_FD20_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_FD20_ArrayType[1];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD21
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD21
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_FD21[2];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_FD21_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_FD21_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_FD21_ArrayType[2];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD22
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD22
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_FD22[4];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_FD22_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_FD22_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_FD22_ArrayType[4];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD23
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD23
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_FD23[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_FD23_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_FD23_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_FD23_ArrayType[1];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1F0
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1F0
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F1F0[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F1F0_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F1F0_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F1F0_ArrayType[1];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD24
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD24
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_FD24[5];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_FD24_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_FD24_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_FD24_ArrayType[5];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD26
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD26
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_FD26[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_FD26_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_FD26_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_FD26_ArrayType[1];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD27
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD27
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_FD27[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_FD27_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_FD27_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_FD27_ArrayType[1];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD28
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD28
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_FD28[5];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_FD28_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_FD28_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_FD28_ArrayType[5];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD25
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD25
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_FD25[2];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_FD25_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_FD25_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_FD25_ArrayType[2];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F010
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F010
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F010[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F010_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F010_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F010_ArrayType[1];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1A3
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1A3
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F1A3[8];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F1A3_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F1A3_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F1A3_ArrayType[8];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1A4
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1A4
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F1A4[2];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F1A4_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F1A4_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F1A4_ArrayType[2];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1A5
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1A5
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F1A5[2];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F1A5_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F1A5_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F1A5_ArrayType[2];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1A7
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1A7
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F1A7[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F1A7_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F1A7_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F1A7_ArrayType[1];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1A8
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1A8
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F1A8[2];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F1A8_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F1A8_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F1A8_ArrayType[2];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1A9
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1A9
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F1A9[2];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F1A9_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F1A9_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F1A9_ArrayType[2];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1AA
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1AA
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F1AA[2];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F1AA_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F1AA_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F1AA_ArrayType[2];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1AB
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1AB
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F1AB[88];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F1AB_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F1AB_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F1AB_ArrayType[88];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD29
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD29
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_FD29[20];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_FD29_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_FD29_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_FD29_ArrayType[20];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_FEC0
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_FEC0
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_FEC0[16];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_FEC0_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_FEC0_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_FEC0_ArrayType[16];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_FDFF
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_FDFF
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_FDFF[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_FDFF_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_FDFF_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_FDFF_ArrayType[1];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1FD
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_F1FD
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_F1FD[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_F1FD_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_F1FD_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_F1FD_ArrayType[1];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD00
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD00
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_FD00[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_FD00_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_FD00_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_FD00_ArrayType[1];
#endif
#ifndef RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD2A
#define RTE_TYPE_DataArrayTypeUint8_DcmDspData_FD2A
typedef VAR(uint8, TYPEDEF) DataArrayTypeUint8_DcmDspData_FD2A[164];
#endif
#ifndef RTE_TYPE_Dcm_DataDcmDspData_FD2A_ArrayType
#define RTE_TYPE_Dcm_DataDcmDspData_FD2A_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDcmDspData_FD2A_ArrayType[164];
#endif
#ifndef RTE_TYPE_Dcm_DidSupportedType
#define RTE_TYPE_Dcm_DidSupportedType
typedef VAR(uint8, TYPEDEF) Dcm_DidSupportedType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_0PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_0Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_0Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_0PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_0Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_0
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_0
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_00_01PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_00_01PrimitivType
typedef VAR(uint16, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_00_01PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_00_01Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_00_01Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_00_01PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_00_01Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_00_01
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_00_01
typedef VAR(uint16, TYPEDEF) StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_00_01;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_02_03PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_02_03PrimitivType
typedef VAR(uint16, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_02_03PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_02_03Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_02_03Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_02_03PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_02_03Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_02_03
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_02_03
typedef VAR(uint16, TYPEDEF) StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_02_03;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_04_05PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_04_05PrimitivType
typedef VAR(uint16, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_04_05PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_04_05Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_04_05Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_04_05PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_04_05Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_04_05
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_04_05
typedef VAR(uint16, TYPEDEF) StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_04_05;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_06_07PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_06_07PrimitivType
typedef VAR(uint16, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_06_07PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_06_07Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_06_07Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_06_07PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_06_07Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_06_07
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_06_07
typedef VAR(uint16, TYPEDEF) StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_06_07;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_08_09PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_08_09PrimitivType
typedef VAR(uint16, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_08_09PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_08_09Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_08_09Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_08_09PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_08_09Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_08_09
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_08_09
typedef VAR(uint16, TYPEDEF) StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_08_09;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_10_11PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_10_11PrimitivType
typedef VAR(uint16, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_10_11PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_10_11Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_10_11Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_10_11PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_10_11Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_10_11
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_10_11
typedef VAR(uint16, TYPEDEF) StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_10_11;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_12_13PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_12_13PrimitivType
typedef VAR(uint16, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_12_13PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_12_13Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_12_13Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_12_13PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_12_13Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_12_13
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_12_13
typedef VAR(uint16, TYPEDEF) StartDataInType_DcmDspRoutine_0x800B_DcmDspStartRoutineInSignal_12_13;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x800B_DcmDspRoutineRequestResOutSignal_RoutineInformationPrimitivType
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x800B_DcmDspRoutineRequestResOutSignal_RoutineInformationPrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x800B_DcmDspRoutineRequestResOutSignal_RoutineInformationPrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x800B_DcmDspRoutineRequestResOutSignal_RoutineInformationType
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x800B_DcmDspRoutineRequestResOutSignal_RoutineInformationType
typedef VAR(Dcm_RequestDataOut_DcmDspRoutine_0x800B_DcmDspRoutineRequestResOutSignal_RoutineInformationPrimitivType, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x800B_DcmDspRoutineRequestResOutSignal_RoutineInformationType;
#endif
#ifndef RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x800B_DcmDspRoutineRequestResOutSignal_RoutineInformation
#define RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x800B_DcmDspRoutineRequestResOutSignal_RoutineInformation
typedef VAR(uint8, TYPEDEF) RequestDataOutType_DcmDspRoutine_0x800B_DcmDspRoutineRequestResOutSignal_RoutineInformation;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x800B_DcmDspRoutineRequestResOutSignal_RoutineStatusPrimitivType
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x800B_DcmDspRoutineRequestResOutSignal_RoutineStatusPrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x800B_DcmDspRoutineRequestResOutSignal_RoutineStatusPrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x800B_DcmDspRoutineRequestResOutSignal_RoutineStatusType
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x800B_DcmDspRoutineRequestResOutSignal_RoutineStatusType
typedef VAR(Dcm_RequestDataOut_DcmDspRoutine_0x800B_DcmDspRoutineRequestResOutSignal_RoutineStatusPrimitivType, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x800B_DcmDspRoutineRequestResOutSignal_RoutineStatusType;
#endif
#ifndef RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x800B_DcmDspRoutineRequestResOutSignal_RoutineStatus
#define RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x800B_DcmDspRoutineRequestResOutSignal_RoutineStatus
typedef VAR(uint8, TYPEDEF) RequestDataOutType_DcmDspRoutine_0x800B_DcmDspRoutineRequestResOutSignal_RoutineStatus;
#endif
#ifndef RTE_TYPE_Dcm_StopDataOut_DcmDspRoutine_0x800C_DcmDspRoutineStopOutSignal_RoutineInformationPrimitivType
#define RTE_TYPE_Dcm_StopDataOut_DcmDspRoutine_0x800C_DcmDspRoutineStopOutSignal_RoutineInformationPrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StopDataOut_DcmDspRoutine_0x800C_DcmDspRoutineStopOutSignal_RoutineInformationPrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StopDataOut_DcmDspRoutine_0x800C_DcmDspRoutineStopOutSignal_RoutineInformationType
#define RTE_TYPE_Dcm_StopDataOut_DcmDspRoutine_0x800C_DcmDspRoutineStopOutSignal_RoutineInformationType
typedef VAR(Dcm_StopDataOut_DcmDspRoutine_0x800C_DcmDspRoutineStopOutSignal_RoutineInformationPrimitivType, TYPEDEF) Dcm_StopDataOut_DcmDspRoutine_0x800C_DcmDspRoutineStopOutSignal_RoutineInformationType;
#endif
#ifndef RTE_TYPE_StopDataOutType_DcmDspRoutine_0x800C_DcmDspRoutineStopOutSignal_RoutineInformation
#define RTE_TYPE_StopDataOutType_DcmDspRoutine_0x800C_DcmDspRoutineStopOutSignal_RoutineInformation
typedef VAR(uint8, TYPEDEF) StopDataOutType_DcmDspRoutine_0x800C_DcmDspRoutineStopOutSignal_RoutineInformation;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x800C_DcmDspRoutineRequestResOutSignal_00PrimitivType
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x800C_DcmDspRoutineRequestResOutSignal_00PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x800C_DcmDspRoutineRequestResOutSignal_00PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x800C_DcmDspRoutineRequestResOutSignal_00Type
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x800C_DcmDspRoutineRequestResOutSignal_00Type
typedef VAR(Dcm_RequestDataOut_DcmDspRoutine_0x800C_DcmDspRoutineRequestResOutSignal_00PrimitivType, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x800C_DcmDspRoutineRequestResOutSignal_00Type;
#endif
#ifndef RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x800C_DcmDspRoutineRequestResOutSignal_00
#define RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x800C_DcmDspRoutineRequestResOutSignal_00
typedef VAR(uint8, TYPEDEF) RequestDataOutType_DcmDspRoutine_0x800C_DcmDspRoutineRequestResOutSignal_00;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x800C_DcmDspRoutineRequestResOutSignal_01PrimitivType
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x800C_DcmDspRoutineRequestResOutSignal_01PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x800C_DcmDspRoutineRequestResOutSignal_01PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x800C_DcmDspRoutineRequestResOutSignal_01Type
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x800C_DcmDspRoutineRequestResOutSignal_01Type
typedef VAR(Dcm_RequestDataOut_DcmDspRoutine_0x800C_DcmDspRoutineRequestResOutSignal_01PrimitivType, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x800C_DcmDspRoutineRequestResOutSignal_01Type;
#endif
#ifndef RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x800C_DcmDspRoutineRequestResOutSignal_01
#define RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x800C_DcmDspRoutineRequestResOutSignal_01
typedef VAR(uint8, TYPEDEF) RequestDataOutType_DcmDspRoutine_0x800C_DcmDspRoutineRequestResOutSignal_01;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x8010_DcmDspStartRoutineInSignal_0ArrayType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x8010_DcmDspStartRoutineInSignal_0ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x8010_DcmDspStartRoutineInSignal_0ArrayType[32];
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x8010_DcmDspStartRoutineInSignal_0Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x8010_DcmDspStartRoutineInSignal_0Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x8010_DcmDspStartRoutineInSignal_0ArrayType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x8010_DcmDspStartRoutineInSignal_0Type;
#endif
#ifndef RTE_TYPE_Dcm_StartDataOut_DcmDspRoutine_0x8010_DcmDspStartRoutineOutSignal_0PrimitivType
#define RTE_TYPE_Dcm_StartDataOut_DcmDspRoutine_0x8010_DcmDspStartRoutineOutSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataOut_DcmDspRoutine_0x8010_DcmDspStartRoutineOutSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataOut_DcmDspRoutine_0x8010_DcmDspStartRoutineOutSignal_0Type
#define RTE_TYPE_Dcm_StartDataOut_DcmDspRoutine_0x8010_DcmDspStartRoutineOutSignal_0Type
typedef VAR(Dcm_StartDataOut_DcmDspRoutine_0x8010_DcmDspStartRoutineOutSignal_0PrimitivType, TYPEDEF) Dcm_StartDataOut_DcmDspRoutine_0x8010_DcmDspStartRoutineOutSignal_0Type;
#endif
#ifndef RTE_TYPE_StartDataOutType_DcmDspRoutine_0x8010_DcmDspStartRoutineOutSignal_0
#define RTE_TYPE_StartDataOutType_DcmDspRoutine_0x8010_DcmDspStartRoutineOutSignal_0
typedef VAR(uint8, TYPEDEF) StartDataOutType_DcmDspRoutine_0x8010_DcmDspStartRoutineOutSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x8010_DcmDspRoutineRequestResOutSignal_0PrimitivType
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x8010_DcmDspRoutineRequestResOutSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x8010_DcmDspRoutineRequestResOutSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x8010_DcmDspRoutineRequestResOutSignal_0Type
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x8010_DcmDspRoutineRequestResOutSignal_0Type
typedef VAR(Dcm_RequestDataOut_DcmDspRoutine_0x8010_DcmDspRoutineRequestResOutSignal_0PrimitivType, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x8010_DcmDspRoutineRequestResOutSignal_0Type;
#endif
#ifndef RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x8010_DcmDspRoutineRequestResOutSignal_0
#define RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x8010_DcmDspRoutineRequestResOutSignal_0
typedef VAR(uint8, TYPEDEF) RequestDataOutType_DcmDspRoutine_0x8010_DcmDspRoutineRequestResOutSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x8010_DcmDspRoutineRequestResOutSignal_1PrimitivType
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x8010_DcmDspRoutineRequestResOutSignal_1PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x8010_DcmDspRoutineRequestResOutSignal_1PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x8010_DcmDspRoutineRequestResOutSignal_1Type
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x8010_DcmDspRoutineRequestResOutSignal_1Type
typedef VAR(Dcm_RequestDataOut_DcmDspRoutine_0x8010_DcmDspRoutineRequestResOutSignal_1PrimitivType, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x8010_DcmDspRoutineRequestResOutSignal_1Type;
#endif
#ifndef RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x8010_DcmDspRoutineRequestResOutSignal_1
#define RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x8010_DcmDspRoutineRequestResOutSignal_1
typedef VAR(uint8, TYPEDEF) RequestDataOutType_DcmDspRoutine_0x8010_DcmDspRoutineRequestResOutSignal_1;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0301_DcmDspStartRoutineInSignal_0PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0301_DcmDspStartRoutineInSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0301_DcmDspStartRoutineInSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0301_DcmDspStartRoutineInSignal_0Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0301_DcmDspStartRoutineInSignal_0Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x0301_DcmDspStartRoutineInSignal_0PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0301_DcmDspStartRoutineInSignal_0Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x0301_DcmDspStartRoutineInSignal_0
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x0301_DcmDspStartRoutineInSignal_0
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x0301_DcmDspStartRoutineInSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0301_DcmDspRoutineRequestResOutSignal_0PrimitivType
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0301_DcmDspRoutineRequestResOutSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x0301_DcmDspRoutineRequestResOutSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0301_DcmDspRoutineRequestResOutSignal_0Type
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0301_DcmDspRoutineRequestResOutSignal_0Type
typedef VAR(Dcm_RequestDataOut_DcmDspRoutine_0x0301_DcmDspRoutineRequestResOutSignal_0PrimitivType, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x0301_DcmDspRoutineRequestResOutSignal_0Type;
#endif
#ifndef RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x0301_DcmDspRoutineRequestResOutSignal_0
#define RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x0301_DcmDspRoutineRequestResOutSignal_0
typedef VAR(uint8, TYPEDEF) RequestDataOutType_DcmDspRoutine_0x0301_DcmDspRoutineRequestResOutSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_0PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_0Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_0Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_0PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_0Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_0
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_0
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_1PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_1PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_1PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_1Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_1Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_1PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_1Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_1
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_1
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_1;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_2PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_2PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_2PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_2Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_2Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_2PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_2Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_2
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_2
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_2;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_3PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_3PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_3PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_3Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_3Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_3PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_3Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_3
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_3
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_3;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_4PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_4PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_4PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_4Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_4Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_4PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_4Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_4
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_4
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_4;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_5PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_5PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_5PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_5Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_5Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_5PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_5Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_5
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_5
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_5;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_6PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_6PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_6PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_6Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_6Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_6PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_6Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_6
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_6
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_6;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_7PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_7PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_7PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_7Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_7Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_7PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_7Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_7
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_7
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_7;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_8PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_8PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_8PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_8Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_8Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_8PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_8Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_8
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_8
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_8;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_9PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_9PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_9PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_9Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_9Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_9PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_9Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_9
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_9
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_9;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_10PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_10PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_10PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_10Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_10Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_10PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_10Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_10
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_10
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x0303_DcmDspStartRoutineInSignal_10;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0303_DcmDspRoutineRequestResOutSignal_0ArrayType
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0303_DcmDspRoutineRequestResOutSignal_0ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x0303_DcmDspRoutineRequestResOutSignal_0ArrayType[3];
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0303_DcmDspRoutineRequestResOutSignal_0Type
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0303_DcmDspRoutineRequestResOutSignal_0Type
typedef VAR(Dcm_RequestDataOut_DcmDspRoutine_0x0303_DcmDspRoutineRequestResOutSignal_0ArrayType, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x0303_DcmDspRoutineRequestResOutSignal_0Type;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0302_DcmDspRoutineRequestResOutSignal_0PrimitivType
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0302_DcmDspRoutineRequestResOutSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x0302_DcmDspRoutineRequestResOutSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0302_DcmDspRoutineRequestResOutSignal_0Type
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0302_DcmDspRoutineRequestResOutSignal_0Type
typedef VAR(Dcm_RequestDataOut_DcmDspRoutine_0x0302_DcmDspRoutineRequestResOutSignal_0PrimitivType, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x0302_DcmDspRoutineRequestResOutSignal_0Type;
#endif
#ifndef RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x0302_DcmDspRoutineRequestResOutSignal_0
#define RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x0302_DcmDspRoutineRequestResOutSignal_0
typedef VAR(uint8, TYPEDEF) RequestDataOutType_DcmDspRoutine_0x0302_DcmDspRoutineRequestResOutSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0305_DcmDspStartRoutineInSignal_0PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0305_DcmDspStartRoutineInSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0305_DcmDspStartRoutineInSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0305_DcmDspStartRoutineInSignal_0Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0305_DcmDspStartRoutineInSignal_0Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x0305_DcmDspStartRoutineInSignal_0PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0305_DcmDspStartRoutineInSignal_0Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x0305_DcmDspStartRoutineInSignal_0
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x0305_DcmDspStartRoutineInSignal_0
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x0305_DcmDspStartRoutineInSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0305_DcmDspRoutineRequestResOutSignal_0PrimitivType
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0305_DcmDspRoutineRequestResOutSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x0305_DcmDspRoutineRequestResOutSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0305_DcmDspRoutineRequestResOutSignal_0Type
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0305_DcmDspRoutineRequestResOutSignal_0Type
typedef VAR(Dcm_RequestDataOut_DcmDspRoutine_0x0305_DcmDspRoutineRequestResOutSignal_0PrimitivType, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x0305_DcmDspRoutineRequestResOutSignal_0Type;
#endif
#ifndef RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x0305_DcmDspRoutineRequestResOutSignal_0
#define RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x0305_DcmDspRoutineRequestResOutSignal_0
typedef VAR(uint8, TYPEDEF) RequestDataOutType_DcmDspRoutine_0x0305_DcmDspRoutineRequestResOutSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_0PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_0Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_0Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_0PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_0Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_0
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_0
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_1PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_1PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_1PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_1Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_1Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_1PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_1Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_1
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_1
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_1;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_2PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_2PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_2PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_2Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_2Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_2PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_2Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_2
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_2
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x0306_DcmDspStartRoutineInSignal_2;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0306_DcmDspRoutineRequestResOutSignal_0PrimitivType
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0306_DcmDspRoutineRequestResOutSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x0306_DcmDspRoutineRequestResOutSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0306_DcmDspRoutineRequestResOutSignal_0Type
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0306_DcmDspRoutineRequestResOutSignal_0Type
typedef VAR(Dcm_RequestDataOut_DcmDspRoutine_0x0306_DcmDspRoutineRequestResOutSignal_0PrimitivType, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x0306_DcmDspRoutineRequestResOutSignal_0Type;
#endif
#ifndef RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x0306_DcmDspRoutineRequestResOutSignal_0
#define RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x0306_DcmDspRoutineRequestResOutSignal_0
typedef VAR(uint8, TYPEDEF) RequestDataOutType_DcmDspRoutine_0x0306_DcmDspRoutineRequestResOutSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0307_DcmDspStartRoutineInSignal_0PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0307_DcmDspStartRoutineInSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0307_DcmDspStartRoutineInSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0307_DcmDspStartRoutineInSignal_0Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0307_DcmDspStartRoutineInSignal_0Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x0307_DcmDspStartRoutineInSignal_0PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0307_DcmDspStartRoutineInSignal_0Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x0307_DcmDspStartRoutineInSignal_0
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x0307_DcmDspStartRoutineInSignal_0
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x0307_DcmDspStartRoutineInSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0307_DcmDspStartRoutineInSignal_1PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0307_DcmDspStartRoutineInSignal_1PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0307_DcmDspStartRoutineInSignal_1PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0307_DcmDspStartRoutineInSignal_1Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0307_DcmDspStartRoutineInSignal_1Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x0307_DcmDspStartRoutineInSignal_1PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0307_DcmDspStartRoutineInSignal_1Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x0307_DcmDspStartRoutineInSignal_1
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x0307_DcmDspStartRoutineInSignal_1
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x0307_DcmDspStartRoutineInSignal_1;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0307_DcmDspRoutineRequestResOutSignal_0PrimitivType
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0307_DcmDspRoutineRequestResOutSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x0307_DcmDspRoutineRequestResOutSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0307_DcmDspRoutineRequestResOutSignal_0Type
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0307_DcmDspRoutineRequestResOutSignal_0Type
typedef VAR(Dcm_RequestDataOut_DcmDspRoutine_0x0307_DcmDspRoutineRequestResOutSignal_0PrimitivType, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x0307_DcmDspRoutineRequestResOutSignal_0Type;
#endif
#ifndef RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x0307_DcmDspRoutineRequestResOutSignal_0
#define RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x0307_DcmDspRoutineRequestResOutSignal_0
typedef VAR(uint8, TYPEDEF) RequestDataOutType_DcmDspRoutine_0x0307_DcmDspRoutineRequestResOutSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0308_DcmDspStartRoutineInSignal_0PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0308_DcmDspStartRoutineInSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0308_DcmDspStartRoutineInSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0308_DcmDspStartRoutineInSignal_0Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0308_DcmDspStartRoutineInSignal_0Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x0308_DcmDspStartRoutineInSignal_0PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0308_DcmDspStartRoutineInSignal_0Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x0308_DcmDspStartRoutineInSignal_0
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x0308_DcmDspStartRoutineInSignal_0
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x0308_DcmDspStartRoutineInSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0308_DcmDspRoutineRequestResOutSignal_0PrimitivType
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0308_DcmDspRoutineRequestResOutSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x0308_DcmDspRoutineRequestResOutSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0308_DcmDspRoutineRequestResOutSignal_0Type
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0308_DcmDspRoutineRequestResOutSignal_0Type
typedef VAR(Dcm_RequestDataOut_DcmDspRoutine_0x0308_DcmDspRoutineRequestResOutSignal_0PrimitivType, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x0308_DcmDspRoutineRequestResOutSignal_0Type;
#endif
#ifndef RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x0308_DcmDspRoutineRequestResOutSignal_0
#define RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x0308_DcmDspRoutineRequestResOutSignal_0
typedef VAR(uint8, TYPEDEF) RequestDataOutType_DcmDspRoutine_0x0308_DcmDspRoutineRequestResOutSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0309_DcmDspStartRoutineInSignal_0PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0309_DcmDspStartRoutineInSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0309_DcmDspStartRoutineInSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0309_DcmDspStartRoutineInSignal_0Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x0309_DcmDspStartRoutineInSignal_0Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x0309_DcmDspStartRoutineInSignal_0PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x0309_DcmDspStartRoutineInSignal_0Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x0309_DcmDspStartRoutineInSignal_0
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x0309_DcmDspStartRoutineInSignal_0
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x0309_DcmDspStartRoutineInSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0309_DcmDspRoutineRequestResOutSignal_0PrimitivType
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0309_DcmDspRoutineRequestResOutSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x0309_DcmDspRoutineRequestResOutSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0309_DcmDspRoutineRequestResOutSignal_0Type
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x0309_DcmDspRoutineRequestResOutSignal_0Type
typedef VAR(Dcm_RequestDataOut_DcmDspRoutine_0x0309_DcmDspRoutineRequestResOutSignal_0PrimitivType, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x0309_DcmDspRoutineRequestResOutSignal_0Type;
#endif
#ifndef RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x0309_DcmDspRoutineRequestResOutSignal_0
#define RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x0309_DcmDspRoutineRequestResOutSignal_0
typedef VAR(uint8, TYPEDEF) RequestDataOutType_DcmDspRoutine_0x0309_DcmDspRoutineRequestResOutSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x030A_DcmDspStartRoutineInSignal_0PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x030A_DcmDspStartRoutineInSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x030A_DcmDspStartRoutineInSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x030A_DcmDspStartRoutineInSignal_0Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x030A_DcmDspStartRoutineInSignal_0Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x030A_DcmDspStartRoutineInSignal_0PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x030A_DcmDspStartRoutineInSignal_0Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x030A_DcmDspStartRoutineInSignal_0
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x030A_DcmDspStartRoutineInSignal_0
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x030A_DcmDspStartRoutineInSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x030A_DcmDspRoutineRequestResOutSignal_0PrimitivType
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x030A_DcmDspRoutineRequestResOutSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x030A_DcmDspRoutineRequestResOutSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x030A_DcmDspRoutineRequestResOutSignal_0Type
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x030A_DcmDspRoutineRequestResOutSignal_0Type
typedef VAR(Dcm_RequestDataOut_DcmDspRoutine_0x030A_DcmDspRoutineRequestResOutSignal_0PrimitivType, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x030A_DcmDspRoutineRequestResOutSignal_0Type;
#endif
#ifndef RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x030A_DcmDspRoutineRequestResOutSignal_0
#define RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x030A_DcmDspRoutineRequestResOutSignal_0
typedef VAR(uint8, TYPEDEF) RequestDataOutType_DcmDspRoutine_0x030A_DcmDspRoutineRequestResOutSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x8011_DcmDspStartRoutineInSignal_0PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x8011_DcmDspStartRoutineInSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x8011_DcmDspStartRoutineInSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x8011_DcmDspStartRoutineInSignal_0Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0x8011_DcmDspStartRoutineInSignal_0Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0x8011_DcmDspStartRoutineInSignal_0PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0x8011_DcmDspStartRoutineInSignal_0Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0x8011_DcmDspStartRoutineInSignal_0
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0x8011_DcmDspStartRoutineInSignal_0
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0x8011_DcmDspStartRoutineInSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x8011_DcmDspRoutineRequestResOutSignal_0PrimitivType
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x8011_DcmDspRoutineRequestResOutSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x8011_DcmDspRoutineRequestResOutSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x8011_DcmDspRoutineRequestResOutSignal_0Type
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0x8011_DcmDspRoutineRequestResOutSignal_0Type
typedef VAR(Dcm_RequestDataOut_DcmDspRoutine_0x8011_DcmDspRoutineRequestResOutSignal_0PrimitivType, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0x8011_DcmDspRoutineRequestResOutSignal_0Type;
#endif
#ifndef RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x8011_DcmDspRoutineRequestResOutSignal_0
#define RTE_TYPE_RequestDataOutType_DcmDspRoutine_0x8011_DcmDspRoutineRequestResOutSignal_0
typedef VAR(uint8, TYPEDEF) RequestDataOutType_DcmDspRoutine_0x8011_DcmDspRoutineRequestResOutSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0xF012_DcmDspStartRoutineInSignal_0PrimitivType
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0xF012_DcmDspStartRoutineInSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0xF012_DcmDspStartRoutineInSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0xF012_DcmDspStartRoutineInSignal_0Type
#define RTE_TYPE_Dcm_StartDataIn_DcmDspRoutine_0xF012_DcmDspStartRoutineInSignal_0Type
typedef VAR(Dcm_StartDataIn_DcmDspRoutine_0xF012_DcmDspStartRoutineInSignal_0PrimitivType, TYPEDEF) Dcm_StartDataIn_DcmDspRoutine_0xF012_DcmDspStartRoutineInSignal_0Type;
#endif
#ifndef RTE_TYPE_StartDataInType_DcmDspRoutine_0xF012_DcmDspStartRoutineInSignal_0
#define RTE_TYPE_StartDataInType_DcmDspRoutine_0xF012_DcmDspStartRoutineInSignal_0
typedef VAR(uint8, TYPEDEF) StartDataInType_DcmDspRoutine_0xF012_DcmDspStartRoutineInSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataIn_DcmDspRoutine_0xF012_DcmDspRoutineRequestResInSignal_0PrimitivType
#define RTE_TYPE_Dcm_RequestDataIn_DcmDspRoutine_0xF012_DcmDspRoutineRequestResInSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_RequestDataIn_DcmDspRoutine_0xF012_DcmDspRoutineRequestResInSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataIn_DcmDspRoutine_0xF012_DcmDspRoutineRequestResInSignal_0Type
#define RTE_TYPE_Dcm_RequestDataIn_DcmDspRoutine_0xF012_DcmDspRoutineRequestResInSignal_0Type
typedef VAR(Dcm_RequestDataIn_DcmDspRoutine_0xF012_DcmDspRoutineRequestResInSignal_0PrimitivType, TYPEDEF) Dcm_RequestDataIn_DcmDspRoutine_0xF012_DcmDspRoutineRequestResInSignal_0Type;
#endif
#ifndef RTE_TYPE_RequestDataInType_DcmDspRoutine_0xF012_DcmDspRoutineRequestResInSignal_0
#define RTE_TYPE_RequestDataInType_DcmDspRoutine_0xF012_DcmDspRoutineRequestResInSignal_0
typedef VAR(uint8, TYPEDEF) RequestDataInType_DcmDspRoutine_0xF012_DcmDspRoutineRequestResInSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0xF012_DcmDspRoutineRequestResOutSignal_0PrimitivType
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0xF012_DcmDspRoutineRequestResOutSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0xF012_DcmDspRoutineRequestResOutSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0xF012_DcmDspRoutineRequestResOutSignal_0Type
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0xF012_DcmDspRoutineRequestResOutSignal_0Type
typedef VAR(Dcm_RequestDataOut_DcmDspRoutine_0xF012_DcmDspRoutineRequestResOutSignal_0PrimitivType, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0xF012_DcmDspRoutineRequestResOutSignal_0Type;
#endif
#ifndef RTE_TYPE_RequestDataOutType_DcmDspRoutine_0xF012_DcmDspRoutineRequestResOutSignal_0
#define RTE_TYPE_RequestDataOutType_DcmDspRoutine_0xF012_DcmDspRoutineRequestResOutSignal_0
typedef VAR(uint8, TYPEDEF) RequestDataOutType_DcmDspRoutine_0xF012_DcmDspRoutineRequestResOutSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0xF012_DcmDspRoutineRequestResOutSignal_1PrimitivType
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0xF012_DcmDspRoutineRequestResOutSignal_1PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0xF012_DcmDspRoutineRequestResOutSignal_1PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0xF012_DcmDspRoutineRequestResOutSignal_1Type
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0xF012_DcmDspRoutineRequestResOutSignal_1Type
typedef VAR(Dcm_RequestDataOut_DcmDspRoutine_0xF012_DcmDspRoutineRequestResOutSignal_1PrimitivType, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0xF012_DcmDspRoutineRequestResOutSignal_1Type;
#endif
#ifndef RTE_TYPE_RequestDataOutType_DcmDspRoutine_0xF012_DcmDspRoutineRequestResOutSignal_1
#define RTE_TYPE_RequestDataOutType_DcmDspRoutine_0xF012_DcmDspRoutineRequestResOutSignal_1
typedef VAR(uint8, TYPEDEF) RequestDataOutType_DcmDspRoutine_0xF012_DcmDspRoutineRequestResOutSignal_1;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0xF013_DcmDspRoutineRequestResOutSignal_0PrimitivType
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0xF013_DcmDspRoutineRequestResOutSignal_0PrimitivType
typedef VAR(uint8, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0xF013_DcmDspRoutineRequestResOutSignal_0PrimitivType;
#endif
#ifndef RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0xF013_DcmDspRoutineRequestResOutSignal_0Type
#define RTE_TYPE_Dcm_RequestDataOut_DcmDspRoutine_0xF013_DcmDspRoutineRequestResOutSignal_0Type
typedef VAR(Dcm_RequestDataOut_DcmDspRoutine_0xF013_DcmDspRoutineRequestResOutSignal_0PrimitivType, TYPEDEF) Dcm_RequestDataOut_DcmDspRoutine_0xF013_DcmDspRoutineRequestResOutSignal_0Type;
#endif
#ifndef RTE_TYPE_RequestDataOutType_DcmDspRoutine_0xF013_DcmDspRoutineRequestResOutSignal_0
#define RTE_TYPE_RequestDataOutType_DcmDspRoutine_0xF013_DcmDspRoutineRequestResOutSignal_0
typedef VAR(uint8, TYPEDEF) RequestDataOutType_DcmDspRoutine_0xF013_DcmDspRoutineRequestResOutSignal_0;
#endif
#ifndef RTE_TYPE_Dcm_RequestData_ArrayType
#define RTE_TYPE_Dcm_RequestData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_RequestData_ArrayType[4096];
#endif
#ifndef RTE_TYPE_Dcm_Uint8PtrDataType
#define RTE_TYPE_Dcm_Uint8PtrDataType
typedef P2VAR(uint8, TYPEDEF, RTE_APPL_DATA) Dcm_Uint8PtrDataType;
#endif
#ifndef RTE_TYPE_Dem_OperationCycleIdType
#define RTE_TYPE_Dem_OperationCycleIdType
typedef VAR(uint8, TYPEDEF) Dem_OperationCycleIdType;
#endif
#ifndef RTE_TYPE_Dem_IndicatorIdType
#define RTE_TYPE_Dem_IndicatorIdType
typedef VAR(uint8, TYPEDEF) Dem_IndicatorIdType;
#endif
#ifndef RTE_TYPE_Dem_RatioIdType
#define RTE_TYPE_Dem_RatioIdType
typedef VAR(uint8, TYPEDEF) Dem_RatioIdType;
#endif
#ifndef RTE_TYPE_Dem_EnableConditionType
#define RTE_TYPE_Dem_EnableConditionType
typedef VAR(uint8, TYPEDEF) Dem_EnableConditionType;
#endif
#ifndef RTE_TYPE_Dem_EventIdType
#define RTE_TYPE_Dem_EventIdType
typedef VAR(uint16, TYPEDEF) Dem_EventIdType;
#endif
#ifndef RTE_TYPE_Dem_EventStatusType
#define RTE_TYPE_Dem_EventStatusType
typedef VAR(uint8, TYPEDEF) Dem_EventStatusType;
#endif
#ifndef RTE_TYPE_Dem_DebounceResetStatusType
#define RTE_TYPE_Dem_DebounceResetStatusType
typedef VAR(uint8, TYPEDEF) Dem_DebounceResetStatusType;
#endif
#ifndef RTE_TYPE_Dem_EventStatusExtendedType
#define RTE_TYPE_Dem_EventStatusExtendedType
typedef VAR(uint8, TYPEDEF) Dem_EventStatusExtendedType;
#endif
#ifndef RTE_TYPE_Dem_DTCOriginType
#define RTE_TYPE_Dem_DTCOriginType
typedef VAR(uint16, TYPEDEF) Dem_DTCOriginType;
#endif
#ifndef RTE_TYPE_Dem_DTCFormatType
#define RTE_TYPE_Dem_DTCFormatType
typedef VAR(uint8, TYPEDEF) Dem_DTCFormatType;
#endif
#ifndef RTE_TYPE_Dem_InitMonitorReasonType
#define RTE_TYPE_Dem_InitMonitorReasonType
typedef VAR(uint8, TYPEDEF) Dem_InitMonitorReasonType;
#endif
#ifndef RTE_TYPE_Dem_OperationCycleStateType
#define RTE_TYPE_Dem_OperationCycleStateType
typedef VAR(uint8, TYPEDEF) Dem_OperationCycleStateType;
#endif
#ifndef RTE_TYPE_Dem_DTCStatusMaskType
#define RTE_TYPE_Dem_DTCStatusMaskType
typedef VAR(uint8, TYPEDEF) Dem_DTCStatusMaskType;
#endif
#ifndef RTE_TYPE_Dem_IndicatorStatusType
#define RTE_TYPE_Dem_IndicatorStatusType
typedef VAR(uint8, TYPEDEF) Dem_IndicatorStatusType;
#endif
#ifndef RTE_TYPE_Dem_MaxDataValueType
#define RTE_TYPE_Dem_MaxDataValueType
typedef VAR(uint8, TYPEDEF) Dem_MaxDataValueType[32];
#endif
#ifndef RTE_TYPE_Dem_DataDemDataElementClass_Odometer_ArrayType
#define RTE_TYPE_Dem_DataDemDataElementClass_Odometer_ArrayType
typedef VAR(uint8, TYPEDEF) Dem_DataDemDataElementClass_Odometer_ArrayType[4];
#endif
#ifndef RTE_TYPE_Dem_DataDemDataElementClass_Voltage_ArrayType
#define RTE_TYPE_Dem_DataDemDataElementClass_Voltage_ArrayType
typedef VAR(uint8, TYPEDEF) Dem_DataDemDataElementClass_Voltage_ArrayType[1];
#endif
#ifndef RTE_TYPE_Dem_DataDemDataElementClass_VehicleSpeed_ArrayType
#define RTE_TYPE_Dem_DataDemDataElementClass_VehicleSpeed_ArrayType
typedef VAR(uint8, TYPEDEF) Dem_DataDemDataElementClass_VehicleSpeed_ArrayType[2];
#endif
#ifndef RTE_TYPE_Dem_DataDemDataElementClass_LocalTime_ArrayType
#define RTE_TYPE_Dem_DataDemDataElementClass_LocalTime_ArrayType
typedef VAR(uint8, TYPEDEF) Dem_DataDemDataElementClass_LocalTime_ArrayType[6];
#endif
#ifndef RTE_TYPE_Dem_DataDemDataElementClass_ECUTemperature_ArrayType
#define RTE_TYPE_Dem_DataDemDataElementClass_ECUTemperature_ArrayType
typedef VAR(uint8, TYPEDEF) Dem_DataDemDataElementClass_ECUTemperature_ArrayType[2];
#endif
#ifndef RTE_TYPE_Dem_DataDemDataElementClass_Yawrate_ArrayType
#define RTE_TYPE_Dem_DataDemDataElementClass_Yawrate_ArrayType
typedef VAR(uint8, TYPEDEF) Dem_DataDemDataElementClass_Yawrate_ArrayType[2];
#endif
#ifndef RTE_TYPE_Dem_DataDemDataElementClass_EngineSpeed_ArrayType
#define RTE_TYPE_Dem_DataDemDataElementClass_EngineSpeed_ArrayType
typedef VAR(uint8, TYPEDEF) Dem_DataDemDataElementClass_EngineSpeed_ArrayType[2];
#endif
#ifndef RTE_TYPE_Dem_DataDemDataElementClass_GearPosition_ArrayType
#define RTE_TYPE_Dem_DataDemDataElementClass_GearPosition_ArrayType
typedef VAR(uint8, TYPEDEF) Dem_DataDemDataElementClass_GearPosition_ArrayType[1];
#endif
#ifndef RTE_TYPE_Dem_DataDemDataElementClass_SteeringAngle_ArrayType
#define RTE_TYPE_Dem_DataDemDataElementClass_SteeringAngle_ArrayType
typedef VAR(uint8, TYPEDEF) Dem_DataDemDataElementClass_SteeringAngle_ArrayType[2];
#endif
#ifndef RTE_TYPE_Dem_DataDemDataElementClass_Extended_SystemKernelErrMap_ArrayType
#define RTE_TYPE_Dem_DataDemDataElementClass_Extended_SystemKernelErrMap_ArrayType
typedef VAR(uint8, TYPEDEF) Dem_DataDemDataElementClass_Extended_SystemKernelErrMap_ArrayType[10];
#endif
#ifndef RTE_TYPE_EcuM_ShutdownCauseType
#define RTE_TYPE_EcuM_ShutdownCauseType
typedef VAR(uint8, TYPEDEF) EcuM_ShutdownCauseType;
#endif
#ifndef RTE_TYPE_EcuM_BootTargetType
#define RTE_TYPE_EcuM_BootTargetType
typedef VAR(uint8, TYPEDEF) EcuM_BootTargetType;
#endif
#ifndef RTE_TYPE_EcuM_StateType
#define RTE_TYPE_EcuM_StateType
typedef VAR(uint8, TYPEDEF) EcuM_StateType;
#endif
#ifndef RTE_TYPE_FunctionIdType
#define RTE_TYPE_FunctionIdType
typedef VAR(unsigned char, TYPEDEF) FunctionIdType;
#endif
#ifndef RTE_TYPE_NvM_DstPtrType
#define RTE_TYPE_NvM_DstPtrType
typedef P2VAR(void, TYPEDEF, RTE_APPL_DATA) NvM_DstPtrType;
#endif
#ifndef RTE_TYPE_NvM_SrcPtrType
#define RTE_TYPE_NvM_SrcPtrType
typedef P2CONST(void, TYPEDEF, RTE_APPL_DATA) NvM_SrcPtrType;
#endif
#ifndef RTE_TYPE_NvM_BlockIdType
#define RTE_TYPE_NvM_BlockIdType
typedef VAR(uint16, TYPEDEF) NvM_BlockIdType;
#endif
#ifndef RTE_TYPE_NvM_RequestResultType
#define RTE_TYPE_NvM_RequestResultType
typedef VAR(uint8, TYPEDEF) NvM_RequestResultType;
#endif
#ifndef RTE_TYPE_StbM_TimeBaseStatusType
#define RTE_TYPE_StbM_TimeBaseStatusType
typedef VAR(uint8, TYPEDEF) StbM_TimeBaseStatusType;
#endif
#ifndef RTE_TYPE_StbM_MasterConfigType
#define RTE_TYPE_StbM_MasterConfigType
typedef VAR(uint8, TYPEDEF) StbM_MasterConfigType;
#endif
#ifndef RTE_TYPE_StbM_SynchronizedTimeBaseType
#define RTE_TYPE_StbM_SynchronizedTimeBaseType
typedef VAR(uint16, TYPEDEF) StbM_SynchronizedTimeBaseType;
#endif
#ifndef RTE_TYPE_StbM_TimeBaseNotificationType
#define RTE_TYPE_StbM_TimeBaseNotificationType
typedef VAR(uint32, TYPEDEF) StbM_TimeBaseNotificationType;
#endif
#ifndef RTE_TYPE_StbM_TimeStampType
#define RTE_TYPE_StbM_TimeStampType
typedef struct
{
  VAR(StbM_TimeBaseStatusType, TYPEDEF) timeBaseStatus;
  VAR(uint32, TYPEDEF) nanoseconds;
  VAR(uint32, TYPEDEF) seconds;
  VAR(uint16, TYPEDEF) secondsHi;
} StbM_TimeStampType;
#endif
#ifndef RTE_TYPE_StbM_TimeDiffType
#define RTE_TYPE_StbM_TimeDiffType
typedef VAR(sint32, TYPEDEF) StbM_TimeDiffType;
#endif
#ifndef RTE_TYPE_StbM_UserDataType
#define RTE_TYPE_StbM_UserDataType
typedef struct
{
  VAR(uint8, TYPEDEF) userDataLength;
  VAR(uint8, TYPEDEF) userByte0;
  VAR(uint8, TYPEDEF) userByte1;
  VAR(uint8, TYPEDEF) userByte2;
} StbM_UserDataType;
#endif
#ifndef RTE_TYPE_StbM_RateDeviationType
#define RTE_TYPE_StbM_RateDeviationType
typedef VAR(sint16, TYPEDEF) StbM_RateDeviationType;
#endif
#ifndef RTE_TYPE_StbM_SyncRecordTableHeadType
#define RTE_TYPE_StbM_SyncRecordTableHeadType
typedef struct
{
  VAR(uint8, TYPEDEF) SynchronizedTimeDomain;
  VAR(uint32, TYPEDEF) HWfrequency;
  VAR(uint32, TYPEDEF) HWprescaler;
} StbM_SyncRecordTableHeadType;
#endif
#ifndef RTE_TYPE_StbM_SyncRecordTableBlockType
#define RTE_TYPE_StbM_SyncRecordTableBlockType
typedef struct
{
  VAR(uint32, TYPEDEF) GlbSeconds;
  VAR(uint32, TYPEDEF) GlbNanoSeconds;
  VAR(StbM_TimeBaseStatusType, TYPEDEF) TimeBaseStatus;
  VAR(uint32, TYPEDEF) VirtualLocalTimeLow;
  VAR(StbM_RateDeviationType, TYPEDEF) RateDeviation;
  VAR(uint32, TYPEDEF) LocSeconds;
  VAR(uint32, TYPEDEF) LocNanoSeconds;
  VAR(uint32, TYPEDEF) PathDelay;
} StbM_SyncRecordTableBlockType;
#endif
#ifndef RTE_TYPE_StbM_OffsetRecordTableHeadType
#define RTE_TYPE_StbM_OffsetRecordTableHeadType
typedef struct
{
  VAR(uint8, TYPEDEF) OffsetTimeDomain;
} StbM_OffsetRecordTableHeadType;
#endif
#ifndef RTE_TYPE_StbM_OffsetRecordTableBlockType
#define RTE_TYPE_StbM_OffsetRecordTableBlockType
typedef struct
{
  VAR(uint32, TYPEDEF) GlbSeconds;
  VAR(uint32, TYPEDEF) GlbNanoSeconds;
  VAR(StbM_TimeBaseStatusType, TYPEDEF) TimeBaseStatus;
} StbM_OffsetRecordTableBlockType;
#endif
#ifndef RTE_TYPE_StbM_VirtualLocalTimeType
#define RTE_TYPE_StbM_VirtualLocalTimeType
typedef struct
{
  VAR(uint32, TYPEDEF) nanosecondsLo;
  VAR(uint32, TYPEDEF) nanosecondsHi;
} StbM_VirtualLocalTimeType;
#endif
#ifndef RTE_TYPE_StbM_CustomerIdType
#define RTE_TYPE_StbM_CustomerIdType
typedef VAR(uint16, TYPEDEF) StbM_CustomerIdType;
#endif
#ifndef RTE_TYPE_WdgM_SupervisedEntityIdType
#define RTE_TYPE_WdgM_SupervisedEntityIdType
typedef VAR(uint16, TYPEDEF) WdgM_SupervisedEntityIdType;
#endif
#ifndef RTE_TYPE_WdgM_CheckpointIdType
#define RTE_TYPE_WdgM_CheckpointIdType
typedef VAR(uint16, TYPEDEF) WdgM_CheckpointIdType;
#endif
#ifndef RTE_TYPE_ABP_CamRawData_t
#define RTE_TYPE_ABP_CamRawData_t
typedef struct
{
  VAR(float, TYPEDEF) ABP_CamCorridorCurvature_1pm;
  VAR(float, TYPEDEF) ABP_CamLateralError_m;
  VAR(float, TYPEDEF) ABP_CamHeadingError_rad;
} ABP_CamRawData_t;
#endif
#ifndef RTE_TYPE_bool8
#define RTE_TYPE_bool8
typedef VAR(unsigned char, TYPEDEF) bool8;
#endif
#ifndef RTE_TYPE_ABSCtrl
#define RTE_TYPE_ABSCtrl
typedef VAR(bool8, TYPEDEF) ABSCtrl;
#endif
#ifndef RTE_TYPE_ACCExitMsgReq_t
#define RTE_TYPE_ACCExitMsgReq_t
typedef VAR(unsigned char, TYPEDEF) ACCExitMsgReq_t;
#endif
#ifndef RTE_TYPE_ACCFailureMode_t
#define RTE_TYPE_ACCFailureMode_t
typedef VAR(unsigned char, TYPEDEF) ACCFailureMode_t;
#endif
#ifndef RTE_TYPE_ucAccSelBits_t
#define RTE_TYPE_ucAccSelBits_t
typedef VAR(unsigned char, TYPEDEF) ucAccSelBits_t;
#endif
#ifndef RTE_TYPE_ACCPresel_t
#define RTE_TYPE_ACCPresel_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) ucAccObjQuality;
  VAR(ucAccSelBits_t, TYPEDEF) ucAccSelBits;
  VAR(unsigned char, TYPEDEF) ucFPSSenQuality;
  VAR(unsigned char, TYPEDEF) ucFPSFunQuality;
} ACCPresel_t;
#endif
#ifndef RTE_TYPE_ACCStatus_Radar_t
#define RTE_TYPE_ACCStatus_Radar_t
typedef VAR(unsigned char, TYPEDEF) ACCStatus_Radar_t;
#endif
#ifndef RTE_TYPE_ACCTextMessageBD10_t
#define RTE_TYPE_ACCTextMessageBD10_t
typedef VAR(unsigned char, TYPEDEF) ACCTextMessageBD10_t;
#endif
#ifndef RTE_TYPE_ACCTextMessage_t
#define RTE_TYPE_ACCTextMessage_t
typedef VAR(unsigned char, TYPEDEF) ACCTextMessage_t;
#endif
#ifndef RTE_TYPE_ACCTraceTrajectory_t
#define RTE_TYPE_ACCTraceTrajectory_t
typedef struct
{
  VAR(float, TYPEDEF) fCurve;
  VAR(float, TYPEDEF) fWeight;
  VAR(float, TYPEDEF) fMaxDist;
} ACCTraceTrajectory_t;
#endif
#ifndef RTE_TYPE_ACC_IACCHWATextInfoForDriver_t
#define RTE_TYPE_ACC_IACCHWATextInfoForDriver_t
typedef VAR(unsigned char, TYPEDEF) ACC_IACCHWATextInfoForDriver_t;
#endif
#ifndef RTE_TYPE_ACC_LngTakeOverReq_t
#define RTE_TYPE_ACC_LngTakeOverReq_t
typedef VAR(unsigned char, TYPEDEF) ACC_LngTakeOverReq_t;
#endif
#ifndef RTE_TYPE_float32_t
#define RTE_TYPE_float32_t
typedef VAR(float, TYPEDEF) float32_t;
#endif
#ifndef RTE_TYPE_uint8_t
#define RTE_TYPE_uint8_t
typedef VAR(unsigned char, TYPEDEF) uint8_t;
#endif
#ifndef RTE_TYPE_ADataRawSafe1
#define RTE_TYPE_ADataRawSafe1
typedef struct
{
  VAR(float32_t, TYPEDEF) ALat;
  VAR(uint8_t, TYPEDEF) ALat1Qf;
  VAR(float32_t, TYPEDEF) ALgt;
  VAR(uint8_t, TYPEDEF) ALgt1Qf;
  VAR(float32_t, TYPEDEF) AVert;
  VAR(uint8_t, TYPEDEF) AVertQf;
  VAR(uint8_t, TYPEDEF) Chks;
  VAR(uint8_t, TYPEDEF) Cntr;
} ADataRawSafe1;
#endif
#ifndef RTE_TYPE_ALDW_Parameters_t
#define RTE_TYPE_ALDW_Parameters_t
typedef struct
{
  VAR(float, TYPEDEF) LKA_V_LKA_ACTIVE_LOW_KMH;
  VAR(float, TYPEDEF) LKA_V_LKA_ACTIVE_LOW_MPH;
  VAR(float, TYPEDEF) LKA_V_LKA_INACTIVE_LOW_KMH;
  VAR(float, TYPEDEF) LKA_V_LKA_INACTIVE_LOW_MPH;
  VAR(float, TYPEDEF) LKA_V_LKA_ACTIVE_HIGH_KMH;
  VAR(float, TYPEDEF) LKA_V_LKA_ACTIVE_HIGH_MPH;
  VAR(float, TYPEDEF) LKA_V_LKA_INACTIVE_HIGH_KMH;
  VAR(float, TYPEDEF) LKA_V_LKA_INACTIVE_HIGH_MPH;
  VAR(float, TYPEDEF) LKA_MIN_LANE_WIDTH;
  VAR(float, TYPEDEF) LKA_MIN_LANE_WIDTH_HYST;
  VAR(float, TYPEDEF) LKA_LANE_WIDTH_DEFAULT;
  VAR(float, TYPEDEF) LKA_T_MIN_WARNING_TIME;
  VAR(float, TYPEDEF) LKA_T_MAX_WARNING_TIME;
  VAR(float, TYPEDEF) LKA_SUPRESS_WARNING_TIME;
  VAR(float, TYPEDEF) LKA_TIME_TO_LINE_CROSS;
  VAR(float, TYPEDEF) LKA_SUPRESS_ACTIVITY_TIME;
  VAR(float, TYPEDEF) LKA_SUPRESS_LANE_CHANGE_TIME;
  VAR(float, TYPEDEF) LKA_SUPPRESS_CHASSIS_CONTROL_EVENT_TIME;
  VAR(float, TYPEDEF) LKA_SUPPRESS_TURNSIGNAL_TIME;
  VAR(float, TYPEDEF) LKA_SUPPRESS_TURNSIGNAL_MAX_TIME;
  VAR(float, TYPEDEF) LKA_WARNING_CANCEL_LATERAL_DISTANCE_INNER;
  VAR(float, TYPEDEF) LKA_WARNING_CANCEL_LATERAL_DISTANCE_OUTER;
  VAR(float, TYPEDEF) LKA_RESET_DISTANCE_INNER;
  VAR(float, TYPEDEF) LKA_RESET_DISTANCE_OUTER;
} ALDW_Parameters_t;
#endif
#ifndef RTE_TYPE_ALGO_OP_MODE_t
#define RTE_TYPE_ALGO_OP_MODE_t
typedef VAR(unsigned char, TYPEDEF) ALGO_OP_MODE_t;
#endif
#ifndef RTE_TYPE_AlgoDataTimeStamp_t
#define RTE_TYPE_AlgoDataTimeStamp_t
typedef VAR(unsigned int, TYPEDEF) AlgoDataTimeStamp_t;
#endif
#ifndef RTE_TYPE_AlgoCycleCounter_t
#define RTE_TYPE_AlgoCycleCounter_t
typedef VAR(unsigned short, TYPEDEF) AlgoCycleCounter_t;
#endif
#ifndef RTE_TYPE_AlgoSignalState_t
#define RTE_TYPE_AlgoSignalState_t
typedef VAR(unsigned char, TYPEDEF) AlgoSignalState_t;
#endif
#ifndef RTE_TYPE_a_reserve_array_t
#define RTE_TYPE_a_reserve_array_t
typedef VAR(unsigned char, TYPEDEF) a_reserve_array_t[3];
#endif
#ifndef RTE_TYPE_SignalHeader_t
#define RTE_TYPE_SignalHeader_t
typedef struct
{
  VAR(AlgoDataTimeStamp_t, TYPEDEF) uiTimeStamp;
  VAR(AlgoCycleCounter_t, TYPEDEF) uiMeasurementCounter;
  VAR(AlgoCycleCounter_t, TYPEDEF) uiCycleCounter;
  VAR(AlgoSignalState_t, TYPEDEF) eSigStatus;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
} SignalHeader_t;
#endif
#ifndef RTE_TYPE_a_Azimuth_array_t
#define RTE_TYPE_a_Azimuth_array_t
typedef VAR(float, TYPEDEF) a_Azimuth_array_t[1];
#endif
#ifndef RTE_TYPE_a_AngleDeviationsNear_array_t
#define RTE_TYPE_a_AngleDeviationsNear_array_t
typedef VAR(float, TYPEDEF) a_AngleDeviationsNear_array_t[721];
#endif
#ifndef RTE_TYPE_boolean
#define RTE_TYPE_boolean
typedef VAR(unsigned char, TYPEDEF) boolean;
#endif
#ifndef RTE_TYPE_u_Dummy_array_t_4
#define RTE_TYPE_u_Dummy_array_t_4
typedef VAR(unsigned char, TYPEDEF) u_Dummy_array_t_4[3];
#endif
#ifndef RTE_TYPE_ALN_t_MonitoringScan_t
#define RTE_TYPE_ALN_t_MonitoringScan_t
typedef struct
{
  VAR(float, TYPEDEF) f_Misalignment;
  VAR(float, TYPEDEF) f_Std;
  VAR(boolean, TYPEDEF) b_ResultsAvailable;
  VAR(u_Dummy_array_t_4, TYPEDEF) u_Dummy;
} ALN_t_MonitoringScan_t;
#endif
#ifndef RTE_TYPE_Monitoring_t
#define RTE_TYPE_Monitoring_t
typedef struct
{
  VAR(ALN_t_MonitoringScan_t, TYPEDEF) Elevation;
  VAR(float, TYPEDEF) f_CurrentElevationStd;
} Monitoring_t;
#endif
#ifndef RTE_TYPE_ALN_AzimuthCorrection_t
#define RTE_TYPE_ALN_AzimuthCorrection_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(a_Azimuth_array_t, TYPEDEF) a_Azimuth;
  VAR(float, TYPEDEF) f_Elevation;
  VAR(float, TYPEDEF) f_TunnelProbability;
  VAR(a_AngleDeviationsNear_array_t, TYPEDEF) a_AngleDeviationsNear;
  VAR(Monitoring_t, TYPEDEF) Monitoring;
} ALN_AzimuthCorrection_t;
#endif
#ifndef RTE_TYPE_SYS_t_HWSample
#define RTE_TYPE_SYS_t_HWSample
typedef VAR(unsigned short, TYPEDEF) SYS_t_HWSample;
#endif
#ifndef RTE_TYPE_a_Tx_array_t
#define RTE_TYPE_a_Tx_array_t
typedef VAR(float, TYPEDEF) a_Tx_array_t[1];
#endif
#ifndef RTE_TYPE_a_Rx_array_t
#define RTE_TYPE_a_Rx_array_t
typedef VAR(float, TYPEDEF) a_Rx_array_t[1];
#endif
#ifndef RTE_TYPE_a_RacerunnerExtern_array_t
#define RTE_TYPE_a_RacerunnerExtern_array_t
typedef VAR(float, TYPEDEF) a_RacerunnerExtern_array_t[2];
#endif
#ifndef RTE_TYPE_t_SensorTemperature
#define RTE_TYPE_t_SensorTemperature
typedef struct
{
  VAR(float, TYPEDEF) f_Vco;
  VAR(a_Tx_array_t, TYPEDEF) a_Tx;
  VAR(a_Rx_array_t, TYPEDEF) a_Rx;
  VAR(a_RacerunnerExtern_array_t, TYPEDEF) a_RacerunnerExtern;
} t_SensorTemperature;
#endif
#ifndef RTE_TYPE_u_Dummy_array_t
#define RTE_TYPE_u_Dummy_array_t
typedef VAR(unsigned char, TYPEDEF) u_Dummy_array_t[2];
#endif
#ifndef RTE_TYPE_s_EolParameters_t
#define RTE_TYPE_s_EolParameters_t
typedef struct
{
  VAR(float, TYPEDEF) f_DistanceTarget;
  VAR(float, TYPEDEF) f_AzimuthTarget;
  VAR(float, TYPEDEF) f_ElevationTarget;
  VAR(float, TYPEDEF) f_SetupAccuracyAzimuth;
  VAR(float, TYPEDEF) f_SetupAccuracyElevation;
  VAR(boolean, TYPEDEF) b_EolInspection;
  VAR(boolean, TYPEDEF) b_EolTargetIsCorner;
  VAR(u_Dummy_array_t, TYPEDEF) u_Dummy;
} s_EolParameters_t;
#endif
#ifndef RTE_TYPE_e_AlnOpMode_t
#define RTE_TYPE_e_AlnOpMode_t
typedef VAR(unsigned char, TYPEDEF) e_AlnOpMode_t;
#endif
#ifndef RTE_TYPE_u_CycleState_t
#define RTE_TYPE_u_CycleState_t
typedef VAR(unsigned char, TYPEDEF) u_CycleState_t;
#endif
#ifndef RTE_TYPE_u_Dummy_array_t_0
#define RTE_TYPE_u_Dummy_array_t_0
typedef VAR(unsigned char, TYPEDEF) u_Dummy_array_t_0[1];
#endif
#ifndef RTE_TYPE_ALN_BSWIn_t
#define RTE_TYPE_ALN_BSWIn_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(SYS_t_HWSample, TYPEDEF) HWSample;
  VAR(t_SensorTemperature, TYPEDEF) SensorTemperature;
  VAR(s_EolParameters_t, TYPEDEF) s_EolParameters;
  VAR(e_AlnOpMode_t, TYPEDEF) e_AlnOpMode;
  VAR(u_CycleState_t, TYPEDEF) u_CycleState;
  VAR(boolean, TYPEDEF) b_DrivingLevelDeadjusted;
  VAR(u_Dummy_array_t_0, TYPEDEF) u_Dummy;
  VAR(float, TYPEDEF) f_SystemElevationCorrection;
} ALN_BSWIn_t;
#endif
#ifndef RTE_TYPE_AlgoErrorState_t
#define RTE_TYPE_AlgoErrorState_t
typedef VAR(unsigned char, TYPEDEF) AlgoErrorState_t;
#endif
#ifndef RTE_TYPE_u_ElevationLow_array_t
#define RTE_TYPE_u_ElevationLow_array_t
typedef VAR(AlgoErrorState_t, TYPEDEF) u_ElevationLow_array_t[1];
#endif
#ifndef RTE_TYPE_u_ElevationHigh_array_t
#define RTE_TYPE_u_ElevationHigh_array_t
typedef VAR(AlgoErrorState_t, TYPEDEF) u_ElevationHigh_array_t[1];
#endif
#ifndef RTE_TYPE_u_AzimuthLeft_array_t
#define RTE_TYPE_u_AzimuthLeft_array_t
typedef VAR(AlgoErrorState_t, TYPEDEF) u_AzimuthLeft_array_t[1];
#endif
#ifndef RTE_TYPE_u_AzimuthRight_array_t
#define RTE_TYPE_u_AzimuthRight_array_t
typedef VAR(AlgoErrorState_t, TYPEDEF) u_AzimuthRight_array_t[1];
#endif
#ifndef RTE_TYPE_u_MaxPowerLow_array_t
#define RTE_TYPE_u_MaxPowerLow_array_t
typedef VAR(AlgoErrorState_t, TYPEDEF) u_MaxPowerLow_array_t[1];
#endif
#ifndef RTE_TYPE_u_MovingInterf_array_t
#define RTE_TYPE_u_MovingInterf_array_t
typedef VAR(AlgoErrorState_t, TYPEDEF) u_MovingInterf_array_t[1];
#endif
#ifndef RTE_TYPE_u_StationaryInterferer_array_t
#define RTE_TYPE_u_StationaryInterferer_array_t
typedef VAR(AlgoErrorState_t, TYPEDEF) u_StationaryInterferer_array_t[1];
#endif
#ifndef RTE_TYPE_u_PathCompTooHigh_array_t
#define RTE_TYPE_u_PathCompTooHigh_array_t
typedef VAR(AlgoErrorState_t, TYPEDEF) u_PathCompTooHigh_array_t[1];
#endif
#ifndef RTE_TYPE_u_AngleDevTooHigh_array_t
#define RTE_TYPE_u_AngleDevTooHigh_array_t
typedef VAR(AlgoErrorState_t, TYPEDEF) u_AngleDevTooHigh_array_t[1];
#endif
#ifndef RTE_TYPE_u_Dummy_array_t_1
#define RTE_TYPE_u_Dummy_array_t_1
typedef VAR(unsigned char, TYPEDEF) u_Dummy_array_t_1[3];
#endif
#ifndef RTE_TYPE_ALN_Errors_t
#define RTE_TYPE_ALN_Errors_t
typedef struct
{
  VAR(AlgoErrorState_t, TYPEDEF) u_NvmError;
  VAR(AlgoErrorState_t, TYPEDEF) u_MeasFreezeError;
  VAR(AlgoErrorState_t, TYPEDEF) u_NumericalError;
  VAR(AlgoErrorState_t, TYPEDEF) u_TimeOut;
  VAR(u_ElevationLow_array_t, TYPEDEF) u_ElevationLow;
  VAR(u_ElevationHigh_array_t, TYPEDEF) u_ElevationHigh;
  VAR(u_AzimuthLeft_array_t, TYPEDEF) u_AzimuthLeft;
  VAR(u_AzimuthRight_array_t, TYPEDEF) u_AzimuthRight;
  VAR(u_MaxPowerLow_array_t, TYPEDEF) u_MaxPowerLow;
  VAR(u_MovingInterf_array_t, TYPEDEF) u_MovingInterf;
  VAR(u_StationaryInterferer_array_t, TYPEDEF) u_StationaryInterferer;
  VAR(u_PathCompTooHigh_array_t, TYPEDEF) u_PathCompTooHigh;
  VAR(u_AngleDevTooHigh_array_t, TYPEDEF) u_AngleDevTooHigh;
  VAR(u_Dummy_array_t_1, TYPEDEF) u_Dummy;
} ALN_Errors_t;
#endif
#ifndef RTE_TYPE_ALN_DrivingConditions_t
#define RTE_TYPE_ALN_DrivingConditions_t
typedef struct
{
  VAR(boolean, TYPEDEF) b_AzimTunnelDetected;
  VAR(boolean, TYPEDEF) b_AzimSpeedThresholdExceeded;
  VAR(boolean, TYPEDEF) b_AzimAccelThresholdExceeded;
  VAR(boolean, TYPEDEF) b_AzimCurveThresholdExceeded;
  VAR(boolean, TYPEDEF) b_ElevTunnelDetected;
  VAR(boolean, TYPEDEF) b_ElevSpeedThresholdExceeded;
  VAR(boolean, TYPEDEF) b_ElevAccelThresholdExceeded;
  VAR(boolean, TYPEDEF) b_ElevCurveThresholdExceeded;
} ALN_DrivingConditions_t;
#endif
#ifndef RTE_TYPE_e_AlnState_t
#define RTE_TYPE_e_AlnState_t
typedef VAR(unsigned char, TYPEDEF) e_AlnState_t;
#endif
#ifndef RTE_TYPE_u_Dummy_array_t_2
#define RTE_TYPE_u_Dummy_array_t_2
typedef VAR(unsigned char, TYPEDEF) u_Dummy_array_t_2[1];
#endif
#ifndef RTE_TYPE_u_Dummy_array_t_3
#define RTE_TYPE_u_Dummy_array_t_3
typedef VAR(unsigned char, TYPEDEF) u_Dummy_array_t_3[2];
#endif
#ifndef RTE_TYPE_ALN_t_PartBlockZoneStatus
#define RTE_TYPE_ALN_t_PartBlockZoneStatus
typedef struct
{
  VAR(float, TYPEDEF) f_SideLobeLevel;
  VAR(float, TYPEDEF) f_SNRLoss;
  VAR(signed char, TYPEDEF) s_ErrorLevel;
  VAR(AlgoErrorState_t, TYPEDEF) u_PartialBlockageError;
  VAR(u_Dummy_array_t_3, TYPEDEF) u_Dummy;
} ALN_t_PartBlockZoneStatus;
#endif
#ifndef RTE_TYPE_ALN_t_PartBlockScanStatus
#define RTE_TYPE_ALN_t_PartBlockScanStatus
typedef VAR(ALN_t_PartBlockZoneStatus, TYPEDEF) ALN_t_PartBlockScanStatus[3];
#endif
#ifndef RTE_TYPE_a_PartialBlockageStatus_array_t
#define RTE_TYPE_a_PartialBlockageStatus_array_t
typedef VAR(ALN_t_PartBlockScanStatus, TYPEDEF) a_PartialBlockageStatus_array_t[1];
#endif
#ifndef RTE_TYPE_ALN_BSWOut_t
#define RTE_TYPE_ALN_BSWOut_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(ALN_Errors_t, TYPEDEF) ALN_Errors;
  VAR(ALN_DrivingConditions_t, TYPEDEF) ALN_DrivingConditions;
  VAR(float, TYPEDEF) f_Progress;
  VAR(float, TYPEDEF) f_EolPlateSnr;
  VAR(boolean, TYPEDEF) b_SensorDeadjusted;
  VAR(boolean, TYPEDEF) b_PartialBlockage;
  VAR(e_AlnState_t, TYPEDEF) e_AlnState;
  VAR(u_Dummy_array_t_2, TYPEDEF) u_Dummy;
  VAR(a_PartialBlockageStatus_array_t, TYPEDEF) a_PartialBlockageStatus;
} ALN_BSWOut_t;
#endif
#ifndef RTE_TYPE_a_Azimuth_array_t_0
#define RTE_TYPE_a_Azimuth_array_t_0
typedef VAR(float, TYPEDEF) a_Azimuth_array_t_0[1];
#endif
#ifndef RTE_TYPE_t_Complex16
#define RTE_TYPE_t_Complex16
typedef struct
{
  VAR(short, TYPEDEF) s_Real;
  VAR(short, TYPEDEF) s_Imag;
} t_Complex16;
#endif
#ifndef RTE_TYPE_FPGA_t_PathComp
#define RTE_TYPE_FPGA_t_PathComp
typedef VAR(t_Complex16, TYPEDEF) FPGA_t_PathComp[6];
#endif
#ifndef RTE_TYPE_a_PathCompensations_array_t
#define RTE_TYPE_a_PathCompensations_array_t
typedef VAR(FPGA_t_PathComp, TYPEDEF) a_PathCompensations_array_t[1];
#endif
#ifndef RTE_TYPE_a_AzimuthValid_array_t
#define RTE_TYPE_a_AzimuthValid_array_t
typedef VAR(boolean, TYPEDEF) a_AzimuthValid_array_t[1];
#endif
#ifndef RTE_TYPE_a_PathCompensationsValid_array_t
#define RTE_TYPE_a_PathCompensationsValid_array_t
typedef VAR(boolean, TYPEDEF) a_PathCompensationsValid_array_t[1];
#endif
#ifndef RTE_TYPE_u_Dummy_array_t_7
#define RTE_TYPE_u_Dummy_array_t_7
typedef VAR(unsigned char, TYPEDEF) u_Dummy_array_t_7[1];
#endif
#ifndef RTE_TYPE_ALN_t_NvmMethod
#define RTE_TYPE_ALN_t_NvmMethod
typedef struct
{
  VAR(float, TYPEDEF) f_Elevation;
  VAR(a_Azimuth_array_t_0, TYPEDEF) a_Azimuth;
  VAR(a_PathCompensations_array_t, TYPEDEF) a_PathCompensations;
  VAR(a_AzimuthValid_array_t, TYPEDEF) a_AzimuthValid;
  VAR(a_PathCompensationsValid_array_t, TYPEDEF) a_PathCompensationsValid;
  VAR(boolean, TYPEDEF) b_ElevationValid;
  VAR(u_Dummy_array_t_7, TYPEDEF) u_Dummy;
} ALN_t_NvmMethod;
#endif
#ifndef RTE_TYPE_a_CurrentAzimuthStd_array_t_0
#define RTE_TYPE_a_CurrentAzimuthStd_array_t_0
typedef VAR(float, TYPEDEF) a_CurrentAzimuthStd_array_t_0[1];
#endif
#ifndef RTE_TYPE_AngleDeviationsNvmNear_array_t
#define RTE_TYPE_AngleDeviationsNvmNear_array_t
typedef VAR(short, TYPEDEF) AngleDeviationsNvmNear_array_t[90];
#endif
#ifndef RTE_TYPE_u_Dummy_array_t_5
#define RTE_TYPE_u_Dummy_array_t_5
typedef VAR(unsigned char, TYPEDEF) u_Dummy_array_t_5[3];
#endif
#ifndef RTE_TYPE_MonopulsePhase_array_t
#define RTE_TYPE_MonopulsePhase_array_t
typedef VAR(short, TYPEDEF) MonopulsePhase_array_t[181];
#endif
#ifndef RTE_TYPE_ALN_Content_t
#define RTE_TYPE_ALN_Content_t
typedef struct
{
  VAR(ALN_t_NvmMethod, TYPEDEF) Current;
  VAR(ALN_t_NvmMethod, TYPEDEF) Eol;
  VAR(ALN_t_NvmMethod, TYPEDEF) Automatic;
  VAR(ALN_t_NvmMethod, TYPEDEF) Service;
  VAR(float, TYPEDEF) f_CurrentElevationStd;
  VAR(a_CurrentAzimuthStd_array_t_0, TYPEDEF) a_CurrentAzimuthStd;
  VAR(AngleDeviationsNvmNear_array_t, TYPEDEF) AngleDeviationsNvmNear;
  VAR(boolean, TYPEDEF) b_AngDevNearValid;
  VAR(u_Dummy_array_t_5, TYPEDEF) u_Dummy;
  VAR(MonopulsePhase_array_t, TYPEDEF) MonopulsePhase;
} ALN_Content_t;
#endif
#ifndef RTE_TYPE_Azimuth_array_t
#define RTE_TYPE_Azimuth_array_t
typedef VAR(ALN_t_MonitoringScan_t, TYPEDEF) Azimuth_array_t[1];
#endif
#ifndef RTE_TYPE_a_CurrentAzimuthStd_array_t
#define RTE_TYPE_a_CurrentAzimuthStd_array_t
typedef VAR(float, TYPEDEF) a_CurrentAzimuthStd_array_t[1];
#endif
#ifndef RTE_TYPE_e_AlignState_t
#define RTE_TYPE_e_AlignState_t
typedef VAR(unsigned char, TYPEDEF) e_AlignState_t;
#endif
#ifndef RTE_TYPE_e_Direction_t
#define RTE_TYPE_e_Direction_t
typedef VAR(unsigned char, TYPEDEF) e_Direction_t;
#endif
#ifndef RTE_TYPE_a_Dummy_array_t
#define RTE_TYPE_a_Dummy_array_t
typedef VAR(unsigned char, TYPEDEF) a_Dummy_array_t[3];
#endif
#ifndef RTE_TYPE_Direction_t
#define RTE_TYPE_Direction_t
typedef struct
{
  VAR(float, TYPEDEF) f_DirConfidence;
  VAR(e_Direction_t, TYPEDEF) e_Direction;
  VAR(a_Dummy_array_t, TYPEDEF) a_Dummy;
} Direction_t;
#endif
#ifndef RTE_TYPE_ALN_t_PartialBlockage_t
#define RTE_TYPE_ALN_t_PartialBlockage_t
typedef struct
{
  VAR(float, TYPEDEF) f_Probability;
  VAR(float, TYPEDEF) f_Confidence;
} ALN_t_PartialBlockage_t;
#endif
#ifndef RTE_TYPE_PartialBlockage_array_t
#define RTE_TYPE_PartialBlockage_array_t
typedef VAR(ALN_t_PartialBlockage_t, TYPEDEF) PartialBlockage_array_t[1];
#endif
#ifndef RTE_TYPE_ALN_Monitoring_t
#define RTE_TYPE_ALN_Monitoring_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(Azimuth_array_t, TYPEDEF) Azimuth;
  VAR(ALN_t_MonitoringScan_t, TYPEDEF) Elevation;
  VAR(float, TYPEDEF) f_ObstacleRangeMax;
  VAR(a_CurrentAzimuthStd_array_t, TYPEDEF) a_CurrentAzimuthStd;
  VAR(float, TYPEDEF) f_CurrentElevationStd;
  VAR(float, TYPEDEF) f_EgoSpeed;
  VAR(float, TYPEDEF) f_EgoSpeedStandardDeviation;
  VAR(float, TYPEDEF) f_ConfirmationEgoSpeed;
  VAR(AlgoDataTimeStamp_t, TYPEDEF) u_TimeStamp;
  VAR(e_AlignState_t, TYPEDEF) e_AlignState;
  VAR(unsigned char, TYPEDEF) u_UpdateCounter;
  VAR(unsigned char, TYPEDEF) u_ConfirmationUpdateCounter;
  VAR(unsigned char, TYPEDEF) u_Dummy;
  VAR(Direction_t, TYPEDEF) Direction;
  VAR(PartialBlockage_array_t, TYPEDEF) PartialBlockage;
} ALN_Monitoring_t;
#endif
#ifndef RTE_TYPE_a_MonopulsePhase_array_t
#define RTE_TYPE_a_MonopulsePhase_array_t
typedef VAR(float, TYPEDEF) a_MonopulsePhase_array_t[181];
#endif
#ifndef RTE_TYPE_a_MonopulseSamplePoints_array_t
#define RTE_TYPE_a_MonopulseSamplePoints_array_t
typedef VAR(float, TYPEDEF) a_MonopulseSamplePoints_array_t[181];
#endif
#ifndef RTE_TYPE_a_Dummy_array_t_0
#define RTE_TYPE_a_Dummy_array_t_0
typedef VAR(unsigned char, TYPEDEF) a_Dummy_array_t_0[3];
#endif
#ifndef RTE_TYPE_ALN_MonopulseCorrection_t
#define RTE_TYPE_ALN_MonopulseCorrection_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(a_MonopulsePhase_array_t, TYPEDEF) a_MonopulsePhase;
  VAR(a_MonopulseSamplePoints_array_t, TYPEDEF) a_MonopulseSamplePoints;
  VAR(boolean, TYPEDEF) b_Changed;
  VAR(a_Dummy_array_t_0, TYPEDEF) a_Dummy;
} ALN_MonopulseCorrection_t;
#endif
#ifndef RTE_TYPE_ALN_t_ErrorThresholdAsymmetric
#define RTE_TYPE_ALN_t_ErrorThresholdAsymmetric
typedef struct
{
  VAR(float, TYPEDEF) f_ThreshPos;
  VAR(float, TYPEDEF) f_ThreshNeg;
} ALN_t_ErrorThresholdAsymmetric;
#endif
#ifndef RTE_TYPE_ALN_t_ErrorThresholdMethod
#define RTE_TYPE_ALN_t_ErrorThresholdMethod
typedef struct
{
  VAR(ALN_t_ErrorThresholdAsymmetric, TYPEDEF) Eol;
  VAR(ALN_t_ErrorThresholdAsymmetric, TYPEDEF) Mon;
  VAR(ALN_t_ErrorThresholdAsymmetric, TYPEDEF) MonDiff;
} ALN_t_ErrorThresholdMethod;
#endif
#ifndef RTE_TYPE_u_Dummy_array_t_8
#define RTE_TYPE_u_Dummy_array_t_8
typedef VAR(unsigned char, TYPEDEF) u_Dummy_array_t_8[3];
#endif
#ifndef RTE_TYPE_ALN_Parameters_t
#define RTE_TYPE_ALN_Parameters_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(ALN_t_ErrorThresholdMethod, TYPEDEF) AzimuthThreshold;
  VAR(ALN_t_ErrorThresholdMethod, TYPEDEF) ElevationThreshold;
  VAR(float, TYPEDEF) f_ElevMonMax;
  VAR(float, TYPEDEF) f_AzimMonMax;
  VAR(float, TYPEDEF) f_ElevEolMax;
  VAR(float, TYPEDEF) f_AzimEolMax;
  VAR(float, TYPEDEF) f_ElevMonMaxDiff;
  VAR(float, TYPEDEF) f_AzimMonMaxDiff;
  VAR(boolean, TYPEDEF) b_ElevMonEnable;
  VAR(boolean, TYPEDEF) b_AzimMonEnable;
  VAR(boolean, TYPEDEF) b_EolChannelCalibEnable;
  VAR(boolean, TYPEDEF) b_OnlineChannelCalibEnable;
  VAR(boolean, TYPEDEF) b_OnlineMonopulseCalibEnable;
  VAR(boolean, TYPEDEF) b_OnlineAngleDevCalibEnable;
  VAR(u_Dummy_array_t_8, TYPEDEF) u_Dummy;
} ALN_Parameters_t;
#endif
#ifndef RTE_TYPE_a_PathCompensation_array_t
#define RTE_TYPE_a_PathCompensation_array_t
typedef VAR(FPGA_t_PathComp, TYPEDEF) a_PathCompensation_array_t[1];
#endif
#ifndef RTE_TYPE_u_Dummy_array_t_9
#define RTE_TYPE_u_Dummy_array_t_9
typedef VAR(unsigned char, TYPEDEF) u_Dummy_array_t_9[3];
#endif
#ifndef RTE_TYPE_ReqPathComp_t
#define RTE_TYPE_ReqPathComp_t
typedef struct
{
  VAR(a_PathCompensation_array_t, TYPEDEF) a_PathCompensation;
  VAR(boolean, TYPEDEF) b_Changed;
  VAR(u_Dummy_array_t_9, TYPEDEF) u_Dummy;
} ReqPathComp_t;
#endif
#ifndef RTE_TYPE_a_RangeGateLength_array_t
#define RTE_TYPE_a_RangeGateLength_array_t
typedef VAR(float, TYPEDEF) a_RangeGateLength_array_t[1];
#endif
#ifndef RTE_TYPE_e_GainReduction_t
#define RTE_TYPE_e_GainReduction_t
typedef VAR(unsigned char, TYPEDEF) e_GainReduction_t;
#endif
#ifndef RTE_TYPE_e_PowerReduction_t
#define RTE_TYPE_e_PowerReduction_t
typedef VAR(unsigned char, TYPEDEF) e_PowerReduction_t;
#endif
#ifndef RTE_TYPE_AlignmentMode_t
#define RTE_TYPE_AlignmentMode_t
typedef struct
{
  VAR(a_RangeGateLength_array_t, TYPEDEF) a_RangeGateLength;
  VAR(e_GainReduction_t, TYPEDEF) e_GainReduction;
  VAR(e_PowerReduction_t, TYPEDEF) e_PowerReduction;
  VAR(boolean, TYPEDEF) b_AngleWindowRect;
  VAR(boolean, TYPEDEF) b_UseRangeGateLength;
} AlignmentMode_t;
#endif
#ifndef RTE_TYPE_ALN_ReqHWConfig_t
#define RTE_TYPE_ALN_ReqHWConfig_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(ReqPathComp_t, TYPEDEF) ReqPathComp;
  VAR(AlignmentMode_t, TYPEDEF) AlignmentMode;
} ALN_ReqHWConfig_t;
#endif
#ifndef RTE_TYPE_u_Dummy_array_t_6
#define RTE_TYPE_u_Dummy_array_t_6
typedef VAR(unsigned char, TYPEDEF) u_Dummy_array_t_6[3];
#endif
#ifndef RTE_TYPE_ALN_t_Nvm
#define RTE_TYPE_ALN_t_Nvm
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(ALN_Content_t, TYPEDEF) ALN_Content;
  VAR(boolean, TYPEDEF) b_NvmContentValid;
  VAR(u_Dummy_array_t_6, TYPEDEF) u_Dummy;
} ALN_t_Nvm;
#endif
#ifndef RTE_TYPE_ALgtReqForCmftMod_t
#define RTE_TYPE_ALgtReqForCmftMod_t
typedef VAR(unsigned char, TYPEDEF) ALgtReqForCmftMod_t;
#endif
#ifndef RTE_TYPE_sint16_t
#define RTE_TYPE_sint16_t
typedef VAR(short, TYPEDEF) sint16_t;
#endif
#ifndef RTE_TYPE_ALgtReqForCmftToBrkRec1
#define RTE_TYPE_ALgtReqForCmftToBrkRec1
typedef struct
{
  VAR(sint16_t, TYPEDEF) LgtNegLimForJerkForCmftToBrk;
  VAR(sint16_t, TYPEDEF) LgtPosLimForJerkForCmftToBrk;
  VAR(boolean, TYPEDEF) BrkActrReqdForCmft;
  VAR(sint16_t, TYPEDEF) ALgtReqForCmftToBrk;
} ALgtReqForCmftToBrkRec1;
#endif
#ifndef RTE_TYPE_ALgtReqForCmftToPrpsnRec1
#define RTE_TYPE_ALgtReqForCmftToPrpsnRec1
typedef struct
{
  VAR(sint16_t, TYPEDEF) ALgtReqForCmftToPrpsn;
  VAR(boolean, TYPEDEF) PrpsnActrReqdForCmft;
  VAR(sint16_t, TYPEDEF) LgtPosLimForJerkForCmftToPrpsn;
  VAR(sint16_t, TYPEDEF) LgtNegLimForJerkForCmftToPrpsn;
} ALgtReqForCmftToPrpsnRec1;
#endif
#ifndef RTE_TYPE_ALim_t
#define RTE_TYPE_ALim_t
typedef VAR(boolean, TYPEDEF) ALim_t;
#endif
#ifndef RTE_TYPE_AResp_t
#define RTE_TYPE_AResp_t
typedef VAR(boolean, TYPEDEF) AResp_t;
#endif
#ifndef RTE_TYPE_ALgtRespAndLimToPrpsnRec1
#define RTE_TYPE_ALgtRespAndLimToPrpsnRec1
typedef struct
{
  VAR(ALim_t, TYPEDEF) ALgtLimForTrPwrForCmftToPrpsn;
  VAR(AResp_t, TYPEDEF) ALgtRespForTrPwrForCmftToPrpsn;
} ALgtRespAndLimToPrpsnRec1;
#endif
#ifndef RTE_TYPE_GenQf_t
#define RTE_TYPE_GenQf_t
typedef VAR(unsigned char, TYPEDEF) GenQf_t;
#endif
#ifndef RTE_TYPE_ALgtStdFromWhlSpdSafe1
#define RTE_TYPE_ALgtStdFromWhlSpdSafe1
typedef struct
{
  VAR(sint16_t, TYPEDEF) ALgtStdFromWhlSpd;
  VAR(GenQf_t, TYPEDEF) ALgtStdFromWhlSpdQf;
  VAR(uint8_t, TYPEDEF) ALgtStdFromWhlSpdChks;
  VAR(uint8_t, TYPEDEF) ALgtStdFromWhlSpdCntr;
} ALgtStdFromWhlSpdSafe1;
#endif
#ifndef RTE_TYPE_AlgoInterfaceVersionNumber_t
#define RTE_TYPE_AlgoInterfaceVersionNumber_t
typedef VAR(unsigned int, TYPEDEF) AlgoInterfaceVersionNumber_t;
#endif
#ifndef RTE_TYPE_s_LD_BoundaryStatus_t
#define RTE_TYPE_s_LD_BoundaryStatus_t
typedef struct
{
  VAR(boolean, TYPEDEF) bAvailable;
  VAR(unsigned char, TYPEDEF) iQuality;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
  VAR(unsigned int, TYPEDEF) uiAgeFrames;
  VAR(float, TYPEDEF) fAgeMeter;
} s_LD_BoundaryStatus_t;
#endif
#ifndef RTE_TYPE_eType_t
#define RTE_TYPE_eType_t
typedef VAR(unsigned int, TYPEDEF) eType_t;
#endif
#ifndef RTE_TYPE_s_LD_DashedMarkerParameters_t
#define RTE_TYPE_s_LD_DashedMarkerParameters_t
typedef struct
{
  VAR(float, TYPEDEF) fDashLengthMeter;
  VAR(float, TYPEDEF) fVoidLengthMeter;
  VAR(float, TYPEDEF) fDashPhase;
} s_LD_DashedMarkerParameters_t;
#endif
#ifndef RTE_TYPE_s_LD_BoundaryType_t
#define RTE_TYPE_s_LD_BoundaryType_t
typedef struct
{
  VAR(eType_t, TYPEDEF) eType;
  VAR(s_LD_DashedMarkerParameters_t, TYPEDEF) sTypeParameters;
} s_LD_BoundaryType_t;
#endif
#ifndef RTE_TYPE_eColor_t
#define RTE_TYPE_eColor_t
typedef VAR(unsigned int, TYPEDEF) eColor_t;
#endif
#ifndef RTE_TYPE_s_LD_BoundaryAttributes_t
#define RTE_TYPE_s_LD_BoundaryAttributes_t
typedef struct
{
  VAR(s_LD_BoundaryType_t, TYPEDEF) sType;
  VAR(eColor_t, TYPEDEF) eColor;
} s_LD_BoundaryAttributes_t;
#endif
#ifndef RTE_TYPE_s_LD_Clothoid_t
#define RTE_TYPE_s_LD_Clothoid_t
typedef struct
{
  VAR(float, TYPEDEF) fCurvature;
  VAR(float, TYPEDEF) fCurvatureStd;
  VAR(float, TYPEDEF) fCurvatureRate;
  VAR(float, TYPEDEF) fCurvatureRateStd;
  VAR(float, TYPEDEF) fValidLengthMeter;
} s_LD_Clothoid_t;
#endif
#ifndef RTE_TYPE_s_LD_BoundaryParametric_t
#define RTE_TYPE_s_LD_BoundaryParametric_t
typedef struct
{
  VAR(float, TYPEDEF) fDistanceMeter;
  VAR(float, TYPEDEF) fDistanceStdMeter;
  VAR(float, TYPEDEF) fYawAngleRad;
  VAR(float, TYPEDEF) fYawAngleStdRad;
  VAR(s_LD_Clothoid_t, TYPEDEF) sClothoidNear;
  VAR(s_LD_Clothoid_t, TYPEDEF) sClothoidFar;
  VAR(s_LD_Clothoid_t, TYPEDEF) sClothoidVertical;
  VAR(float, TYPEDEF) fWidthMeter;
  VAR(float, TYPEDEF) fHeightMeter;
} s_LD_BoundaryParametric_t;
#endif
#ifndef RTE_TYPE_afPointCoordinatesYMeter_array_t
#define RTE_TYPE_afPointCoordinatesYMeter_array_t
typedef VAR(float, TYPEDEF) afPointCoordinatesYMeter_array_t[100];
#endif
#ifndef RTE_TYPE_s_LD_BoundaryShape_t
#define RTE_TYPE_s_LD_BoundaryShape_t
typedef struct
{
  VAR(afPointCoordinatesYMeter_array_t, TYPEDEF) afPointCoordinatesYMeter;
} s_LD_BoundaryShape_t;
#endif
#ifndef RTE_TYPE_s_LD_BoundaryGeometry_t
#define RTE_TYPE_s_LD_BoundaryGeometry_t
typedef struct
{
  VAR(s_LD_BoundaryParametric_t, TYPEDEF) sParameters;
  VAR(s_LD_BoundaryShape_t, TYPEDEF) sPolygon;
} s_LD_BoundaryGeometry_t;
#endif
#ifndef RTE_TYPE_asLaneBoundary
#define RTE_TYPE_asLaneBoundary
typedef struct
{
  VAR(s_LD_BoundaryStatus_t, TYPEDEF) sStatus;
  VAR(s_LD_BoundaryAttributes_t, TYPEDEF) sAttributes;
  VAR(s_LD_BoundaryGeometry_t, TYPEDEF) sGeometry;
} asLaneBoundary;
#endif
#ifndef RTE_TYPE_aiLaneBoundariesRight_array_t
#define RTE_TYPE_aiLaneBoundariesRight_array_t
typedef VAR(signed char, TYPEDEF) aiLaneBoundariesRight_array_t[3];
#endif
#ifndef RTE_TYPE_aiLaneBoundariesLeft_array_t
#define RTE_TYPE_aiLaneBoundariesLeft_array_t
typedef VAR(signed char, TYPEDEF) aiLaneBoundariesLeft_array_t[3];
#endif
#ifndef RTE_TYPE_eLaneEventType_t
#define RTE_TYPE_eLaneEventType_t
typedef VAR(unsigned int, TYPEDEF) eLaneEventType_t;
#endif
#ifndef RTE_TYPE_s_LD_Event_t
#define RTE_TYPE_s_LD_Event_t
typedef struct
{
  VAR(eLaneEventType_t, TYPEDEF) eLaneEventType;
  VAR(float, TYPEDEF) fEventDist;
  VAR(unsigned char, TYPEDEF) iEventQuality;
  VAR(unsigned char, TYPEDEF) iMergeSplitToTrackId;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
} s_LD_Event_t;
#endif
#ifndef RTE_TYPE_s_LD_LaneInformation_t
#define RTE_TYPE_s_LD_LaneInformation_t
typedef struct
{
  VAR(aiLaneBoundariesRight_array_t, TYPEDEF) aiLaneBoundariesRight;
  VAR(aiLaneBoundariesLeft_array_t, TYPEDEF) aiLaneBoundariesLeft;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
  VAR(s_LD_Event_t, TYPEDEF) sEventRight;
  VAR(s_LD_Event_t, TYPEDEF) sEventLeft;
} s_LD_LaneInformation_t;
#endif
#ifndef RTE_TYPE_eOriginCoordinateSystem_t
#define RTE_TYPE_eOriginCoordinateSystem_t
typedef VAR(unsigned int, TYPEDEF) eOriginCoordinateSystem_t;
#endif
#ifndef RTE_TYPE_eParallelModelActive_t
#define RTE_TYPE_eParallelModelActive_t
typedef VAR(unsigned int, TYPEDEF) eParallelModelActive_t;
#endif
#ifndef RTE_TYPE_s_LD_ConstructionSite_t
#define RTE_TYPE_s_LD_ConstructionSite_t
typedef struct
{
  VAR(int, TYPEDEF) CS_MULTIPLE_MARKER;
  VAR(int, TYPEDEF) CS_LEFT_BARRIER;
  VAR(int, TYPEDEF) CS_RIGHT_BARRIER;
  VAR(int, TYPEDEF) CS_CROSSING_MARKER;
  VAR(int, TYPEDEF) CS_INHIBIT_SINGLE_LINE;
  VAR(int, TYPEDEF) CS_MARKER_COLOR_CHANGE;
  VAR(int, TYPEDEF) CS_HOLD;
} s_LD_ConstructionSite_t;
#endif
#ifndef RTE_TYPE_eLaneChange_t
#define RTE_TYPE_eLaneChange_t
typedef VAR(unsigned char, TYPEDEF) eLaneChange_t;
#endif
#ifndef RTE_TYPE_AbdOutputData_t
#define RTE_TYPE_AbdOutputData_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(asLaneBoundary, TYPEDEF) asLaneBoundary[10];
  VAR(s_LD_LaneInformation_t, TYPEDEF) sLaneInformation;
  VAR(eOriginCoordinateSystem_t, TYPEDEF) eOriginCoordinateSystem;
  VAR(eParallelModelActive_t, TYPEDEF) eParallelModelActive;
  VAR(s_LD_ConstructionSite_t, TYPEDEF) sConstructionSite;
  VAR(boolean, TYPEDEF) bCameraMisaligned;
  VAR(eLaneChange_t, TYPEDEF) eLaneChange;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
} AbdOutputData_t;
#endif
#ifndef RTE_TYPE_CtrlSts_t
#define RTE_TYPE_CtrlSts_t
typedef VAR(boolean, TYPEDEF) CtrlSts_t;
#endif
#ifndef RTE_TYPE_AbsCtrlActvForWhlRec1
#define RTE_TYPE_AbsCtrlActvForWhlRec1
typedef struct
{
  VAR(CtrlSts_t, TYPEDEF) AbsCtrlActvForWhlFrntLe;
  VAR(CtrlSts_t, TYPEDEF) AbsCtrlActvForWhlFrntRi;
  VAR(CtrlSts_t, TYPEDEF) AbsCtrlActvForWhlReLe;
  VAR(CtrlSts_t, TYPEDEF) AbsCtrlActvForWhlReRi;
} AbsCtrlActvForWhlRec1;
#endif
#ifndef RTE_TYPE_AbsWarnIndcnReq_t
#define RTE_TYPE_AbsWarnIndcnReq_t
typedef VAR(unsigned char, TYPEDEF) AbsWarnIndcnReq_t;
#endif
#ifndef RTE_TYPE_AbsolutKinematics_t
#define RTE_TYPE_AbsolutKinematics_t
typedef struct
{
  VAR(float, TYPEDEF) fAbsVelocityX;
  VAR(float, TYPEDEF) fAbsAccelerationX;
} AbsolutKinematics_t;
#endif
#ifndef RTE_TYPE_aLastError_array_t
#define RTE_TYPE_aLastError_array_t
typedef VAR(unsigned int, TYPEDEF) aLastError_array_t[10];
#endif
#ifndef RTE_TYPE_AcalStatistics_t
#define RTE_TYPE_AcalStatistics_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(float, TYPEDEF) fKmetersCurrent;
  VAR(float, TYPEDEF) fKmetersLastAutoCalibration;
  VAR(float, TYPEDEF) fMetersDistanceLastAutoCalibration;
  VAR(unsigned int, TYPEDEF) uiFrameCountLastAutoCalibration;
  VAR(unsigned int, TYPEDEF) uiLastCalibrationResultCode;
  VAR(aLastError_array_t, TYPEDEF) aLastError;
} AcalStatistics_t;
#endif
#ifndef RTE_TYPE_AccelSwitch_t
#define RTE_TYPE_AccelSwitch_t
typedef VAR(unsigned char, TYPEDEF) AccelSwitch_t;
#endif
#ifndef RTE_TYPE_DecelSwitch_t
#define RTE_TYPE_DecelSwitch_t
typedef VAR(unsigned char, TYPEDEF) DecelSwitch_t;
#endif
#ifndef RTE_TYPE_AccLeverInput_t
#define RTE_TYPE_AccLeverInput_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(boolean, TYPEDEF) Set;
  VAR(boolean, TYPEDEF) Cancel;
  VAR(boolean, TYPEDEF) Resume;
  VAR(AccelSwitch_t, TYPEDEF) AccelSwitch;
  VAR(DecelSwitch_t, TYPEDEF) DecelSwitch;
  VAR(boolean, TYPEDEF) MainMode;
  VAR(boolean, TYPEDEF) HeadwayInc;
  VAR(boolean, TYPEDEF) HeadwayDec;
  VAR(unsigned char, TYPEDEF) Headway;
  VAR(boolean, TYPEDEF) DM_Setting;
  VAR(boolean, TYPEDEF) FCA_Setting;
  VAR(unsigned char, TYPEDEF) reserved1;
} AccLeverInput_t;
#endif
#ifndef RTE_TYPE_EM_t_GenObjDynamicProperty
#define RTE_TYPE_EM_t_GenObjDynamicProperty
typedef VAR(unsigned char, TYPEDEF) EM_t_GenObjDynamicProperty;
#endif
#ifndef RTE_TYPE_EM_t_GenObjMaintenanceState
#define RTE_TYPE_EM_t_GenObjMaintenanceState
typedef VAR(unsigned char, TYPEDEF) EM_t_GenObjMaintenanceState;
#endif
#ifndef RTE_TYPE_ObjNumber_t
#define RTE_TYPE_ObjNumber_t
typedef VAR(signed char, TYPEDEF) ObjNumber_t;
#endif
#ifndef RTE_TYPE_FCTObjUsageState_t
#define RTE_TYPE_FCTObjUsageState_t
typedef VAR(unsigned char, TYPEDEF) FCTObjUsageState_t;
#endif
#ifndef RTE_TYPE_AccOOIGenAttributes_t
#define RTE_TYPE_AccOOIGenAttributes_t
typedef struct
{
  VAR(float, TYPEDEF) fLifeTime;
  VAR(unsigned char, TYPEDEF) uiCutInOutProbability;
  VAR(EM_t_GenObjDynamicProperty, TYPEDEF) eDynamicProperty;
  VAR(AlgoCycleCounter_t, TYPEDEF) uiLifeCycles;
  VAR(EM_t_GenObjMaintenanceState, TYPEDEF) eMaintenanceState;
  VAR(ObjNumber_t, TYPEDEF) uiObjectID;
  VAR(FCTObjUsageState_t, TYPEDEF) eUsageState;
  VAR(boolean, TYPEDEF) b_PreventOvertake;
  VAR(boolean, TYPEDEF) b_PlausibleObjMovement;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
} AccOOIGenAttributes_t;
#endif
#ifndef RTE_TYPE_AccOOIGenKinematics_t
#define RTE_TYPE_AccOOIGenKinematics_t
typedef struct
{
  VAR(float, TYPEDEF) fDistX;
  VAR(float, TYPEDEF) fDistY;
  VAR(float, TYPEDEF) fVrelX;
  VAR(float, TYPEDEF) fVrelY;
  VAR(float, TYPEDEF) fArelX;
  VAR(float, TYPEDEF) fArelY;
  VAR(float, TYPEDEF) fVabsX;
  VAR(float, TYPEDEF) fVabsY;
  VAR(float, TYPEDEF) fAabsX;
  VAR(float, TYPEDEF) fAabsY;
  VAR(float, TYPEDEF) fDistOnTraj;
} AccOOIGenKinematics_t;
#endif
#ifndef RTE_TYPE_eRelObjLossReason_t
#define RTE_TYPE_eRelObjLossReason_t
typedef VAR(unsigned char, TYPEDEF) eRelObjLossReason_t;
#endif
#ifndef RTE_TYPE_AccOOINextLong_t
#define RTE_TYPE_AccOOINextLong_t
typedef struct
{
  VAR(AccOOIGenKinematics_t, TYPEDEF) Kinematic;
  VAR(AccOOIGenAttributes_t, TYPEDEF) Attributes;
  VAR(eRelObjLossReason_t, TYPEDEF) eRelObjLossReason;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
} AccOOINextLong_t;
#endif
#ifndef RTE_TYPE_AccOOI_t
#define RTE_TYPE_AccOOI_t
typedef struct
{
  VAR(AccOOIGenKinematics_t, TYPEDEF) Kinematic;
  VAR(AccOOIGenAttributes_t, TYPEDEF) Attributes;
} AccOOI_t;
#endif
#ifndef RTE_TYPE_AccSts1
#define RTE_TYPE_AccSts1
typedef VAR(unsigned char, TYPEDEF) AccSts1;
#endif
#ifndef RTE_TYPE_AccelCorrVehDyn_t
#define RTE_TYPE_AccelCorrVehDyn_t
typedef struct
{
  VAR(float, TYPEDEF) corrAccel;
  VAR(float, TYPEDEF) corrAccelVar;
} AccelCorrVehDyn_t;
#endif
#ifndef RTE_TYPE_EBAPreBrkAccelTabNv_t
#define RTE_TYPE_EBAPreBrkAccelTabNv_t
typedef struct
{
  VAR(float, TYPEDEF) Velo;
  VAR(float, TYPEDEF) Accel;
} EBAPreBrkAccelTabNv_t;
#endif
#ifndef RTE_TYPE_AccelL1_array_t
#define RTE_TYPE_AccelL1_array_t
typedef VAR(EBAPreBrkAccelTabNv_t, TYPEDEF) AccelL1_array_t[4];
#endif
#ifndef RTE_TYPE_AccelL2_array_t
#define RTE_TYPE_AccelL2_array_t
typedef VAR(EBAPreBrkAccelTabNv_t, TYPEDEF) AccelL2_array_t[4];
#endif
#ifndef RTE_TYPE_AccrPedlPsdSafe1
#define RTE_TYPE_AccrPedlPsdSafe1
typedef struct
{
  VAR(boolean, TYPEDEF) AccrPedlPsd;
  VAR(boolean, TYPEDEF) AccrPedlPsdSts;
  VAR(uint8_t, TYPEDEF) AccrPedlPsdCntr;
  VAR(uint8_t, TYPEDEF) AccrPedlPsdChks;
} AccrPedlPsdSafe1;
#endif
#ifndef RTE_TYPE_Accuracy_t
#define RTE_TYPE_Accuracy_t
typedef VAR(unsigned char, TYPEDEF) Accuracy_t;
#endif
#ifndef RTE_TYPE_ActGearPos_t
#define RTE_TYPE_ActGearPos_t
typedef VAR(unsigned char, TYPEDEF) ActGearPos_t;
#endif
#ifndef RTE_TYPE_ActGearPos
#define RTE_TYPE_ActGearPos
typedef VAR(ActGearPos_t, TYPEDEF) ActGearPos;
#endif
#ifndef RTE_TYPE_ActivateSpeed
#define RTE_TYPE_ActivateSpeed
typedef VAR(float, TYPEDEF) ActivateSpeed;
#endif
#ifndef RTE_TYPE_ActivateSpeedHigh
#define RTE_TYPE_ActivateSpeedHigh
typedef VAR(float, TYPEDEF) ActivateSpeedHigh;
#endif
#ifndef RTE_TYPE_ActrActvForLgtCtrl
#define RTE_TYPE_ActrActvForLgtCtrl
typedef VAR(unsigned char, TYPEDEF) ActrActvForLgtCtrl;
#endif
#ifndef RTE_TYPE_AdpCorrCounterNeg_nu_array_t
#define RTE_TYPE_AdpCorrCounterNeg_nu_array_t
typedef VAR(unsigned short, TYPEDEF) AdpCorrCounterNeg_nu_array_t[20];
#endif
#ifndef RTE_TYPE_AdpCorrCounterPos_nu_array_t
#define RTE_TYPE_AdpCorrCounterPos_nu_array_t
typedef VAR(unsigned short, TYPEDEF) AdpCorrCounterPos_nu_array_t[20];
#endif
#ifndef RTE_TYPE_AdpCorrFactorNeg_nu_array_t
#define RTE_TYPE_AdpCorrFactorNeg_nu_array_t
typedef VAR(unsigned char, TYPEDEF) AdpCorrFactorNeg_nu_array_t[20];
#endif
#ifndef RTE_TYPE_AdpCorrFactorPos_nu_array_t
#define RTE_TYPE_AdpCorrFactorPos_nu_array_t
typedef VAR(unsigned char, TYPEDEF) AdpCorrFactorPos_nu_array_t[20];
#endif
#ifndef RTE_TYPE_AgDataRawSafe1
#define RTE_TYPE_AgDataRawSafe1
typedef struct
{
  VAR(sint16_t, TYPEDEF) RollRate;
  VAR(uint8_t, TYPEDEF) RollRateQf;
  VAR(sint16_t, TYPEDEF) YawRate;
  VAR(uint8_t, TYPEDEF) YawRateQf;
  VAR(uint8_t, TYPEDEF) Chks;
  VAR(uint8_t, TYPEDEF) Cntr;
} AgDataRawSafe1;
#endif
#ifndef RTE_TYPE_AirPInAirSprgType_t
#define RTE_TYPE_AirPInAirSprgType_t
typedef VAR(unsigned char, TYPEDEF) AirPInAirSprgType_t;
#endif
#ifndef RTE_TYPE_LoadLvlgCtrlEstimdType_t
#define RTE_TYPE_LoadLvlgCtrlEstimdType_t
typedef VAR(unsigned char, TYPEDEF) LoadLvlgCtrlEstimdType_t;
#endif
#ifndef RTE_TYPE_AirPInAirSprgRec
#define RTE_TYPE_AirPInAirSprgRec
typedef struct
{
  VAR(GenQf_t, TYPEDEF) AirPInAirSprgQf;
  VAR(AirPInAirSprgType_t, TYPEDEF) AirPInAirSprgRiFrnt;
  VAR(AirPInAirSprgType_t, TYPEDEF) AirPInAirSprgRiRe;
  VAR(AirPInAirSprgType_t, TYPEDEF) AirPInAirSprgLeFrnt;
  VAR(AirPInAirSprgType_t, TYPEDEF) AirPInAirSprgLeRe;
  VAR(LoadLvlgCtrlEstimdType_t, TYPEDEF) LoadLvlgCtrlEstimd;
} AirPInAirSprgRec;
#endif
#ifndef RTE_TYPE_AlgoApplicationNumber_t
#define RTE_TYPE_AlgoApplicationNumber_t
typedef VAR(unsigned int, TYPEDEF) AlgoApplicationNumber_t;
#endif
#ifndef RTE_TYPE_AlgoComponentVersionNumber_t
#define RTE_TYPE_AlgoComponentVersionNumber_t
typedef VAR(unsigned int, TYPEDEF) AlgoComponentVersionNumber_t;
#endif
#ifndef RTE_TYPE_AlgoVersionInfo_array_t
#define RTE_TYPE_AlgoVersionInfo_array_t
typedef VAR(unsigned char, TYPEDEF) AlgoVersionInfo_array_t[50];
#endif
#ifndef RTE_TYPE_CompState_t
#define RTE_TYPE_CompState_t
typedef VAR(unsigned char, TYPEDEF) CompState_t;
#endif
#ifndef RTE_TYPE_BaseSchedulingSubMode_t
#define RTE_TYPE_BaseSchedulingSubMode_t
typedef VAR(unsigned short, TYPEDEF) BaseSchedulingSubMode_t;
#endif
#ifndef RTE_TYPE_CompErrorCode_t
#define RTE_TYPE_CompErrorCode_t
typedef VAR(unsigned int, TYPEDEF) CompErrorCode_t;
#endif
#ifndef RTE_TYPE_GenAlgoQualifiers_t
#define RTE_TYPE_GenAlgoQualifiers_t
typedef VAR(unsigned int, TYPEDEF) GenAlgoQualifiers_t;
#endif
#ifndef RTE_TYPE_AlgoCompState_t
#define RTE_TYPE_AlgoCompState_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(AlgoComponentVersionNumber_t, TYPEDEF) uiAlgoVersionNumber;
  VAR(AlgoApplicationNumber_t, TYPEDEF) uiApplicationNumber;
  VAR(AlgoVersionInfo_array_t, TYPEDEF) AlgoVersionInfo;
  VAR(CompState_t, TYPEDEF) eCompState;
  VAR(BaseSchedulingSubMode_t, TYPEDEF) eShedulerSubModeRequest;
  VAR(CompErrorCode_t, TYPEDEF) eErrorCode;
  VAR(GenAlgoQualifiers_t, TYPEDEF) eGenAlgoQualifier;
} AlgoCompState_t;
#endif
#ifndef RTE_TYPE_AlgtReqForCmftRec1
#define RTE_TYPE_AlgtReqForCmftRec1
typedef struct
{
  VAR(sint16_t, TYPEDEF) ALgtReqForCmft;
  VAR(sint16_t, TYPEDEF) CmftLgtNegLimForJerk;
  VAR(sint16_t, TYPEDEF) CmftLgtPosLimForJerk;
  VAR(sint16_t, TYPEDEF) ALgtReqHysForCmft;
  VAR(ALgtReqForCmftMod_t, TYPEDEF) ALgtReqForCmftMod;
} AlgtReqForCmftRec1;
#endif
#ifndef RTE_TYPE_LCF_TrajPlanCorridor_t
#define RTE_TYPE_LCF_TrajPlanCorridor_t
typedef struct
{
  VAR(float, TYPEDEF) CorridorPosX0_m;
  VAR(float, TYPEDEF) CorridorPosY0_m;
  VAR(float, TYPEDEF) CorridorHeading_rad;
  VAR(float, TYPEDEF) CorridorCrv_1pm;
  VAR(float, TYPEDEF) CorridorChngOfCrv_1pm2;
  VAR(float, TYPEDEF) CorridorLength_m;
} LCF_TrajPlanCorridor_t;
#endif
#ifndef RTE_TYPE_AllCoridors_t
#define RTE_TYPE_AllCoridors_t
typedef struct
{
  VAR(LCF_TrajPlanCorridor_t, TYPEDEF) LeftCorridor;
  VAR(LCF_TrajPlanCorridor_t, TYPEDEF) RightCorridor;
  VAR(LCF_TrajPlanCorridor_t, TYPEDEF) TargetCorridor;
} AllCoridors_t;
#endif
#ifndef RTE_TYPE_AllCorridors_t
#define RTE_TYPE_AllCorridors_t
typedef struct
{
  VAR(LCF_TrajPlanCorridor_t, TYPEDEF) LeftCorridor;
  VAR(LCF_TrajPlanCorridor_t, TYPEDEF) RightCorridor;
  VAR(LCF_TrajPlanCorridor_t, TYPEDEF) TargetCorridor;
  VAR(LCF_TrajPlanCorridor_t, TYPEDEF) LeftRoadEdge;
  VAR(LCF_TrajPlanCorridor_t, TYPEDEF) RightRoadEdge;
} AllCorridors_t;
#endif
#ifndef RTE_TYPE_AlnControlInput_t
#define RTE_TYPE_AlnControlInput_t
typedef struct
{
  VAR(boolean, TYPEDEF) b_FactoryInspec_MainProcess_10_1_started_flag;
  VAR(boolean, TYPEDEF) b_FactoryInspec_MainProcess_Get_Ready_flag;
  VAR(boolean, TYPEDEF) b_CopydataOnce_InspectionMode;
  VAR(boolean, TYPEDEF) b_Axis_inspection_pid_calculated;
  VAR(boolean, TYPEDEF) b_CopydataOnce_MainMode;
} AlnControlInput_t;
#endif
#ifndef RTE_TYPE_AlnControlOutput_t
#define RTE_TYPE_AlnControlOutput_t
typedef struct
{
  VAR(boolean, TYPEDEF) b_FactoryInspec_MainProcess_Get_Ready_flag;
  VAR(boolean, TYPEDEF) b_CopydataOnce_InspectionMode;
  VAR(boolean, TYPEDEF) b_Axis_inspection_pid_calculated;
  VAR(boolean, TYPEDEF) b_CopydataOnce_MainMode;
} AlnControlOutput_t;
#endif
#ifndef RTE_TYPE_u_Dummy_array_t_10
#define RTE_TYPE_u_Dummy_array_t_10
typedef VAR(unsigned char, TYPEDEF) u_Dummy_array_t_10[3];
#endif
#ifndef RTE_TYPE_Aln_algo_parameters_t
#define RTE_TYPE_Aln_algo_parameters_t
typedef struct
{
  VAR(float, TYPEDEF) f_ElevMonMax;
  VAR(float, TYPEDEF) f_AzimMonMax;
  VAR(float, TYPEDEF) f_ElevEolMax;
  VAR(float, TYPEDEF) f_AzimEolMax;
  VAR(float, TYPEDEF) f_ElevMonMaxDiff;
  VAR(float, TYPEDEF) f_AzimMonMaxDiff;
  VAR(boolean, TYPEDEF) b_ElevMonEnable;
  VAR(boolean, TYPEDEF) b_AzimMonEnable;
  VAR(boolean, TYPEDEF) b_EolChannelCalibEnable;
  VAR(boolean, TYPEDEF) b_OnlineChannelCalibEnable;
  VAR(boolean, TYPEDEF) b_OnlineAngleDevCalibEnable;
  VAR(u_Dummy_array_t_10, TYPEDEF) u_Dummy;
} Aln_algo_parameters_t;
#endif
#ifndef RTE_TYPE_AltiFromSatlt_t
#define RTE_TYPE_AltiFromSatlt_t
typedef VAR(unsigned short, TYPEDEF) AltiFromSatlt_t;
#endif
#ifndef RTE_TYPE_AlwaysActiveSpeed
#define RTE_TYPE_AlwaysActiveSpeed
typedef VAR(float, TYPEDEF) AlwaysActiveSpeed;
#endif
#ifndef RTE_TYPE_AmbTIndcdUnit_t
#define RTE_TYPE_AmbTIndcdUnit_t
typedef VAR(unsigned char, TYPEDEF) AmbTIndcdUnit_t;
#endif
#ifndef RTE_TYPE_AmbTIndcd_t
#define RTE_TYPE_AmbTIndcd_t
typedef VAR(unsigned short, TYPEDEF) AmbTIndcd_t;
#endif
#ifndef RTE_TYPE_AmbTIndcdWithUnit
#define RTE_TYPE_AmbTIndcdWithUnit
typedef struct
{
  VAR(AmbTIndcd_t, TYPEDEF) AmbTIndcd;
  VAR(AmbTIndcdUnit_t, TYPEDEF) AmbTIndcdUnit;
  VAR(GenQf_t, TYPEDEF) QF;
} AmbTIndcdWithUnit;
#endif
#ifndef RTE_TYPE_AmbT_t
#define RTE_TYPE_AmbT_t
typedef VAR(unsigned short, TYPEDEF) AmbT_t;
#endif
#ifndef RTE_TYPE_AmbTWithQly
#define RTE_TYPE_AmbTWithQly
typedef struct
{
  VAR(AmbT_t, TYPEDEF) AmbTVal;
  VAR(GenQf_t, TYPEDEF) Qly;
} AmbTWithQly;
#endif
#ifndef RTE_TYPE_AnchorAreas_t
#define RTE_TYPE_AnchorAreas_t
typedef struct
{
  VAR(short, TYPEDEF) sTopLeftX;
  VAR(short, TYPEDEF) sTopLeftY;
  VAR(short, TYPEDEF) sBottomRightX;
  VAR(short, TYPEDEF) sBottomRightY;
  VAR(short, TYPEDEF) sHypSizeDomDirection;
  VAR(short, TYPEDEF) sValidImageAreaTopLeftX;
  VAR(short, TYPEDEF) sValidImageAreaTopLeftY;
  VAR(short, TYPEDEF) sValidImageAreaBottomRightX;
  VAR(short, TYPEDEF) sValidImageAreaBottomRightY;
  VAR(unsigned char, TYPEDEF) slidingWindowOptions;
  VAR(unsigned char, TYPEDEF) uClassifierID;
  VAR(uint8_t, TYPEDEF) fp_ConfidenceThreshold;
  VAR(unsigned char, TYPEDEF) uSideInformation00;
  VAR(unsigned char, TYPEDEF) uSideInformation01;
  VAR(unsigned char, TYPEDEF) uSideInformation02;
} AnchorAreas_t;
#endif
#ifndef RTE_TYPE_AnchorAreas_array_t
#define RTE_TYPE_AnchorAreas_array_t
typedef VAR(AnchorAreas_t, TYPEDEF) AnchorAreas_array_t[256];
#endif
#ifndef RTE_TYPE_AnecLong_array_t
#define RTE_TYPE_AnecLong_array_t
typedef VAR(float, TYPEDEF) AnecLong_array_t[12];
#endif
#ifndef RTE_TYPE_PPAR_t_PathCompensationFarArray
#define RTE_TYPE_PPAR_t_PathCompensationFarArray
typedef VAR(short, TYPEDEF) PPAR_t_PathCompensationFarArray[24];
#endif
#ifndef RTE_TYPE_PPAR_t_RxCalibrationArray
#define RTE_TYPE_PPAR_t_RxCalibrationArray
typedef VAR(unsigned short, TYPEDEF) PPAR_t_RxCalibrationArray[6];
#endif
#ifndef RTE_TYPE_PPAR_t_RxGainsFarArray
#define RTE_TYPE_PPAR_t_RxGainsFarArray
typedef VAR(unsigned short, TYPEDEF) PPAR_t_RxGainsFarArray[6];
#endif
#ifndef RTE_TYPE_PPAR_t_AngleDeviationFarArray
#define RTE_TYPE_PPAR_t_AngleDeviationFarArray
typedef VAR(short, TYPEDEF) PPAR_t_AngleDeviationFarArray[441];
#endif
#ifndef RTE_TYPE_PPAR_t_DecayTargetNormSFarAzimuthArray
#define RTE_TYPE_PPAR_t_DecayTargetNormSFarAzimuthArray
typedef VAR(unsigned char, TYPEDEF) PPAR_t_DecayTargetNormSFarAzimuthArray[441];
#endif
#ifndef RTE_TYPE_PPAR_t_DecayTargetNormSFarElevationArray
#define RTE_TYPE_PPAR_t_DecayTargetNormSFarElevationArray
typedef VAR(unsigned char, TYPEDEF) PPAR_t_DecayTargetNormSFarElevationArray[161];
#endif
#ifndef RTE_TYPE_PPAR_t_StcFrequency6dBDecayFarArray
#define RTE_TYPE_PPAR_t_StcFrequency6dBDecayFarArray
typedef VAR(unsigned short, TYPEDEF) PPAR_t_StcFrequency6dBDecayFarArray[6];
#endif
#ifndef RTE_TYPE_PPAR_t_RxControllableGainArray
#define RTE_TYPE_PPAR_t_RxControllableGainArray
typedef VAR(short, TYPEDEF) PPAR_t_RxControllableGainArray[5];
#endif
#ifndef RTE_TYPE_PPAR_t_AntennaFarReservedArray
#define RTE_TYPE_PPAR_t_AntennaFarReservedArray
typedef VAR(unsigned char, TYPEDEF) PPAR_t_AntennaFarReservedArray[10];
#endif
#ifndef RTE_TYPE_PPAR_t_AntennaParamsFar
#define RTE_TYPE_PPAR_t_AntennaParamsFar
typedef struct
{
  VAR(PPAR_t_PathCompensationFarArray, TYPEDEF) a_PathCompensationFar;
  VAR(PPAR_t_RxCalibrationArray, TYPEDEF) a_RxCalibrationFar;
  VAR(unsigned char, TYPEDEF) u_VgaTx1Far;
  VAR(unsigned char, TYPEDEF) u_VgaTx2Far;
  VAR(unsigned short, TYPEDEF) u_Alignment;
  VAR(unsigned short, TYPEDEF) u_PowerSenseTx1Far;
  VAR(unsigned short, TYPEDEF) u_PowerSenseTx2Far;
  VAR(unsigned short, TYPEDEF) u_PowerSenseLO1Far;
  VAR(unsigned short, TYPEDEF) u_PowerSenseLO2Far;
  VAR(PPAR_t_RxGainsFarArray, TYPEDEF) a_RxGainsFar;
  VAR(short, TYPEDEF) s_BoresightFarAzimuth;
  VAR(short, TYPEDEF) s_BoresightFarElevation;
  VAR(PPAR_t_AngleDeviationFarArray, TYPEDEF) a_AngleDeviationFar;
  VAR(short, TYPEDEF) s_MaxTargetNormSFar;
  VAR(PPAR_t_DecayTargetNormSFarAzimuthArray, TYPEDEF) a_DecayTargetNormSFarAzimuth;
  VAR(PPAR_t_DecayTargetNormSFarElevationArray, TYPEDEF) a_DecayTargetNormSFarElevation;
  VAR(unsigned short, TYPEDEF) u_MaxTargetNormSNFar;
  VAR(PPAR_t_StcFrequency6dBDecayFarArray, TYPEDEF) a_StcFrequency6dBDecayFar;
  VAR(unsigned short, TYPEDEF) u_StcAttenuationForBptFar;
  VAR(unsigned short, TYPEDEF) u_FrequencyForBeamPatternFar;
  VAR(PPAR_t_RxControllableGainArray, TYPEDEF) a_RxControllableGainFar;
  VAR(PPAR_t_AntennaFarReservedArray, TYPEDEF) a_Alignment1;
} PPAR_t_AntennaParamsFar;
#endif
#ifndef RTE_TYPE_PPAR_t_PathCompensationNearArray
#define RTE_TYPE_PPAR_t_PathCompensationNearArray
typedef VAR(short, TYPEDEF) PPAR_t_PathCompensationNearArray[24];
#endif
#ifndef RTE_TYPE_PPAR_t_RxGainsNearArray
#define RTE_TYPE_PPAR_t_RxGainsNearArray
typedef VAR(unsigned short, TYPEDEF) PPAR_t_RxGainsNearArray[6];
#endif
#ifndef RTE_TYPE_PPAR_t_AngleDeviationNearArray
#define RTE_TYPE_PPAR_t_AngleDeviationNearArray
typedef VAR(short, TYPEDEF) PPAR_t_AngleDeviationNearArray[721];
#endif
#ifndef RTE_TYPE_PPAR_t_DecayTargetNormSNearAzimuthArray
#define RTE_TYPE_PPAR_t_DecayTargetNormSNearAzimuthArray
typedef VAR(unsigned char, TYPEDEF) PPAR_t_DecayTargetNormSNearAzimuthArray[721];
#endif
#ifndef RTE_TYPE_PPAR_t_DecayTargetNormSNearElevationArray
#define RTE_TYPE_PPAR_t_DecayTargetNormSNearElevationArray
typedef VAR(unsigned char, TYPEDEF) PPAR_t_DecayTargetNormSNearElevationArray[161];
#endif
#ifndef RTE_TYPE_PPAR_t_StcFrequency6dBDecayNearArray
#define RTE_TYPE_PPAR_t_StcFrequency6dBDecayNearArray
typedef VAR(unsigned short, TYPEDEF) PPAR_t_StcFrequency6dBDecayNearArray[6];
#endif
#ifndef RTE_TYPE_PPAR_t_AntennaParamsNear
#define RTE_TYPE_PPAR_t_AntennaParamsNear
typedef struct
{
  VAR(PPAR_t_PathCompensationNearArray, TYPEDEF) a_PathCompensationNear;
  VAR(PPAR_t_RxCalibrationArray, TYPEDEF) a_RxCalibrationNear;
  VAR(unsigned char, TYPEDEF) u_VgaTx1Near;
  VAR(unsigned char, TYPEDEF) u_VgaTx2Near;
  VAR(unsigned short, TYPEDEF) u_Alignment;
  VAR(unsigned short, TYPEDEF) u_PowerSenseTx1Near;
  VAR(unsigned short, TYPEDEF) u_PowerSenseTx2Near;
  VAR(unsigned short, TYPEDEF) u_PowerSenseLO1Near;
  VAR(unsigned short, TYPEDEF) u_PowerSenseLO2Near;
  VAR(PPAR_t_RxGainsNearArray, TYPEDEF) a_RxGainsNear;
  VAR(short, TYPEDEF) s_BoresightNearAzimuth;
  VAR(short, TYPEDEF) s_BoresightNearElevation;
  VAR(PPAR_t_AngleDeviationNearArray, TYPEDEF) a_AngleDeviationNear;
  VAR(short, TYPEDEF) s_MaxTargetNormSNear;
  VAR(PPAR_t_DecayTargetNormSNearAzimuthArray, TYPEDEF) a_DecayTargetNormSNearAzimuth;
  VAR(PPAR_t_DecayTargetNormSNearElevationArray, TYPEDEF) a_DecayTargetNormSNearElevation;
  VAR(unsigned short, TYPEDEF) u_MaxTargetNormSNNear;
  VAR(PPAR_t_StcFrequency6dBDecayNearArray, TYPEDEF) a_StcFrequency6dBDecayNear;
  VAR(unsigned short, TYPEDEF) u_StcAttenuationForBptNear;
  VAR(unsigned short, TYPEDEF) u_FrequencyForBeamPatternNear;
  VAR(PPAR_t_RxControllableGainArray, TYPEDEF) a_RxControllableGainNear;
  VAR(unsigned short, TYPEDEF) u_Alignment1;
} PPAR_t_AntennaParamsNear;
#endif
#ifndef RTE_TYPE_AntennaPar_BaseType_t
#define RTE_TYPE_AntennaPar_BaseType_t
typedef struct
{
  VAR(PPAR_t_AntennaParamsFar, TYPEDEF) AntennaParamsFar;
  VAR(PPAR_t_AntennaParamsNear, TYPEDEF) AntennaParamsNear;
} AntennaPar_BaseType_t;
#endif
#ifndef RTE_TYPE_AreaRightBorderArray_array_t
#define RTE_TYPE_AreaRightBorderArray_array_t
typedef VAR(float, TYPEDEF) AreaRightBorderArray_array_t[4];
#endif
#ifndef RTE_TYPE_aiOOIList_array_t
#define RTE_TYPE_aiOOIList_array_t
typedef VAR(ObjNumber_t, TYPEDEF) aiOOIList_array_t[6];
#endif
#ifndef RTE_TYPE_HeaderAssessedObjList_t
#define RTE_TYPE_HeaderAssessedObjList_t
typedef struct
{
  VAR(ObjNumber_t, TYPEDEF) iNumOfUsedObjects;
  VAR(unsigned char, TYPEDEF) iPadding;
  VAR(aiOOIList_array_t, TYPEDEF) aiOOIList;
  VAR(eRelObjLossReason_t, TYPEDEF) eRelObjLossReason;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
} HeaderAssessedObjList_t;
#endif
#ifndef RTE_TYPE_eAssociatedLane_t
#define RTE_TYPE_eAssociatedLane_t
typedef VAR(unsigned char, TYPEDEF) eAssociatedLane_t;
#endif
#ifndef RTE_TYPE_LaneInformation_t
#define RTE_TYPE_LaneInformation_t
typedef struct
{
  VAR(eAssociatedLane_t, TYPEDEF) eAssociatedLane;
  VAR(eAssociatedLane_t, TYPEDEF) eFuncAssociatedLane;
  VAR(unsigned char, TYPEDEF) uiCutInProbability;
  VAR(unsigned char, TYPEDEF) uiCutOutProbability;
} LaneInformation_t;
#endif
#ifndef RTE_TYPE_eObjOOI_t
#define RTE_TYPE_eObjOOI_t
typedef VAR(signed char, TYPEDEF) eObjOOI_t;
#endif
#ifndef RTE_TYPE_ObjOfInterest_t
#define RTE_TYPE_ObjOfInterest_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) cExternalID;
  VAR(eObjOOI_t, TYPEDEF) eObjOOI;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
} ObjOfInterest_t;
#endif
#ifndef RTE_TYPE_eDynamicMeasStatus_t
#define RTE_TYPE_eDynamicMeasStatus_t
typedef VAR(unsigned char, TYPEDEF) eDynamicMeasStatus_t;
#endif
#ifndef RTE_TYPE_eObjMeasStatus_t
#define RTE_TYPE_eObjMeasStatus_t
typedef VAR(unsigned char, TYPEDEF) eObjMeasStatus_t;
#endif
#ifndef RTE_TYPE_LegacyAOL_t
#define RTE_TYPE_LegacyAOL_t
typedef struct
{
  VAR(float, TYPEDEF) fDistToRef;
  VAR(eDynamicMeasStatus_t, TYPEDEF) eDynamicMeasStatus;
  VAR(eObjMeasStatus_t, TYPEDEF) eObjMeasStatus;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
} LegacyAOL_t;
#endif
#ifndef RTE_TYPE_FCTPubObject_t
#define RTE_TYPE_FCTPubObject_t
typedef struct
{
  VAR(LaneInformation_t, TYPEDEF) LaneInformation;
  VAR(ObjOfInterest_t, TYPEDEF) ObjOfInterest;
  VAR(LegacyAOL_t, TYPEDEF) Legacy;
} FCTPubObject_t;
#endif
#ifndef RTE_TYPE_ObjList_array_t
#define RTE_TYPE_ObjList_array_t
typedef VAR(FCTPubObject_t, TYPEDEF) ObjList_array_t[40];
#endif
#ifndef RTE_TYPE_AssessedObjList_t
#define RTE_TYPE_AssessedObjList_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(HeaderAssessedObjList_t, TYPEDEF) HeaderAssessedObjList;
  VAR(ObjList_array_t, TYPEDEF) ObjList;
} AssessedObjList_t;
#endif
#ifndef RTE_TYPE_AsyALgtReqForCmftRec1
#define RTE_TYPE_AsyALgtReqForCmftRec1
typedef struct
{
  VAR(sint16_t, TYPEDEF) AsyALgtReqForCmft;
  VAR(sint16_t, TYPEDEF) AsyCmftLgtNegLimForJerk;
  VAR(sint16_t, TYPEDEF) AsyCmftLgtPosLimForJerk;
} AsyALgtReqForCmftRec1;
#endif
#ifndef RTE_TYPE_AsyALgtRespAndLim1
#define RTE_TYPE_AsyALgtRespAndLim1
typedef struct
{
  VAR(ALim_t, TYPEDEF) AsyALgtLimForTrPwrForCmft;
  VAR(AResp_t, TYPEDEF) AsyALgtRespForTrPwrForCmft;
} AsyALgtRespAndLim1;
#endif
#ifndef RTE_TYPE_AsyBrkEnaAckd
#define RTE_TYPE_AsyBrkEnaAckd
typedef struct
{
  VAR(boolean, TYPEDEF) AsyBrkGainEnaAckd;
  VAR(boolean, TYPEDEF) AsySftyEnaDecelAckd;
} AsyBrkEnaAckd;
#endif
#ifndef RTE_TYPE_AsyDataWithCmpSafe1
#define RTE_TYPE_AsyDataWithCmpSafe1
typedef struct
{
  VAR(sint16_t, TYPEDEF) YawRateWithCmp;
  VAR(uint8_t, TYPEDEF) YawRateQf;
  VAR(float32_t, TYPEDEF) ALatWithCmp;
  VAR(uint8_t, TYPEDEF) ALat1Qf;
  VAR(sint16_t, TYPEDEF) GrdtOfALgt;
  VAR(uint8_t, TYPEDEF) ALgt1Qf;
  VAR(uint8_t, TYPEDEF) Chks;
  VAR(uint8_t, TYPEDEF) Cntr;
} AsyDataWithCmpSafe1;
#endif
#ifndef RTE_TYPE_AsyLatCtrlModReqGroupSafe2
#define RTE_TYPE_AsyLatCtrlModReqGroupSafe2
typedef struct
{
  VAR(uint8_t, TYPEDEF) AsyLatCtrlModReq;
  VAR(uint8_t, TYPEDEF) AsyLatReqGroupSafeChks;
  VAR(uint8_t, TYPEDEF) AsyLatReqGroupSafeCntr;
} AsyLatCtrlModReqGroupSafe2;
#endif
#ifndef RTE_TYPE_Atv1_1xGain_ColumnPositions_array_t
#define RTE_TYPE_Atv1_1xGain_ColumnPositions_array_t
typedef VAR(unsigned short, TYPEDEF) Atv1_1xGain_ColumnPositions_array_t[5];
#endif
#ifndef RTE_TYPE_Atv1_1xGain_DeviationValues_array_t
#define RTE_TYPE_Atv1_1xGain_DeviationValues_array_t
typedef VAR(unsigned short, TYPEDEF) Atv1_1xGain_DeviationValues_array_t[5];
#endif
#ifndef RTE_TYPE_Atv1_2xGain_ColumnPositions_array_t
#define RTE_TYPE_Atv1_2xGain_ColumnPositions_array_t
typedef VAR(unsigned short, TYPEDEF) Atv1_2xGain_ColumnPositions_array_t[5];
#endif
#ifndef RTE_TYPE_Atv1_2xGain_DeviationValues_array_t
#define RTE_TYPE_Atv1_2xGain_DeviationValues_array_t
typedef VAR(unsigned short, TYPEDEF) Atv1_2xGain_DeviationValues_array_t[5];
#endif
#ifndef RTE_TYPE_Atv3_1xGain_ColumnPositions_array_t
#define RTE_TYPE_Atv3_1xGain_ColumnPositions_array_t
typedef VAR(unsigned short, TYPEDEF) Atv3_1xGain_ColumnPositions_array_t[5];
#endif
#ifndef RTE_TYPE_Atv3_1xGain_DeviationValues_array_t
#define RTE_TYPE_Atv3_1xGain_DeviationValues_array_t
typedef VAR(unsigned short, TYPEDEF) Atv3_1xGain_DeviationValues_array_t[5];
#endif
#ifndef RTE_TYPE_AxisLoadDistr
#define RTE_TYPE_AxisLoadDistr
typedef VAR(float, TYPEDEF) AxisLoadDistr;
#endif
#ifndef RTE_TYPE_fCurve_t
#define RTE_TYPE_fCurve_t
typedef VAR(float, TYPEDEF) fCurve_t;
#endif
#ifndef RTE_TYPE_AyCurve_t
#define RTE_TYPE_AyCurve_t
typedef struct
{
  VAR(fCurve_t, TYPEDEF) Curve;
} AyCurve_t;
#endif
#ifndef RTE_TYPE_fAngle_t
#define RTE_TYPE_fAngle_t
typedef VAR(float, TYPEDEF) fAngle_t;
#endif
#ifndef RTE_TYPE_fVariance_t
#define RTE_TYPE_fVariance_t
typedef VAR(float, TYPEDEF) fVariance_t;
#endif
#ifndef RTE_TYPE_Ay_t
#define RTE_TYPE_Ay_t
typedef struct
{
  VAR(fAngle_t, TYPEDEF) Offset;
  VAR(fVariance_t, TYPEDEF) Variance;
  VAR(int, TYPEDEF) State;
} Ay_t;
#endif
#ifndef RTE_TYPE_BCM_Status_t
#define RTE_TYPE_BCM_Status_t
typedef VAR(unsigned char, TYPEDEF) BCM_Status_t;
#endif
#ifndef RTE_TYPE_EBACodingBitEnum_t
#define RTE_TYPE_EBACodingBitEnum_t
typedef VAR(unsigned int, TYPEDEF) EBACodingBitEnum_t;
#endif
#ifndef RTE_TYPE_EBAPreBrkAccelParNvState_t
#define RTE_TYPE_EBAPreBrkAccelParNvState_t
typedef VAR(unsigned char, TYPEDEF) EBAPreBrkAccelParNvState_t;
#endif
#ifndef RTE_TYPE_EBAPreBrkAccelParNv_t
#define RTE_TYPE_EBAPreBrkAccelParNv_t
typedef struct
{
  VAR(EBAPreBrkAccelParNvState_t, TYPEDEF) Valid;
  VAR(AccelL1_array_t, TYPEDEF) AccelL1;
  VAR(AccelL2_array_t, TYPEDEF) AccelL2;
} EBAPreBrkAccelParNv_t;
#endif
#ifndef RTE_TYPE_Fct_eba_algo_parameters_t
#define RTE_TYPE_Fct_eba_algo_parameters_t
typedef struct
{
  VAR(boolean, TYPEDEF) CodingValid;
  VAR(EBACodingBitEnum_t, TYPEDEF) CodingBits;
  VAR(EBAPreBrkAccelParNv_t, TYPEDEF) PreBrkParAccelTab;
} Fct_eba_algo_parameters_t;
#endif
#ifndef RTE_TYPE_CameraFusionPreselBits_t
#define RTE_TYPE_CameraFusionPreselBits_t
typedef VAR(unsigned char, TYPEDEF) CameraFusionPreselBits_t;
#endif
#ifndef RTE_TYPE_NaviFusionPreselBits_t
#define RTE_TYPE_NaviFusionPreselBits_t
typedef VAR(unsigned char, TYPEDEF) NaviFusionPreselBits_t;
#endif
#ifndef RTE_TYPE_Fct_acc_algo_parameters_t
#define RTE_TYPE_Fct_acc_algo_parameters_t
typedef struct
{
  VAR(CameraFusionPreselBits_t, TYPEDEF) CameraFusionPreselBits;
  VAR(NaviFusionPreselBits_t, TYPEDEF) NaviFusionPreselBits;
} Fct_acc_algo_parameters_t;
#endif
#ifndef RTE_TYPE_FnSwitchBits_t
#define RTE_TYPE_FnSwitchBits_t
typedef VAR(unsigned char, TYPEDEF) FnSwitchBits_t;
#endif
#ifndef RTE_TYPE_Fct_general_algo_par_t
#define RTE_TYPE_Fct_general_algo_par_t
typedef struct
{
  VAR(FnSwitchBits_t, TYPEDEF) FnSwitchBits;
} Fct_general_algo_par_t;
#endif
#ifndef RTE_TYPE_f32_ShutoffRange_array_t
#define RTE_TYPE_f32_ShutoffRange_array_t
typedef VAR(float, TYPEDEF) f32_ShutoffRange_array_t[1];
#endif
#ifndef RTE_TYPE_f32_ShutonRange_array_t
#define RTE_TYPE_f32_ShutonRange_array_t
typedef VAR(float, TYPEDEF) f32_ShutonRange_array_t[1];
#endif
#ifndef RTE_TYPE_b_UseRoadbeam_array_t
#define RTE_TYPE_b_UseRoadbeam_array_t
typedef VAR(boolean, TYPEDEF) b_UseRoadbeam_array_t[1];
#endif
#ifndef RTE_TYPE_ui8_RoadbeamSpeedMin_array_t
#define RTE_TYPE_ui8_RoadbeamSpeedMin_array_t
typedef VAR(unsigned char, TYPEDEF) ui8_RoadbeamSpeedMin_array_t[1];
#endif
#ifndef RTE_TYPE_ui8_RoadVisibilityMin_array_t
#define RTE_TYPE_ui8_RoadVisibilityMin_array_t
typedef VAR(unsigned char, TYPEDEF) ui8_RoadVisibilityMin_array_t[1];
#endif
#ifndef RTE_TYPE_ui8_RoadQualityMin_array_t
#define RTE_TYPE_ui8_RoadQualityMin_array_t
typedef VAR(unsigned char, TYPEDEF) ui8_RoadQualityMin_array_t[1];
#endif
#ifndef RTE_TYPE_UseFarNearScanForBlck_t
#define RTE_TYPE_UseFarNearScanForBlck_t
typedef VAR(unsigned char, TYPEDEF) UseFarNearScanForBlck_t;
#endif
#ifndef RTE_TYPE_Fct_blockage_algo_parameters_t
#define RTE_TYPE_Fct_blockage_algo_parameters_t
typedef struct
{
  VAR(f32_ShutoffRange_array_t, TYPEDEF) f32_ShutoffRange;
  VAR(f32_ShutonRange_array_t, TYPEDEF) f32_ShutonRange;
  VAR(float, TYPEDEF) f32_ShutoffTime_Timeout;
  VAR(float, TYPEDEF) f32_ShutoffWay_Timeout;
  VAR(unsigned char, TYPEDEF) ui_ShutoffNoOfObjLosses;
  VAR(boolean, TYPEDEF) b_BlockageActive;
  VAR(b_UseRoadbeam_array_t, TYPEDEF) b_UseRoadbeam;
  VAR(ui8_RoadbeamSpeedMin_array_t, TYPEDEF) ui8_RoadbeamSpeedMin;
  VAR(ui8_RoadVisibilityMin_array_t, TYPEDEF) ui8_RoadVisibilityMin;
  VAR(ui8_RoadQualityMin_array_t, TYPEDEF) ui8_RoadQualityMin;
  VAR(UseFarNearScanForBlck_t, TYPEDEF) ui8_UseFarNearScanForBlck;
  VAR(float, TYPEDEF) f32_BlockageHiTempThreshFactor;
  VAR(signed char, TYPEDEF) i8_BlockageHiTempThresh;
  VAR(signed char, TYPEDEF) i8_BlockageLoTempThresh;
  VAR(unsigned char, TYPEDEF) ui8_BlockageSpeedThreshold;
  VAR(unsigned char, TYPEDEF) ui8_BlockageCamActivityFiltSize;
  VAR(unsigned char, TYPEDEF) ui8_BlockageCamActivityFiltPos;
  VAR(unsigned char, TYPEDEF) ui8_BlockageCamObjectFilterSize;
  VAR(unsigned char, TYPEDEF) ui8_BlockageCamObjectFilterPos;
  VAR(unsigned char, TYPEDEF) ui8_BlockageCamObjectThresh;
  VAR(signed char, TYPEDEF) i8_BlockageCamTempThresh;
  VAR(unsigned char, TYPEDEF) ui8_BlockageWiperCamThresh;
  VAR(unsigned char, TYPEDEF) ui8_BlockageWiperThresh;
  VAR(boolean, TYPEDEF) b_BlockageUseTemperature;
  VAR(boolean, TYPEDEF) b_BlockageUseWiper;
  VAR(boolean, TYPEDEF) b_BlockageUseWiperinCamera;
  VAR(boolean, TYPEDEF) b_BlockageCamIntegrationActive;
} Fct_blockage_algo_parameters_t;
#endif
#ifndef RTE_TYPE_Fct_algo_parameters_t
#define RTE_TYPE_Fct_algo_parameters_t
typedef struct
{
  VAR(Fct_eba_algo_parameters_t, TYPEDEF) Eba;
  VAR(Fct_acc_algo_parameters_t, TYPEDEF) Acc;
  VAR(Fct_general_algo_par_t, TYPEDEF) General;
  VAR(Fct_blockage_algo_parameters_t, TYPEDEF) Blockage;
} Fct_algo_parameters_t;
#endif
#ifndef RTE_TYPE_Em_cem_algo_sensor_state_t
#define RTE_TYPE_Em_cem_algo_sensor_state_t
typedef VAR(unsigned char, TYPEDEF) Em_cem_algo_sensor_state_t;
#endif
#ifndef RTE_TYPE_Em_cem_algo_mode_t
#define RTE_TYPE_Em_cem_algo_mode_t
typedef VAR(unsigned char, TYPEDEF) Em_cem_algo_mode_t;
#endif
#ifndef RTE_TYPE_Em_cem_algo_parameters_t
#define RTE_TYPE_Em_cem_algo_parameters_t
typedef struct
{
  VAR(Em_cem_algo_sensor_state_t, TYPEDEF) eCEMParCodState;
  VAR(Em_cem_algo_sensor_state_t, TYPEDEF) eCEMParCldState;
  VAR(Em_cem_algo_mode_t, TYPEDEF) eCEMParModeSelection;
} Em_cem_algo_parameters_t;
#endif
#ifndef RTE_TYPE_Em_lat_algo_parameters_t
#define RTE_TYPE_Em_lat_algo_parameters_t
typedef struct
{
  VAR(boolean, TYPEDEF) b_UseExternalYawRateLat;
  VAR(boolean, TYPEDEF) b_UseExternalAxLat;
  VAR(unsigned char, TYPEDEF) u_YawRateObjLat;
  VAR(unsigned char, TYPEDEF) u_AccelXObjLat;
} Em_lat_algo_parameters_t;
#endif
#ifndef RTE_TYPE_Em_Ped_ArtDummy_t
#define RTE_TYPE_Em_Ped_ArtDummy_t
typedef VAR(unsigned char, TYPEDEF) Em_Ped_ArtDummy_t;
#endif
#ifndef RTE_TYPE_Em_ped_algo_parameters_t
#define RTE_TYPE_Em_ped_algo_parameters_t
typedef struct
{
  VAR(Em_Ped_ArtDummy_t, TYPEDEF) ePedArtDummy;
} Em_ped_algo_parameters_t;
#endif
#ifndef RTE_TYPE_Em_algo_parameters_t
#define RTE_TYPE_Em_algo_parameters_t
typedef struct
{
  VAR(Em_cem_algo_parameters_t, TYPEDEF) Cem;
  VAR(Em_lat_algo_parameters_t, TYPEDEF) Lat;
  VAR(Em_ped_algo_parameters_t, TYPEDEF) Ped;
} Em_algo_parameters_t;
#endif
#ifndef RTE_TYPE_BSW_s_AlgoParameters_t
#define RTE_TYPE_BSW_s_AlgoParameters_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(Fct_algo_parameters_t, TYPEDEF) Fct;
  VAR(Em_algo_parameters_t, TYPEDEF) Em;
  VAR(Aln_algo_parameters_t, TYPEDEF) Aln;
} BSW_s_AlgoParameters_t;
#endif
#ifndef RTE_TYPE_EMOpMode_t
#define RTE_TYPE_EMOpMode_t
typedef VAR(unsigned char, TYPEDEF) EMOpMode_t;
#endif
#ifndef RTE_TYPE_BSW_s_EMCtrlData_t
#define RTE_TYPE_BSW_s_EMCtrlData_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(SYS_t_HWSample, TYPEDEF) HWSample;
  VAR(EMOpMode_t, TYPEDEF) EMOpMode;
  VAR(boolean, TYPEDEF) RSPCycleViolation;
  VAR(boolean, TYPEDEF) EMCycleViolation;
  VAR(unsigned char, TYPEDEF) u_Dummy81;
  VAR(unsigned char, TYPEDEF) u_Dummy82;
  VAR(unsigned char, TYPEDEF) u_Dummy83;
} BSW_s_EMCtrlData_t;
#endif
#ifndef RTE_TYPE_uiTime_t
#define RTE_TYPE_uiTime_t
typedef VAR(unsigned short, TYPEDEF) uiTime_t;
#endif
#ifndef RTE_TYPE_VDYCaliState_t
#define RTE_TYPE_VDYCaliState_t
typedef VAR(unsigned char, TYPEDEF) VDYCaliState_t;
#endif
#ifndef RTE_TYPE_VDYCtrlState_t
#define RTE_TYPE_VDYCtrlState_t
typedef VAR(unsigned char, TYPEDEF) VDYCtrlState_t;
#endif
#ifndef RTE_TYPE_BSW_s_VDYCtrlData_t
#define RTE_TYPE_BSW_s_VDYCtrlData_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(uiTime_t, TYPEDEF) CycleTime;
  VAR(VDYCaliState_t, TYPEDEF) CaliMode;
  VAR(VDYCtrlState_t, TYPEDEF) CtrlMode;
} BSW_s_VDYCtrlData_t;
#endif
#ifndef RTE_TYPE_RTE_HLA_BadWeatherDetection
#define RTE_TYPE_RTE_HLA_BadWeatherDetection
typedef VAR(unsigned char, TYPEDEF) RTE_HLA_BadWeatherDetection;
#endif
#ifndef RTE_TYPE_BadWeatherDetection
#define RTE_TYPE_BadWeatherDetection
typedef VAR(RTE_HLA_BadWeatherDetection, TYPEDEF) BadWeatherDetection;
#endif
#ifndef RTE_TYPE_BaseOpMode_t
#define RTE_TYPE_BaseOpMode_t
typedef VAR(unsigned short, TYPEDEF) BaseOpMode_t;
#endif
#ifndef RTE_TYPE_BaseSchedulingMode_t
#define RTE_TYPE_BaseSchedulingMode_t
typedef VAR(unsigned short, TYPEDEF) BaseSchedulingMode_t;
#endif
#ifndef RTE_TYPE_BaseCtrlData_t
#define RTE_TYPE_BaseCtrlData_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(BaseOpMode_t, TYPEDEF) eOpMode;
  VAR(BaseSchedulingMode_t, TYPEDEF) eSchedulingMode;
  VAR(BaseSchedulingSubMode_t, TYPEDEF) eSchedulingSubMode;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
} BaseCtrlData_t;
#endif
#ifndef RTE_TYPE_BaseReturnCode_t
#define RTE_TYPE_BaseReturnCode_t
typedef VAR(unsigned int, TYPEDEF) BaseReturnCode_t;
#endif
#ifndef RTE_TYPE_Bitfield16
#define RTE_TYPE_Bitfield16
typedef VAR(unsigned short, TYPEDEF) Bitfield16;
#endif
#ifndef RTE_TYPE_Blockage_t
#define RTE_TYPE_Blockage_t
typedef struct
{
  VAR(boolean, TYPEDEF) bResetAck;
  VAR(boolean, TYPEDEF) bSummerParameterset;
  VAR(boolean, TYPEDEF) bSummerWithHighTemp;
  VAR(boolean, TYPEDEF) bSummerWithHighTempNoRain;
  VAR(boolean, TYPEDEF) bTemperatureBlockageOff;
  VAR(boolean, TYPEDEF) bWisherIntegrationFeatureOn;
  VAR(boolean, TYPEDEF) bWisherRainDetected;
  VAR(boolean, TYPEDEF) bCameraIntegrationFeatureOn;
  VAR(boolean, TYPEDEF) bCameraAvailability;
  VAR(boolean, TYPEDEF) bCameraObjectsDetected;
  VAR(boolean, TYPEDEF) bDecreaseTimerDecided;
  VAR(boolean, TYPEDEF) bCameraWisherRainDetected;
  VAR(boolean, TYPEDEF) bUseCameraWiper;
  VAR(boolean, TYPEDEF) bWisherInformationValid;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
} Blockage_t;
#endif
#ifndef RTE_TYPE_BltLockSt_t
#define RTE_TYPE_BltLockSt_t
typedef VAR(boolean, TYPEDEF) BltLockSt_t;
#endif
#ifndef RTE_TYPE_DevErrSts_t
#define RTE_TYPE_DevErrSts_t
typedef VAR(boolean, TYPEDEF) DevErrSts_t;
#endif
#ifndef RTE_TYPE_BltLockStFrnt
#define RTE_TYPE_BltLockStFrnt
typedef struct
{
  VAR(BltLockSt_t, TYPEDEF) BltLockSt1;
  VAR(DevErrSts_t, TYPEDEF) BltLockSts;
} BltLockStFrnt;
#endif
#ifndef RTE_TYPE_CptEquid_t
#define RTE_TYPE_CptEquid_t
typedef VAR(boolean, TYPEDEF) CptEquid_t;
#endif
#ifndef RTE_TYPE_BltLockStRe
#define RTE_TYPE_BltLockStRe
typedef struct
{
  VAR(BltLockSt_t, TYPEDEF) BltLockSt1;
  VAR(DevErrSts_t, TYPEDEF) BltLockSts;
  VAR(CptEquid_t, TYPEDEF) BltLockEquid;
} BltLockStRe;
#endif
#ifndef RTE_TYPE_BndryLeft_Ang
#define RTE_TYPE_BndryLeft_Ang
typedef VAR(float, TYPEDEF) BndryLeft_Ang;
#endif
#ifndef RTE_TYPE_BndryLeft_Ang_Cam
#define RTE_TYPE_BndryLeft_Ang_Cam
typedef VAR(float, TYPEDEF) BndryLeft_Ang_Cam;
#endif
#ifndef RTE_TYPE_BndryLeft_Dist
#define RTE_TYPE_BndryLeft_Dist
typedef VAR(float, TYPEDEF) BndryLeft_Dist;
#endif
#ifndef RTE_TYPE_RTE_HLA_DistReliability
#define RTE_TYPE_RTE_HLA_DistReliability
typedef VAR(unsigned char, TYPEDEF) RTE_HLA_DistReliability;
#endif
#ifndef RTE_TYPE_BndryLeft_DistReliability
#define RTE_TYPE_BndryLeft_DistReliability
typedef VAR(RTE_HLA_DistReliability, TYPEDEF) BndryLeft_DistReliability;
#endif
#ifndef RTE_TYPE_RTE_HLAF_DistState
#define RTE_TYPE_RTE_HLAF_DistState
typedef VAR(unsigned char, TYPEDEF) RTE_HLAF_DistState;
#endif
#ifndef RTE_TYPE_BndryLeft_DistState
#define RTE_TYPE_BndryLeft_DistState
typedef VAR(RTE_HLAF_DistState, TYPEDEF) BndryLeft_DistState;
#endif
#ifndef RTE_TYPE_BndryLeft_ObjId
#define RTE_TYPE_BndryLeft_ObjId
typedef VAR(unsigned char, TYPEDEF) BndryLeft_ObjId;
#endif
#ifndef RTE_TYPE_RTE_HLAF_ObjStatus
#define RTE_TYPE_RTE_HLAF_ObjStatus
typedef VAR(unsigned char, TYPEDEF) RTE_HLAF_ObjStatus;
#endif
#ifndef RTE_TYPE_BndryLeft_Status
#define RTE_TYPE_BndryLeft_Status
typedef VAR(RTE_HLAF_ObjStatus, TYPEDEF) BndryLeft_Status;
#endif
#ifndef RTE_TYPE_BndryLower_Ang_Cam
#define RTE_TYPE_BndryLower_Ang_Cam
typedef VAR(float, TYPEDEF) BndryLower_Ang_Cam;
#endif
#ifndef RTE_TYPE_BndryLower_DistReliability
#define RTE_TYPE_BndryLower_DistReliability
typedef VAR(RTE_HLA_DistReliability, TYPEDEF) BndryLower_DistReliability;
#endif
#ifndef RTE_TYPE_BndryLower_DistState
#define RTE_TYPE_BndryLower_DistState
typedef VAR(RTE_HLAF_DistState, TYPEDEF) BndryLower_DistState;
#endif
#ifndef RTE_TYPE_BndryLower_ObjId
#define RTE_TYPE_BndryLower_ObjId
typedef VAR(unsigned char, TYPEDEF) BndryLower_ObjId;
#endif
#ifndef RTE_TYPE_BndryLower_Status
#define RTE_TYPE_BndryLower_Status
typedef VAR(RTE_HLAF_ObjStatus, TYPEDEF) BndryLower_Status;
#endif
#ifndef RTE_TYPE_BndryRight_Ang
#define RTE_TYPE_BndryRight_Ang
typedef VAR(float, TYPEDEF) BndryRight_Ang;
#endif
#ifndef RTE_TYPE_BndryRight_Ang_Cam
#define RTE_TYPE_BndryRight_Ang_Cam
typedef VAR(float, TYPEDEF) BndryRight_Ang_Cam;
#endif
#ifndef RTE_TYPE_BndryRight_Dist
#define RTE_TYPE_BndryRight_Dist
typedef VAR(float, TYPEDEF) BndryRight_Dist;
#endif
#ifndef RTE_TYPE_BndryRight_DistReliability
#define RTE_TYPE_BndryRight_DistReliability
typedef VAR(RTE_HLA_DistReliability, TYPEDEF) BndryRight_DistReliability;
#endif
#ifndef RTE_TYPE_BndryRight_DistState
#define RTE_TYPE_BndryRight_DistState
typedef VAR(RTE_HLAF_DistState, TYPEDEF) BndryRight_DistState;
#endif
#ifndef RTE_TYPE_BndryRight_ObjId
#define RTE_TYPE_BndryRight_ObjId
typedef VAR(unsigned char, TYPEDEF) BndryRight_ObjId;
#endif
#ifndef RTE_TYPE_BndryRight_Status
#define RTE_TYPE_BndryRight_Status
typedef VAR(RTE_HLAF_ObjStatus, TYPEDEF) BndryRight_Status;
#endif
#ifndef RTE_TYPE_BndryUpper_Ang_Cam
#define RTE_TYPE_BndryUpper_Ang_Cam
typedef VAR(float, TYPEDEF) BndryUpper_Ang_Cam;
#endif
#ifndef RTE_TYPE_BndryUpper_DistReliability
#define RTE_TYPE_BndryUpper_DistReliability
typedef VAR(RTE_HLA_DistReliability, TYPEDEF) BndryUpper_DistReliability;
#endif
#ifndef RTE_TYPE_BndryUpper_DistState
#define RTE_TYPE_BndryUpper_DistState
typedef VAR(RTE_HLAF_DistState, TYPEDEF) BndryUpper_DistState;
#endif
#ifndef RTE_TYPE_BndryUpper_ObjId
#define RTE_TYPE_BndryUpper_ObjId
typedef VAR(unsigned char, TYPEDEF) BndryUpper_ObjId;
#endif
#ifndef RTE_TYPE_BndryUpper_Status
#define RTE_TYPE_BndryUpper_Status
typedef VAR(RTE_HLAF_ObjStatus, TYPEDEF) BndryUpper_Status;
#endif
#ifndef RTE_TYPE_BoltSteerLockSts_t
#define RTE_TYPE_BoltSteerLockSts_t
typedef VAR(unsigned char, TYPEDEF) BoltSteerLockSts_t;
#endif
#ifndef RTE_TYPE_Boolean
#define RTE_TYPE_Boolean
typedef VAR(boolean, TYPEDEF) Boolean;
#endif
#ifndef RTE_TYPE_BrakeActLevel
#define RTE_TYPE_BrakeActLevel
typedef VAR(unsigned short, TYPEDEF) BrakeActLevel;
#endif
#ifndef RTE_TYPE_VDYIoStateTypes_t
#define RTE_TYPE_VDYIoStateTypes_t
typedef VAR(unsigned char, TYPEDEF) VDYIoStateTypes_t;
#endif
#ifndef RTE_TYPE_State_array_t_7
#define RTE_TYPE_State_array_t_7
typedef VAR(VDYIoStateTypes_t, TYPEDEF) State_array_t_7[8];
#endif
#ifndef RTE_TYPE_Brake_t
#define RTE_TYPE_Brake_t
typedef struct
{
  VAR(boolean, TYPEDEF) ABSCtrl;
  VAR(boolean, TYPEDEF) TCSCtrl;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
  VAR(State_array_t_7, TYPEDEF) State;
} Brake_t;
#endif
#ifndef RTE_TYPE_RTE_HLAR_BrightnessState
#define RTE_TYPE_RTE_HLAR_BrightnessState
typedef VAR(unsigned char, TYPEDEF) RTE_HLAR_BrightnessState;
#endif
#ifndef RTE_TYPE_BrightnessState
#define RTE_TYPE_BrightnessState
typedef VAR(RTE_HLAR_BrightnessState, TYPEDEF) BrightnessState;
#endif
#ifndef RTE_TYPE_BrkActrCtrlMod_t
#define RTE_TYPE_BrkActrCtrlMod_t
typedef VAR(unsigned char, TYPEDEF) BrkActrCtrlMod_t;
#endif
#ifndef RTE_TYPE_BrkAndAbsWarnIndcnReqRec1
#define RTE_TYPE_BrkAndAbsWarnIndcnReqRec1
typedef struct
{
  VAR(boolean, TYPEDEF) BrkWarnIndcnReq;
  VAR(AbsWarnIndcnReq_t, TYPEDEF) AbsWarnIndcnReq;
  VAR(uint8_t, TYPEDEF) BrkAndAbsWarnIndcnReqChks;
  VAR(uint8_t, TYPEDEF) BrkAndAbsWarnIndcnReqCntr;
} BrkAndAbsWarnIndcnReqRec1;
#endif
#ifndef RTE_TYPE_uint16_t
#define RTE_TYPE_uint16_t
typedef VAR(unsigned short, TYPEDEF) uint16_t;
#endif
#ifndef RTE_TYPE_BrkFricTqAtWhlActRec
#define RTE_TYPE_BrkFricTqAtWhlActRec
typedef struct
{
  VAR(uint16_t, TYPEDEF) BrkFricTqAtWhlFrntLeAct;
  VAR(uint16_t, TYPEDEF) BrkFricTqAtWhlFrntRiAct;
  VAR(uint16_t, TYPEDEF) BrkFricTqAtWhlReLeAct;
  VAR(uint16_t, TYPEDEF) BrkFricTqAtWhlReRiAct;
} BrkFricTqAtWhlActRec;
#endif
#ifndef RTE_TYPE_BrkFricTqTotAtWhlsActRec1
#define RTE_TYPE_BrkFricTqTotAtWhlsActRec1
typedef struct
{
  VAR(uint16_t, TYPEDEF) BrkFricTqTotAtWhlsAct;
  VAR(uint8_t, TYPEDEF) BrkFricTqTotAtWhlsActChks;
  VAR(uint8_t, TYPEDEF) BrkFricTqTotAtWhlsActCntr;
} BrkFricTqTotAtWhlsActRec1;
#endif
#ifndef RTE_TYPE_BrkHptcStsSafe1
#define RTE_TYPE_BrkHptcStsSafe1
typedef struct
{
  VAR(boolean, TYPEDEF) BrkHptcEna;
  VAR(boolean, TYPEDEF) BrkHptcDend;
  VAR(uint8_t, TYPEDEF) BrkHptcStsCntr;
  VAR(uint8_t, TYPEDEF) BrkHptcStsChks;
} BrkHptcStsSafe1;
#endif
#ifndef RTE_TYPE_BrkHptcWarnReqForAutDrvSafe1
#define RTE_TYPE_BrkHptcWarnReqForAutDrvSafe1
typedef struct
{
  VAR(uint8_t, TYPEDEF) BrkHptcWarnReqForAutDrv;
  VAR(uint8_t, TYPEDEF) BrkHptcWarnReqForAutDrvChks;
  VAR(uint8_t, TYPEDEF) BrkHptcWarnReqForAutDrvCntr;
} BrkHptcWarnReqForAutDrvSafe1;
#endif
#ifndef RTE_TYPE_ReqSts_t
#define RTE_TYPE_ReqSts_t
typedef VAR(boolean, TYPEDEF) ReqSts_t;
#endif
#ifndef RTE_TYPE_BrkLiOnReq1
#define RTE_TYPE_BrkLiOnReq1
typedef struct
{
  VAR(ReqSts_t, TYPEDEF) BrkLiOnReqSts;
  VAR(uint8_t, TYPEDEF) BrkLiOnReqChks;
  VAR(uint8_t, TYPEDEF) BrkLiOnReqCntr;
} BrkLiOnReq1;
#endif
#ifndef RTE_TYPE_BrkMsgWarn_t
#define RTE_TYPE_BrkMsgWarn_t
typedef VAR(unsigned char, TYPEDEF) BrkMsgWarn_t;
#endif
#ifndef RTE_TYPE_BrkPedlPsdRec
#define RTE_TYPE_BrkPedlPsdRec
typedef struct
{
  VAR(boolean, TYPEDEF) BrkPedlPsd;
  VAR(GenQf_t, TYPEDEF) BrkPedlPsdQf;
  VAR(uint8_t, TYPEDEF) BrkPedlPsdCntr;
  VAR(uint8_t, TYPEDEF) BrkPedlPsdChks;
  VAR(boolean, TYPEDEF) BrkPedlNotPsdSafe;
} BrkPedlPsdRec;
#endif
#ifndef RTE_TYPE_BrkPedlValRec1
#define RTE_TYPE_BrkPedlValRec1
typedef struct
{
  VAR(uint16_t, TYPEDEF) BrkPedlVal;
  VAR(GenQf_t, TYPEDEF) BrkPedlValQf;
} BrkPedlValRec1;
#endif
#ifndef RTE_TYPE_BrkSysWarnIndcnReqRec1
#define RTE_TYPE_BrkSysWarnIndcnReqRec1
typedef struct
{
  VAR(boolean, TYPEDEF) BrkSysWarnIndcnReq;
  VAR(uint8_t, TYPEDEF) BrkSysWarnIndcnReqChks;
  VAR(uint8_t, TYPEDEF) BrkSysWarnIndcnReqCntr;
} BrkSysWarnIndcnReqRec1;
#endif
#ifndef RTE_TYPE_BrkTqMinReqRec1
#define RTE_TYPE_BrkTqMinReqRec1
typedef struct
{
  VAR(uint16_t, TYPEDEF) BrkTqMinReq;
  VAR(BrkActrCtrlMod_t, TYPEDEF) BrkActrCtrlModForMinTqReq;
  VAR(uint16_t, TYPEDEF) BrkTqGrdtNegMinReq;
  VAR(uint16_t, TYPEDEF) BrkTqGrdtPosMinReq;
  VAR(uint8_t, TYPEDEF) BrkTqMinReqCntr;
  VAR(uint8_t, TYPEDEF) BrkTqMinReqChks;
} BrkTqMinReqRec1;
#endif
#ifndef RTE_TYPE_GB_t_BlockageHaarDetector_t
#define RTE_TYPE_GB_t_BlockageHaarDetector_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) ui8_static_blockage_no_blockage_to_condensation;
  VAR(unsigned char, TYPEDEF) ui8_condensation_to_no_blockage;
  VAR(unsigned char, TYPEDEF) ui8_blockage_to_condensation;
  VAR(unsigned char, TYPEDEF) ui8_condensation_to_blockage;
  VAR(unsigned char, TYPEDEF) ui8_MinConfTh;
} GB_t_BlockageHaarDetector_t;
#endif
#ifndef RTE_TYPE_GB_t_CondensationHaarDetector_t
#define RTE_TYPE_GB_t_CondensationHaarDetector_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) ui8_static_blockage_no_blockage_to_condensation;
  VAR(unsigned char, TYPEDEF) ui8_condensation_to_no_blockage;
  VAR(unsigned char, TYPEDEF) ui8_blockage_to_condensation;
  VAR(unsigned char, TYPEDEF) ui8_condensation_to_blockage;
  VAR(unsigned char, TYPEDEF) ui8_MinConfTh;
} GB_t_CondensationHaarDetector_t;
#endif
#ifndef RTE_TYPE_GB_t_SquarePartialBlockageHaarDetector_t
#define RTE_TYPE_GB_t_SquarePartialBlockageHaarDetector_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) ui8_square_partial_blockage;
  VAR(unsigned char, TYPEDEF) ui8_square_partial_blockage_to_condensation;
  VAR(unsigned char, TYPEDEF) ui8_square_partial_blockage_confidence;
} GB_t_SquarePartialBlockageHaarDetector_t;
#endif
#ifndef RTE_TYPE_GB_t_RadialPartialBlockageHaarDetector_t
#define RTE_TYPE_GB_t_RadialPartialBlockageHaarDetector_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) ui8_radial_partial_blockage;
  VAR(unsigned char, TYPEDEF) ui8_radial_partial_blockage_to_condensation;
  VAR(unsigned char, TYPEDEF) ui8_radial_partial_blockage_confidence;
} GB_t_RadialPartialBlockageHaarDetector_t;
#endif
#ifndef RTE_TYPE_GB_t_FloxelBlockageDetector_t
#define RTE_TYPE_GB_t_FloxelBlockageDetector_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) ui8_static_blockage_no_blockage_to_condensation;
  VAR(unsigned char, TYPEDEF) ui8_condensation_to_no_blockage;
  VAR(unsigned char, TYPEDEF) ui8_blockage_to_condensation_floxel_mono_improved_by_stereo;
  VAR(unsigned char, TYPEDEF) ui8_condensation_to_blockage_floxel_mono_improved_by_stereo;
  VAR(unsigned char, TYPEDEF) ui8_MinConfTh;
} GB_t_FloxelBlockageDetector_t;
#endif
#ifndef RTE_TYPE_GB_t_FloxelPartialBlockageHaarDetector_t
#define RTE_TYPE_GB_t_FloxelPartialBlockageHaarDetector_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) ui8_square_partial_blockage;
  VAR(unsigned char, TYPEDEF) ui8_square_partial_blockage_to_condensation;
  VAR(unsigned char, TYPEDEF) ui8_square_partial_blockage_confidence;
} GB_t_FloxelPartialBlockageHaarDetector_t;
#endif
#ifndef RTE_TYPE_GB_t_StaticBlockage_t
#define RTE_TYPE_GB_t_StaticBlockage_t
typedef struct
{
  VAR(GB_t_BlockageHaarDetector_t, TYPEDEF) s_BlockageHaarDetector;
  VAR(GB_t_CondensationHaarDetector_t, TYPEDEF) s_CondensationHaarDetector;
  VAR(GB_t_SquarePartialBlockageHaarDetector_t, TYPEDEF) s_SquarePartialBlockageHaarDetector;
  VAR(GB_t_RadialPartialBlockageHaarDetector_t, TYPEDEF) s_RadialPartialBlockageHaarDetector;
  VAR(GB_t_FloxelBlockageDetector_t, TYPEDEF) s_FloxelBlockageDetector;
  VAR(GB_t_FloxelPartialBlockageHaarDetector_t, TYPEDEF) s_FloxelPartialBlockageHaarDetector;
  VAR(unsigned char, TYPEDEF) ui8_current_state_confidence;
  VAR(signed char, TYPEDEF) ui8_current_state_confidence_in_unknown;
  VAR(unsigned char, TYPEDEF) ui8_current_state_confidence_in_unknown_status_limit;
  VAR(unsigned char, TYPEDEF) ui8_current_state_confidence_in_blockage;
} GB_t_StaticBlockage_t;
#endif
#ifndef RTE_TYPE_GB_t_HeavyRain_t
#define RTE_TYPE_GB_t_HeavyRain_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) ui8_HeavyRainDetector_MinConfTh;
  VAR(unsigned char, TYPEDEF) ui8_HeavyRainDetector_CntJumpHighTh;
  VAR(unsigned char, TYPEDEF) ui8_HeavyRainDetector_CntJumpLowTh;
  VAR(unsigned char, TYPEDEF) ui8_HeavyRainDetector_BlurExtentTh;
  VAR(unsigned char, TYPEDEF) ui8_HeavyRainDetector_BlockageMinTh;
  VAR(unsigned char, TYPEDEF) ui8_HeavyRainDetector_BlockageMaxTh;
  VAR(unsigned char, TYPEDEF) ui8_HeavyRainDetector_SigMeanMinTh;
  VAR(unsigned char, TYPEDEF) ui8_HeavyRainDetector_SigMeanMaxTh;
} GB_t_HeavyRain_t;
#endif
#ifndef RTE_TYPE_GB_t_HeavyGlaring_t
#define RTE_TYPE_GB_t_HeavyGlaring_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) ui16_HeavyGlaringDetector_MinConfTh;
  VAR(unsigned short, TYPEDEF) ui16_HeavyGlaringDetector_br_weight;
  VAR(unsigned short, TYPEDEF) ui16_HeavyGlaringDetector_be_weight;
  VAR(unsigned short, TYPEDEF) ui16_HeavyGlaringDetector_confidence_thresholdHigh;
  VAR(unsigned short, TYPEDEF) ui16_HeavyGlaringDetector_confidence_thresholdLow;
  VAR(unsigned short, TYPEDEF) ui16_HeavyGlaringDetector_MaxBrightnessThresholdBaseValue;
  VAR(unsigned short, TYPEDEF) ui16_HeavyGlaringDetector_brightnessThresholdRow2;
  VAR(unsigned short, TYPEDEF) ui16_HeavyGlaringDetector_brightnessThresholdRow3;
  VAR(unsigned short, TYPEDEF) ui16_HeavyGlaringDetector_brightnessThresholdRow4;
  VAR(unsigned short, TYPEDEF) ui16_HeavyGlaringDetector_brightnessThresholdRow5;
  VAR(unsigned short, TYPEDEF) ui16_HeavyGlaringDetector_BlurExtThreshold;
  VAR(unsigned short, TYPEDEF) ui16_HeavyGlaringDetector_NbOfOnesLowThreshold;
  VAR(unsigned short, TYPEDEF) ui16_HeavyGlaringDetector_NbOfOnesHighThreshold;
} GB_t_HeavyGlaring_t;
#endif
#ifndef RTE_TYPE_GB_t_HeavyFogByNight_t
#define RTE_TYPE_GB_t_HeavyFogByNight_t
typedef struct
{
  VAR(float, TYPEDEF) f32_HeavyFogDetectionByNight_MinConfTh;
  VAR(float, TYPEDEF) f32_HeavyFogDetectionByNight_Counter_CenterClear;
  VAR(float, TYPEDEF) f32_HeavyFogDetectionByNight_Counter_Mean_Clear_Light_Fog;
  VAR(float, TYPEDEF) f32_HeavyFogDetectionByNight_Counter_CenterLightFog;
  VAR(float, TYPEDEF) f32_HeavyFogDetectionByNight_Counter_Mean_Light_Medium_Fog;
  VAR(float, TYPEDEF) f32_HeavyFogDetectionByNight_Counter_CenterMediumFog;
  VAR(float, TYPEDEF) f32_HeavyFogDetectionByNight_Counter_Mean_Medium_Heavy_Fog;
  VAR(float, TYPEDEF) f32_HeavyFogDetectionByNight_Counter_CenterHeavyFog;
  VAR(float, TYPEDEF) f32_HeavyFogDetectionByNight_thresh_noFog;
  VAR(float, TYPEDEF) f32_HeavyFogDetectionByNight_threshBase_lightFog;
  VAR(float, TYPEDEF) f32_HeavyFogDetectionByNight_threshbase_heavyFog;
  VAR(float, TYPEDEF) f32_HeavyFogDetectionByNight_stepConfidenceIncrease;
  VAR(float, TYPEDEF) f32_HeavyFogDetectionByNight_stepConfidenceDecrease;
  VAR(float, TYPEDEF) f32_HeavyFogDetectionByNight_minHystTh;
  VAR(float, TYPEDEF) f32_HeavyFogDetectionByNight_maxHystTh;
} GB_t_HeavyFogByNight_t;
#endif
#ifndef RTE_TYPE_GB_t_HeavyFogByDay_t
#define RTE_TYPE_GB_t_HeavyFogByDay_t
typedef struct
{
  VAR(float, TYPEDEF) f32_HeavyFogDetectionByDay_MinConfTh;
  VAR(float, TYPEDEF) f32_HeavyFogDetectionByDay_minValidDisp;
  VAR(float, TYPEDEF) f32_HeavyFogDetectionByDay_minContrastThreshold;
  VAR(float, TYPEDEF) f32_HeavyFogDetectionByDay_maxDerivativeThreshold;
  VAR(float, TYPEDEF) f32_HeavyFogDetectionByDay_MaxDifferenceSlopeTrusted;
  VAR(float, TYPEDEF) f32_HeavyFogDetectionByDay_minHystTh;
  VAR(float, TYPEDEF) f32_HeavyFogDetectionByDay_maxHystTh;
} GB_t_HeavyFogByDay_t;
#endif
#ifndef RTE_TYPE_GB_t_LowLevel_t
#define RTE_TYPE_GB_t_LowLevel_t
typedef struct
{
  VAR(float, TYPEDEF) f32_alphaFast;
  VAR(float, TYPEDEF) f32_alpha;
  VAR(float, TYPEDEF) f32_alphaSlow;
  VAR(float, TYPEDEF) f32_DA_Percentage;
  VAR(unsigned short, TYPEDEF) f32_SaturatedPixelsThr;
  VAR(unsigned char, TYPEDEF) ui8_SpeedLimit;
  VAR(unsigned char, TYPEDEF) ui8_MinEdgeThr_CB;
  VAR(unsigned char, TYPEDEF) ui8_MinDiracThr_CB;
  VAR(unsigned char, TYPEDEF) ui8_MinEdgeThr_SCB;
  VAR(unsigned char, TYPEDEF) ui8_MinDiracThr_SCB;
  VAR(unsigned char, TYPEDEF) ui8_MaxBlurEdgeThr;
  VAR(unsigned char, TYPEDEF) ui8_MinNbEdges;
  VAR(unsigned char, TYPEDEF) ui8_MinNbEdgesWeights;
  VAR(unsigned char, TYPEDEF) ui8_MinPercentageDAEdgesInAOI;
  VAR(unsigned char, TYPEDEF) ui8_ConfidentDiracThr;
  VAR(unsigned char, TYPEDEF) ui8_ConfidentRoofThr;
  VAR(unsigned char, TYPEDEF) ui8_HysteresisLimitConf;
  VAR(unsigned char, TYPEDEF) ui8_ResetConfThr;
  VAR(unsigned char, TYPEDEF) ui8_RefVal4BlurEdges;
  VAR(unsigned char, TYPEDEF) ui8_MinDiracThrDark;
  VAR(unsigned char, TYPEDEF) ui8_ConfidentDiracThrBlurry;
  VAR(unsigned char, TYPEDEF) ui8_MinEdgeThrDark;
  VAR(unsigned char, TYPEDEF) ui8_MaxBlurEdgeThrDark;
  VAR(unsigned char, TYPEDEF) ui8_MinBrightRef4Blur;
  VAR(unsigned char, TYPEDEF) ui8_MaxBrightRef4Blur;
  VAR(unsigned char, TYPEDEF) ui8_MinRefVal4BlurEdges;
  VAR(unsigned char, TYPEDEF) ui8_MaxRefVal4BlurEdges;
} GB_t_LowLevel_t;
#endif
#ifndef RTE_TYPE_GB_t_Cracks_t
#define RTE_TYPE_GB_t_Cracks_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) ui8_Crack_Confidence;
  VAR(unsigned char, TYPEDEF) ui8_Crack_Value;
} GB_t_Cracks_t;
#endif
#ifndef RTE_TYPE_CB_t_CPAR_Parameters_t
#define RTE_TYPE_CB_t_CPAR_Parameters_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(GB_t_StaticBlockage_t, TYPEDEF) s_StaticBlockage;
  VAR(GB_t_HeavyRain_t, TYPEDEF) s_HeavyRain;
  VAR(GB_t_HeavyGlaring_t, TYPEDEF) s_HeavyGlaring;
  VAR(GB_t_HeavyFogByNight_t, TYPEDEF) s_HeavyFogByNight;
  VAR(GB_t_HeavyFogByDay_t, TYPEDEF) s_HeavyFogByDay;
  VAR(GB_t_LowLevel_t, TYPEDEF) s_LowLevel;
  VAR(GB_t_Cracks_t, TYPEDEF) s_Cracks;
} CB_t_CPAR_Parameters_t;
#endif
#ifndef RTE_TYPE_GB_t_eHeatingActivationRequest
#define RTE_TYPE_GB_t_eHeatingActivationRequest
typedef VAR(unsigned char, TYPEDEF) GB_t_eHeatingActivationRequest;
#endif
#ifndef RTE_TYPE_CB_t_HeatingRequest_t
#define RTE_TYPE_CB_t_HeatingRequest_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(GB_t_eHeatingActivationRequest, TYPEDEF) ui8_HeatingActivationRequest;
} CB_t_HeatingRequest_t;
#endif
#ifndef RTE_TYPE_GB_t_eBlockageStatus
#define RTE_TYPE_GB_t_eBlockageStatus
typedef VAR(unsigned char, TYPEDEF) GB_t_eBlockageStatus;
#endif
#ifndef RTE_TYPE_GB_t_eStereoBlockageType
#define RTE_TYPE_GB_t_eStereoBlockageType
typedef VAR(unsigned char, TYPEDEF) GB_t_eStereoBlockageType;
#endif
#ifndef RTE_TYPE_GB_t_eWeatherCondition
#define RTE_TYPE_GB_t_eWeatherCondition
typedef VAR(unsigned char, TYPEDEF) GB_t_eWeatherCondition;
#endif
#ifndef RTE_TYPE_GB_t_BrightnessStates
#define RTE_TYPE_GB_t_BrightnessStates
typedef VAR(unsigned char, TYPEDEF) GB_t_BrightnessStates;
#endif
#ifndef RTE_TYPE_GB_t_eOpticsStates
#define RTE_TYPE_GB_t_eOpticsStates
typedef VAR(unsigned char, TYPEDEF) GB_t_eOpticsStates;
#endif
#ifndef RTE_TYPE_CB_t_IPC_ProvidedOutputs_t
#define RTE_TYPE_CB_t_IPC_ProvidedOutputs_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(GB_t_eBlockageStatus, TYPEDEF) ui8_BlockageStatus;
  VAR(GB_t_eStereoBlockageType, TYPEDEF) ui8_StereoBlockageType;
  VAR(GB_t_eWeatherCondition, TYPEDEF) ui8_WeatherCondition;
  VAR(GB_t_BrightnessStates, TYPEDEF) ui8_BrightnessStatus;
  VAR(GB_t_eOpticsStates, TYPEDEF) ui8_OpticsStatus;
} CB_t_IPC_ProvidedOutputs_t;
#endif
#ifndef RTE_TYPE_GB_t_ImageRoi_t
#define RTE_TYPE_GB_t_ImageRoi_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) ui16_X;
  VAR(unsigned short, TYPEDEF) ui16_Y;
  VAR(unsigned short, TYPEDEF) ui16_Width;
  VAR(unsigned short, TYPEDEF) ui16_Height;
} GB_t_ImageRoi_t;
#endif
#ifndef RTE_TYPE_GB_t_2DPoint_t
#define RTE_TYPE_GB_t_2DPoint_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) ui16_X;
  VAR(unsigned short, TYPEDEF) ui16_Y;
} GB_t_2DPoint_t;
#endif
#ifndef RTE_TYPE_s_Def
#define RTE_TYPE_s_Def
typedef struct
{
  VAR(short, TYPEDEF) si16_TileIdxX;
  VAR(short, TYPEDEF) si16_TileIdxY;
  VAR(unsigned short, TYPEDEF) ui16_X1;
  VAR(unsigned short, TYPEDEF) ui16_X2;
  VAR(unsigned short, TYPEDEF) ui16_Y1;
  VAR(unsigned short, TYPEDEF) ui16_Y2;
} s_Def;
#endif
#ifndef RTE_TYPE_GB_t_TileDefinitionArray_t
#define RTE_TYPE_GB_t_TileDefinitionArray_t
typedef struct
{
  VAR(s_Def, TYPEDEF) s_Def[25];
} GB_t_TileDefinitionArray_t;
#endif
#ifndef RTE_TYPE_as_RadTilesDef
#define RTE_TYPE_as_RadTilesDef
typedef struct
{
  VAR(short, TYPEDEF) si16_RadTileType;
  VAR(short, TYPEDEF) si16_RadTileIdx;
  VAR(unsigned short, TYPEDEF) ui16_D1;
  VAR(unsigned short, TYPEDEF) ui16_D2;
} as_RadTilesDef;
#endif
#ifndef RTE_TYPE_s_RadDef
#define RTE_TYPE_s_RadDef
typedef struct
{
  VAR(short, TYPEDEF) si16_RadSegIdxX;
  VAR(short, TYPEDEF) si16_RadSegIdxY;
  VAR(float, TYPEDEF) f32_angle1;
  VAR(float, TYPEDEF) f32_angle2;
  VAR(as_RadTilesDef, TYPEDEF) as_RadTilesDef[5];
} s_RadDef;
#endif
#ifndef RTE_TYPE_GB_t_RadSegDefinitionArray_t
#define RTE_TYPE_GB_t_RadSegDefinitionArray_t
typedef struct
{
  VAR(s_RadDef, TYPEDEF) s_RadDef[8];
} GB_t_RadSegDefinitionArray_t;
#endif
#ifndef RTE_TYPE_GB_t_BlockageRawInfo_t
#define RTE_TYPE_GB_t_BlockageRawInfo_t
typedef struct
{
  VAR(AlgoDataTimeStamp_t, TYPEDEF) uiTimeStamp;
  VAR(unsigned short, TYPEDEF) ui16_Val;
  VAR(unsigned short, TYPEDEF) ui16_Conf;
} GB_t_BlockageRawInfo_t;
#endif
#ifndef RTE_TYPE_s_RawProb_array_t_0
#define RTE_TYPE_s_RawProb_array_t_0
typedef VAR(GB_t_BlockageRawInfo_t, TYPEDEF) s_RawProb_array_t_0[5];
#endif
#ifndef RTE_TYPE_GB_t_TileRawBlockageArray_t
#define RTE_TYPE_GB_t_TileRawBlockageArray_t
typedef struct
{
  VAR(s_RawProb_array_t_0, TYPEDEF) s_RawProb;
} GB_t_TileRawBlockageArray_t;
#endif
#ifndef RTE_TYPE_GB_t_BlockageInfo_t
#define RTE_TYPE_GB_t_BlockageInfo_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) ui16_Val;
  VAR(unsigned short, TYPEDEF) ui16_Conf;
} GB_t_BlockageInfo_t;
#endif
#ifndef RTE_TYPE_s_Prob_array_t
#define RTE_TYPE_s_Prob_array_t
typedef VAR(GB_t_BlockageInfo_t, TYPEDEF) s_Prob_array_t[25];
#endif
#ifndef RTE_TYPE_GB_t_TileBlockageArray_t
#define RTE_TYPE_GB_t_TileBlockageArray_t
typedef struct
{
  VAR(s_Prob_array_t, TYPEDEF) s_Prob;
} GB_t_TileBlockageArray_t;
#endif
#ifndef RTE_TYPE_GB_t_RadTileRawBlockageArray_t
#define RTE_TYPE_GB_t_RadTileRawBlockageArray_t
typedef struct
{
  VAR(GB_t_BlockageRawInfo_t, TYPEDEF) s_SegRawProb;
  VAR(s_RawProb_array_t_0, TYPEDEF) s_RawProb;
} GB_t_RadTileRawBlockageArray_t;
#endif
#ifndef RTE_TYPE_s_SegRawProb_array_t
#define RTE_TYPE_s_SegRawProb_array_t
typedef VAR(GB_t_RadTileRawBlockageArray_t, TYPEDEF) s_SegRawProb_array_t[8];
#endif
#ifndef RTE_TYPE_GB_t_RadSegRawBlockageArray_t
#define RTE_TYPE_GB_t_RadSegRawBlockageArray_t
typedef struct
{
  VAR(s_SegRawProb_array_t, TYPEDEF) s_SegRawProb;
} GB_t_RadSegRawBlockageArray_t;
#endif
#ifndef RTE_TYPE_GB_t_RadTileBlockageArray_t
#define RTE_TYPE_GB_t_RadTileBlockageArray_t
typedef struct
{
  VAR(s_Prob_array_t, TYPEDEF) s_Prob;
} GB_t_RadTileBlockageArray_t;
#endif
#ifndef RTE_TYPE_s_SegProb_array_t
#define RTE_TYPE_s_SegProb_array_t
typedef VAR(GB_t_RadTileBlockageArray_t, TYPEDEF) s_SegProb_array_t[8];
#endif
#ifndef RTE_TYPE_GB_t_RadSegBlockageArray_t
#define RTE_TYPE_GB_t_RadSegBlockageArray_t
typedef struct
{
  VAR(s_SegProb_array_t, TYPEDEF) s_SegProb;
} GB_t_RadSegBlockageArray_t;
#endif
#ifndef RTE_TYPE_GB_t_eVisibilityRange
#define RTE_TYPE_GB_t_eVisibilityRange
typedef VAR(unsigned char, TYPEDEF) GB_t_eVisibilityRange;
#endif
#ifndef RTE_TYPE_CB_t_ProvidedOutputs_t
#define RTE_TYPE_CB_t_ProvidedOutputs_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(GB_t_ImageRoi_t, TYPEDEF) s_BlockageRoi;
  VAR(GB_t_2DPoint_t, TYPEDEF) s_TilesCenter;
  VAR(GB_t_TileDefinitionArray_t, TYPEDEF) as_TilesDef;
  VAR(GB_t_RadSegDefinitionArray_t, TYPEDEF) as_RadSegDef;
  VAR(GB_t_TileRawBlockageArray_t, TYPEDEF) as_TilesRawBlockage;
  VAR(GB_t_TileBlockageArray_t, TYPEDEF) as_TilesBlockage;
  VAR(GB_t_RadSegRawBlockageArray_t, TYPEDEF) as_RadTilesRawBlockage;
  VAR(GB_t_RadSegBlockageArray_t, TYPEDEF) as_RadTilesBlockage;
  VAR(GB_t_eBlockageStatus, TYPEDEF) ui8_BlockageStatus;
  VAR(GB_t_eStereoBlockageType, TYPEDEF) ui8_StereoBlockageType;
  VAR(GB_t_eWeatherCondition, TYPEDEF) ui8_WeatherCondition;
  VAR(GB_t_eVisibilityRange, TYPEDEF) ui8_VisibilityRange;
  VAR(GB_t_BrightnessStates, TYPEDEF) ui8_BrightnessStatus;
  VAR(GB_t_eOpticsStates, TYPEDEF) ui8_OpticsStatus;
} CB_t_ProvidedOutputs_t;
#endif
#ifndef RTE_TYPE_CC_IACCHWATextInfoForDriver_t
#define RTE_TYPE_CC_IACCHWATextInfoForDriver_t
typedef VAR(unsigned char, TYPEDEF) CC_IACCHWATextInfoForDriver_t;
#endif
#ifndef RTE_TYPE_CC_LngTakeOverReq_t
#define RTE_TYPE_CC_LngTakeOverReq_t
typedef VAR(unsigned char, TYPEDEF) CC_LngTakeOverReq_t;
#endif
#ifndef RTE_TYPE_u_Payload_array_t
#define RTE_TYPE_u_Payload_array_t
typedef VAR(unsigned char, TYPEDEF) u_Payload_array_t[15];
#endif
#ifndef RTE_TYPE_CDR_t_Command_t
#define RTE_TYPE_CDR_t_Command_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) u_Command;
  VAR(u_Payload_array_t, TYPEDEF) u_Payload;
} CDR_t_Command_t;
#endif
#ifndef RTE_TYPE_u_ImageDecimationFactorPerArea_array_t
#define RTE_TYPE_u_ImageDecimationFactorPerArea_array_t
typedef VAR(unsigned char, TYPEDEF) u_ImageDecimationFactorPerArea_array_t[7];
#endif
#ifndef RTE_TYPE_CDR_t_RecordFormat_t
#define RTE_TYPE_CDR_t_RecordFormat_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) u_preTriggerImages;
  VAR(unsigned char, TYPEDEF) u_fullTriggerImages;
  VAR(unsigned char, TYPEDEF) u_maxPointTirrgerImages;
  VAR(unsigned char, TYPEDEF) u_postTriggerImages;
} CDR_t_RecordFormat_t;
#endif
#ifndef RTE_TYPE_RecordingFormatPerArea_array_t
#define RTE_TYPE_RecordingFormatPerArea_array_t
typedef VAR(CDR_t_RecordFormat_t, TYPEDEF) RecordingFormatPerArea_array_t[7];
#endif
#ifndef RTE_TYPE_CDR_t_TriggerID_t
#define RTE_TYPE_CDR_t_TriggerID_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) u_TriggerIDHigh;
  VAR(unsigned char, TYPEDEF) u_TriggerIDLow;
} CDR_t_TriggerID_t;
#endif
#ifndef RTE_TYPE_TriggerGroups_array_t
#define RTE_TYPE_TriggerGroups_array_t
typedef VAR(CDR_t_TriggerID_t, TYPEDEF) TriggerGroups_array_t[42];
#endif
#ifndef RTE_TYPE_u_TriggerGroup2RecordingAreaAssociation_array_t
#define RTE_TYPE_u_TriggerGroup2RecordingAreaAssociation_array_t
typedef VAR(unsigned char, TYPEDEF) u_TriggerGroup2RecordingAreaAssociation_array_t[7];
#endif
#ifndef RTE_TYPE_u_VirtualNumOfDataSet_array_t
#define RTE_TYPE_u_VirtualNumOfDataSet_array_t
typedef VAR(unsigned char, TYPEDEF) u_VirtualNumOfDataSet_array_t[7];
#endif
#ifndef RTE_TYPE_u_VirtualAddressMAP_array_t
#define RTE_TYPE_u_VirtualAddressMAP_array_t
typedef VAR(unsigned int, TYPEDEF) u_VirtualAddressMAP_array_t[7];
#endif
#ifndef RTE_TYPE_CDR_t_Encryption_t
#define RTE_TYPE_CDR_t_Encryption_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) u_EncMode;
  VAR(unsigned char, TYPEDEF) u_EncryptionKey;
} CDR_t_Encryption_t;
#endif
#ifndef RTE_TYPE_CDR_t_Config_t
#define RTE_TYPE_CDR_t_Config_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) u_ImageDecimationFactor;
  VAR(u_ImageDecimationFactorPerArea_array_t, TYPEDEF) u_ImageDecimationFactorPerArea;
  VAR(unsigned char, TYPEDEF) u_NumberOfTriggerGroups;
  VAR(unsigned char, TYPEDEF) u_NumberOfPreTriggerImages;
  VAR(unsigned char, TYPEDEF) u_NumberOfPostTriggerImages;
  VAR(unsigned char, TYPEDEF) u_NumberOfPointTriggerImages;
  VAR(unsigned char, TYPEDEF) u_NumberOfFullTriggerImages;
  VAR(RecordingFormatPerArea_array_t, TYPEDEF) RecordingFormatPerArea;
  VAR(unsigned char, TYPEDEF) u_NumberOfRecordingAreas;
  VAR(unsigned char, TYPEDEF) u_PointTriggerSupported;
  VAR(unsigned char, TYPEDEF) u_PayloadImageHight;
  VAR(unsigned char, TYPEDEF) u_PalyloadImageWidth;
  VAR(unsigned char, TYPEDEF) u_ReadOutImageHight;
  VAR(unsigned char, TYPEDEF) u_ReadOutImageWidth;
  VAR(unsigned short, TYPEDEF) u_DataSetHeaderSize;
  VAR(TriggerGroups_array_t, TYPEDEF) TriggerGroups;
  VAR(u_TriggerGroup2RecordingAreaAssociation_array_t, TYPEDEF) u_TriggerGroup2RecordingAreaAssociation;
  VAR(u_VirtualNumOfDataSet_array_t, TYPEDEF) u_VirtualNumOfDataSet;
  VAR(u_VirtualAddressMAP_array_t, TYPEDEF) u_VirtualAddressMAP;
  VAR(unsigned int, TYPEDEF) u_SizeOfReadRequest;
  VAR(CDR_t_Encryption_t, TYPEDEF) u_Encryption;
} CDR_t_Config_t;
#endif
#ifndef RTE_TYPE_u_CDRData_array_t
#define RTE_TYPE_u_CDRData_array_t
typedef VAR(unsigned char, TYPEDEF) u_CDRData_array_t[256];
#endif
#ifndef RTE_TYPE_CDR_t_Reply_t
#define RTE_TYPE_CDR_t_Reply_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) u_Command;
  VAR(unsigned char, TYPEDEF) u_ErrorStatus;
  VAR(u_CDRData_array_t, TYPEDEF) u_CDRData;
  VAR(unsigned char, TYPEDEF) u_PaddingOne;
  VAR(unsigned char, TYPEDEF) u_PaddingTwo;
} CDR_t_Reply_t;
#endif
#ifndef RTE_TYPE_u_Triggers_array_t
#define RTE_TYPE_u_Triggers_array_t
typedef VAR(CDR_t_TriggerID_t, TYPEDEF) u_Triggers_array_t[42];
#endif
#ifndef RTE_TYPE_CDR_t_Trigger_t
#define RTE_TYPE_CDR_t_Trigger_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) u_NumberOfTriggers;
  VAR(unsigned short, TYPEDEF) u_TripCount;
  VAR(unsigned int, TYPEDEF) u_TimeCount;
  VAR(u_Triggers_array_t, TYPEDEF) u_Triggers;
  VAR(unsigned char, TYPEDEF) u_PaddingOne;
  VAR(unsigned char, TYPEDEF) u_PaddingTwo;
  VAR(unsigned char, TYPEDEF) u_PaddingThree;
} CDR_t_Trigger_t;
#endif
#ifndef RTE_TYPE_CFAPos_t
#define RTE_TYPE_CFAPos_t
typedef VAR(unsigned char, TYPEDEF) CFAPos_t;
#endif
#ifndef RTE_TYPE_lodmc_service_id_t
#define RTE_TYPE_lodmc_service_id_t
typedef VAR(unsigned char, TYPEDEF) lodmc_service_id_t;
#endif
#ifndef RTE_TYPE_acceleration_t
#define RTE_TYPE_acceleration_t
typedef VAR(short, TYPEDEF) acceleration_t;
#endif
#ifndef RTE_TYPE_lodmc_act_type_t
#define RTE_TYPE_lodmc_act_type_t
typedef VAR(unsigned char, TYPEDEF) lodmc_act_type_t;
#endif
#ifndef RTE_TYPE_lodmc_control_request_t
#define RTE_TYPE_lodmc_control_request_t
typedef struct
{
  VAR(lodmc_service_id_t, TYPEDEF) REQUESTER_SERVICE_ID;
  VAR(boolean, TYPEDEF) STANDSTILL_REQ;
  VAR(acceleration_t, TYPEDEF) ACCEL_REQ;
  VAR(lodmc_act_type_t, TYPEDEF) REQ_ACTUATOR;
  VAR(boolean, TYPEDEF) REQ_ACTIVE;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
} lodmc_control_request_t;
#endif
#ifndef RTE_TYPE_CONTROL_REQUEST_array_t
#define RTE_TYPE_CONTROL_REQUEST_array_t
typedef VAR(lodmc_control_request_t, TYPEDEF) CONTROL_REQUEST_array_t[1];
#endif
#ifndef RTE_TYPE_CPAREBACodingFctMods_t
#define RTE_TYPE_CPAREBACodingFctMods_t
typedef VAR(unsigned short, TYPEDEF) CPAREBACodingFctMods_t;
#endif
#ifndef RTE_TYPE_CPAR_ALDW_Parameters_t
#define RTE_TYPE_CPAR_ALDW_Parameters_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNr;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(ALDW_Parameters_t, TYPEDEF) ALDW_Parameters;
} CPAR_ALDW_Parameters_t;
#endif
#ifndef RTE_TYPE_EBACodingParamGen_t
#define RTE_TYPE_EBACodingParamGen_t
typedef VAR(unsigned int, TYPEDEF) EBACodingParamGen_t;
#endif
#ifndef RTE_TYPE_EBACodingParamFctMods_array_t
#define RTE_TYPE_EBACodingParamFctMods_array_t
typedef VAR(CPAREBACodingFctMods_t, TYPEDEF) EBACodingParamFctMods_array_t[24];
#endif
#ifndef RTE_TYPE_EBACodingParamCustom_t
#define RTE_TYPE_EBACodingParamCustom_t
typedef VAR(unsigned char, TYPEDEF) EBACodingParamCustom_t;
#endif
#ifndef RTE_TYPE_eDriverSetting_t
#define RTE_TYPE_eDriverSetting_t
typedef VAR(unsigned char, TYPEDEF) eDriverSetting_t;
#endif
#ifndef RTE_TYPE_EM_t_GenObjSensorSource
#define RTE_TYPE_EM_t_GenObjSensorSource
typedef VAR(unsigned char, TYPEDEF) EM_t_GenObjSensorSource;
#endif
#ifndef RTE_TYPE_CPAR_EBA_Parameters_t
#define RTE_TYPE_CPAR_EBA_Parameters_t
typedef struct
{
  VAR(EBACodingParamGen_t, TYPEDEF) EBACodingParamGen;
  VAR(EBACodingParamFctMods_array_t, TYPEDEF) EBACodingParamFctMods;
  VAR(boolean, TYPEDEF) EBACodingParamValid;
  VAR(EBACodingParamCustom_t, TYPEDEF) EBACodingParamCustom;
  VAR(eDriverSetting_t, TYPEDEF) EBADriverSettingCoding;
  VAR(EM_t_GenObjSensorSource, TYPEDEF) eObjListConfig;
} CPAR_EBA_Parameters_t;
#endif
#ifndef RTE_TYPE_EcmRteSensorAngles_t
#define RTE_TYPE_EcmRteSensorAngles_t
typedef struct
{
  VAR(float, TYPEDEF) f32_Pitch;
  VAR(float, TYPEDEF) f32_Roll;
  VAR(float, TYPEDEF) f32_Yaw;
  VAR(unsigned int, TYPEDEF) ui32_Quality;
} EcmRteSensorAngles_t;
#endif
#ifndef RTE_TYPE_EcmRteSensorAngularTolerances_t
#define RTE_TYPE_EcmRteSensorAngularTolerances_t
typedef struct
{
  VAR(EcmRteSensorAngles_t, TYPEDEF) sTolerancePositive;
  VAR(EcmRteSensorAngles_t, TYPEDEF) sToleranceNegative;
} EcmRteSensorAngularTolerances_t;
#endif
#ifndef RTE_TYPE_EcmRtePatternParameter_t
#define RTE_TYPE_EcmRtePatternParameter_t
typedef struct
{
  VAR(float, TYPEDEF) fWidth;
  VAR(float, TYPEDEF) fHeight;
  VAR(float, TYPEDEF) fDistanceCircle2Circle;
  VAR(float, TYPEDEF) fDistanceCircle2Center;
  VAR(float, TYPEDEF) fOuterCircleDiameter;
  VAR(float, TYPEDEF) fInnerCircleDiameter;
} EcmRtePatternParameter_t;
#endif
#ifndef RTE_TYPE_CPAR_EcmRte_t
#define RTE_TYPE_CPAR_EcmRte_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(float, TYPEDEF) fSensorSocketPositionXMin;
  VAR(float, TYPEDEF) fSensorSocketPositionXMax;
  VAR(float, TYPEDEF) fSensorSocketPositionYMin;
  VAR(float, TYPEDEF) fSensorSocketPositionYMax;
  VAR(float, TYPEDEF) fSensorSocketPositionZMin;
  VAR(float, TYPEDEF) fSensorSocketPositionZMax;
  VAR(float, TYPEDEF) fBoardPositionXMin;
  VAR(float, TYPEDEF) fBoardPositionXMax;
  VAR(float, TYPEDEF) fBoardPositionYMin;
  VAR(float, TYPEDEF) fBoardPositionYMax;
  VAR(float, TYPEDEF) fBoardPositionZMin;
  VAR(float, TYPEDEF) fBoardPositionZMax;
  VAR(float, TYPEDEF) fMaxTargetDifferentHorizontalDistance;
  VAR(float, TYPEDEF) fMaxTargetDifferentVerticalDistance;
  VAR(float, TYPEDEF) fMaxCenterTargetOrthogonalDistance;
  VAR(float, TYPEDEF) fMinContrast;
  VAR(float, TYPEDEF) fMaxContrast;
  VAR(float, TYPEDEF) fMinBrightness;
  VAR(float, TYPEDEF) fMaxBrightness;
  VAR(float, TYPEDEF) fMaxRuntimeMs;
  VAR(float, TYPEDEF) fMaxRuntimeCycles;
  VAR(unsigned int, TYPEDEF) uiMaxPatternDimension;
  VAR(unsigned int, TYPEDEF) uiMaxCircleListElements;
  VAR(EcmRteSensorAngularTolerances_t, TYPEDEF) sSensorOrientationTolerances;
  VAR(EcmRtePatternParameter_t, TYPEDEF) sPattern;
} CPAR_EcmRte_t;
#endif
#ifndef RTE_TYPE_CPAR_Emo_t
#define RTE_TYPE_CPAR_Emo_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(float, TYPEDEF) fCalibCamAbsDevYaw;
  VAR(float, TYPEDEF) fCalibCamAbsDevRoll;
  VAR(float, TYPEDEF) fCalibCamMinDevPitch;
  VAR(float, TYPEDEF) fCalibCamMaxDevPitch;
  VAR(float, TYPEDEF) fCalibMaxInitialDistance;
  VAR(unsigned char, TYPEDEF) uEnableOnlineCalibration;
  VAR(float, TYPEDEF) fCalibCamResetOffsetRoll;
  VAR(float, TYPEDEF) fCalibCamResetOffsetPitch;
  VAR(float, TYPEDEF) fCalibCamResetOffsetYaw;
} CPAR_Emo_t;
#endif
#ifndef RTE_TYPE_LCDCodingParamMaxTorque_array_t
#define RTE_TYPE_LCDCodingParamMaxTorque_array_t
typedef VAR(float, TYPEDEF) LCDCodingParamMaxTorque_array_t[8];
#endif
#ifndef RTE_TYPE_LCDCodingParamMaxTorqueRate_array_t
#define RTE_TYPE_LCDCodingParamMaxTorqueRate_array_t
typedef VAR(float, TYPEDEF) LCDCodingParamMaxTorqueRate_array_t[8];
#endif
#ifndef RTE_TYPE_LCDCodingParamPGains_array_t
#define RTE_TYPE_LCDCodingParamPGains_array_t
typedef VAR(float, TYPEDEF) LCDCodingParamPGains_array_t[8];
#endif
#ifndef RTE_TYPE_LCDCodingParamIGains_array_t
#define RTE_TYPE_LCDCodingParamIGains_array_t
typedef VAR(float, TYPEDEF) LCDCodingParamIGains_array_t[8];
#endif
#ifndef RTE_TYPE_LCDCodingParamDGains_array_t
#define RTE_TYPE_LCDCodingParamDGains_array_t
typedef VAR(float, TYPEDEF) LCDCodingParamDGains_array_t[8];
#endif
#ifndef RTE_TYPE_LCDCodingParamEigFreq_array_t
#define RTE_TYPE_LCDCodingParamEigFreq_array_t
typedef VAR(float, TYPEDEF) LCDCodingParamEigFreq_array_t[8];
#endif
#ifndef RTE_TYPE_LCDCodingParamTimeConst_array_t
#define RTE_TYPE_LCDCodingParamTimeConst_array_t
typedef VAR(float, TYPEDEF) LCDCodingParamTimeConst_array_t[8];
#endif
#ifndef RTE_TYPE_LCDCodingParamPIDIFeedbackGains_array_t
#define RTE_TYPE_LCDCodingParamPIDIFeedbackGains_array_t
typedef VAR(float, TYPEDEF) LCDCodingParamPIDIFeedbackGains_array_t[8];
#endif
#ifndef RTE_TYPE_LCDCodingParamFFTorque_array_t
#define RTE_TYPE_LCDCodingParamFFTorque_array_t
typedef VAR(float, TYPEDEF) LCDCodingParamFFTorque_array_t[8];
#endif
#ifndef RTE_TYPE_CPAR_FCT_LCD_t
#define RTE_TYPE_CPAR_FCT_LCD_t
typedef struct
{
  VAR(float, TYPEDEF) LCDCodingRampOutTrqGrad;
  VAR(float, TYPEDEF) LCDCodingParamPIDFilterCoef;
  VAR(float, TYPEDEF) LCDCodingParamAWDFeedbackFactor;
  VAR(float, TYPEDEF) LCDCodingParamStrVelTrqFilterCoef;
  VAR(float, TYPEDEF) LCDCodingParamStrVelTrqDamping;
  VAR(float, TYPEDEF) LCDCodingParamFFFilterCoef;
  VAR(LCDCodingParamMaxTorque_array_t, TYPEDEF) LCDCodingParamMaxTorque;
  VAR(LCDCodingParamMaxTorqueRate_array_t, TYPEDEF) LCDCodingParamMaxTorqueRate;
  VAR(LCDCodingParamPGains_array_t, TYPEDEF) LCDCodingParamPGains;
  VAR(LCDCodingParamIGains_array_t, TYPEDEF) LCDCodingParamIGains;
  VAR(LCDCodingParamDGains_array_t, TYPEDEF) LCDCodingParamDGains;
  VAR(LCDCodingParamEigFreq_array_t, TYPEDEF) LCDCodingParamEigFreq;
  VAR(LCDCodingParamTimeConst_array_t, TYPEDEF) LCDCodingParamTimeConst;
  VAR(LCDCodingParamPIDIFeedbackGains_array_t, TYPEDEF) LCDCodingParamPIDIFeedbackGains;
  VAR(LCDCodingParamFFTorque_array_t, TYPEDEF) LCDCodingParamFFTorque;
} CPAR_FCT_LCD_t;
#endif
#ifndef RTE_TYPE_LCKCodingParamStrAngGains_array_t
#define RTE_TYPE_LCKCodingParamStrAngGains_array_t
typedef VAR(float, TYPEDEF) LCKCodingParamStrAngGains_array_t[8];
#endif
#ifndef RTE_TYPE_LCKCodingParamStrAngVelGains_array_t
#define RTE_TYPE_LCKCodingParamStrAngVelGains_array_t
typedef VAR(float, TYPEDEF) LCKCodingParamStrAngVelGains_array_t[8];
#endif
#ifndef RTE_TYPE_LCKCodingParamYawRateGains_array_t
#define RTE_TYPE_LCKCodingParamYawRateGains_array_t
typedef VAR(float, TYPEDEF) LCKCodingParamYawRateGains_array_t[8];
#endif
#ifndef RTE_TYPE_LCKCodingParamHeadingGains_array_t
#define RTE_TYPE_LCKCodingParamHeadingGains_array_t
typedef VAR(float, TYPEDEF) LCKCodingParamHeadingGains_array_t[8];
#endif
#ifndef RTE_TYPE_LCKCodingParamLatDevGains_array_t
#define RTE_TYPE_LCKCodingParamLatDevGains_array_t
typedef VAR(float, TYPEDEF) LCKCodingParamLatDevGains_array_t[8];
#endif
#ifndef RTE_TYPE_CPAR_FCT_LCK_t
#define RTE_TYPE_CPAR_FCT_LCK_t
typedef struct
{
  VAR(float, TYPEDEF) LCKCodingParamLinFadingCoef;
  VAR(LCKCodingParamStrAngGains_array_t, TYPEDEF) LCKCodingParamStrAngGains;
  VAR(LCKCodingParamStrAngVelGains_array_t, TYPEDEF) LCKCodingParamStrAngVelGains;
  VAR(LCKCodingParamYawRateGains_array_t, TYPEDEF) LCKCodingParamYawRateGains;
  VAR(LCKCodingParamHeadingGains_array_t, TYPEDEF) LCKCodingParamHeadingGains;
  VAR(LCKCodingParamLatDevGains_array_t, TYPEDEF) LCKCodingParamLatDevGains;
} CPAR_FCT_LCK_t;
#endif
#ifndef RTE_TYPE_CPAR_FCT_LKS_Hash_t
#define RTE_TYPE_CPAR_FCT_LKS_Hash_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) LKSCodingParamHash;
  VAR(unsigned int, TYPEDEF) LCKCodingParamHash;
  VAR(unsigned int, TYPEDEF) LCDCodingParamHash;
} CPAR_FCT_LKS_Hash_t;
#endif
#ifndef RTE_TYPE_LKSCodingParamGen_t
#define RTE_TYPE_LKSCodingParamGen_t
typedef VAR(unsigned int, TYPEDEF) LKSCodingParamGen_t;
#endif
#ifndef RTE_TYPE_LKSCodingParamLDWActivationSpeed_array_t
#define RTE_TYPE_LKSCodingParamLDWActivationSpeed_array_t
typedef VAR(float, TYPEDEF) LKSCodingParamLDWActivationSpeed_array_t[4];
#endif
#ifndef RTE_TYPE_LKSCodingParamLDWActivationSpeedMph_array_t
#define RTE_TYPE_LKSCodingParamLDWActivationSpeedMph_array_t
typedef VAR(float, TYPEDEF) LKSCodingParamLDWActivationSpeedMph_array_t[4];
#endif
#ifndef RTE_TYPE_LKSCodingParamLDPActivationSpeed_array_t
#define RTE_TYPE_LKSCodingParamLDPActivationSpeed_array_t
typedef VAR(float, TYPEDEF) LKSCodingParamLDPActivationSpeed_array_t[4];
#endif
#ifndef RTE_TYPE_LKSCodingParamLDPActivationSpeedMph_array_t
#define RTE_TYPE_LKSCodingParamLDPActivationSpeedMph_array_t
typedef VAR(float, TYPEDEF) LKSCodingParamLDPActivationSpeedMph_array_t[4];
#endif
#ifndef RTE_TYPE_LKSCodingParamLDPFinishPosition_array_t
#define RTE_TYPE_LKSCodingParamLDPFinishPosition_array_t
typedef VAR(float, TYPEDEF) LKSCodingParamLDPFinishPosition_array_t[3];
#endif
#ifndef RTE_TYPE_CPAR_FCT_LKS_t
#define RTE_TYPE_CPAR_FCT_LKS_t
typedef struct
{
  VAR(boolean, TYPEDEF) LKSCodingParamValid;
  VAR(LKSCodingParamGen_t, TYPEDEF) LKSCodingParamGen;
  VAR(LKSCodingParamLDWActivationSpeed_array_t, TYPEDEF) LKSCodingParamLDWActivationSpeed;
  VAR(LKSCodingParamLDWActivationSpeedMph_array_t, TYPEDEF) LKSCodingParamLDWActivationSpeedMph;
  VAR(LKSCodingParamLDPActivationSpeed_array_t, TYPEDEF) LKSCodingParamLDPActivationSpeed;
  VAR(LKSCodingParamLDPActivationSpeedMph_array_t, TYPEDEF) LKSCodingParamLDPActivationSpeedMph;
  VAR(float, TYPEDEF) LKSCodingParamMinLaneWidth;
  VAR(float, TYPEDEF) LKSCodingParamMaxLaneWidth;
  VAR(float, TYPEDEF) LKSCodingParamMaxDeviationSpeed;
  VAR(float, TYPEDEF) LKSCodingParamInLaneResetDistance;
  VAR(float, TYPEDEF) LKSCodingParamMaxAccelerationPedalRate;
  VAR(float, TYPEDEF) LKSCodingParamAccelPedalRateWaitingTime;
  VAR(float, TYPEDEF) LKSCodingParamBrakePedalWaitingTime;
  VAR(float, TYPEDEF) LKSCodingParamChassisCtrlOffWaitingTime;
  VAR(float, TYPEDEF) LKSCodingParamChassisCtrlActiveWaitingTime;
  VAR(float, TYPEDEF) LKSCodingParamTurnIndicatorWaitingTime;
  VAR(float, TYPEDEF) LKSCodingParamOvertakeDelayTime;
  VAR(float, TYPEDEF) LKSCodingParamOvertakeSuppressionTime;
  VAR(float, TYPEDEF) LKSCodingParamLaneChangeWaitingTime;
  VAR(float, TYPEDEF) LKSCodingParamLDWMinWaitingTime;
  VAR(float, TYPEDEF) LKSCodingParamLDWMinWarningTime;
  VAR(float, TYPEDEF) LKSCodingParamLDWMaxWarningTime;
  VAR(float, TYPEDEF) LKSCodingParamLDPMinWaitingTime;
  VAR(float, TYPEDEF) LKSCodingParamLDPMaxInterventionTime;
  VAR(float, TYPEDEF) LKSCodingParamLDPLateralAccelerationEntry;
  VAR(float, TYPEDEF) LKSCodingParamLDPLateralAccelerationExit;
  VAR(float, TYPEDEF) LKSCodingParamLDPLongAccelerationEntry;
  VAR(float, TYPEDEF) LKSCodingParamLDPLongAccelerationExit;
  VAR(float, TYPEDEF) LKSCodingParamLDPLongAccelWaitingTime;
  VAR(float, TYPEDEF) LKSCodingParamLDPSteeringWheelAngleEntry;
  VAR(float, TYPEDEF) LKSCodingParamLDPSteeringWheelAngleExit;
  VAR(float, TYPEDEF) LKSCodingParamLDPSteeringWheelVelocityEntry;
  VAR(float, TYPEDEF) LKSCodingParamLDPSteeringWheelVelocityExit;
  VAR(float, TYPEDEF) LKSCodingParamLDPDrvStrIntToqThreshFirst;
  VAR(float, TYPEDEF) LKSCodingParamLDPDrvStrIntTrqThreshSecond;
  VAR(float, TYPEDEF) LKSCodingParamLDPDrvStrIntTrqThreshThird;
  VAR(float, TYPEDEF) LKSCodingParamLDPCancelDrvStrIntTrqThresh;
  VAR(float, TYPEDEF) LKSCodingParamLDPDrvStrIntTrqHysteresis;
  VAR(float, TYPEDEF) LKSCodingParamLDPDrvStrIntTimeThreshFirst;
  VAR(float, TYPEDEF) LKSCodingParamLDPDrvStrIntTimeThreshSecond;
  VAR(float, TYPEDEF) LKSCodingParamLDPDrvStrIntTimeThreshThird;
  VAR(float, TYPEDEF) LKSCodingParamLDPDrvStrIntWaitingTime;
  VAR(float, TYPEDEF) LKSCodingParamLDPCancelSteeringWheelVelocity;
  VAR(float, TYPEDEF) LKSCodingParamLDPHandsOffStrTrqThresh;
  VAR(float, TYPEDEF) LKSCodingParamLDPHandsOffCurvatureThresh;
  VAR(float, TYPEDEF) LKSCodingParamLDPHandsOffWaitingTimeStraight;
  VAR(float, TYPEDEF) LKSCodingParamLDPHandsOffWaitingTimeCurve;
  VAR(float, TYPEDEF) LKSCodingParamLDPHandsOffAddnlWaitingTime;
  VAR(float, TYPEDEF) LKSCodingParamLDPHandsOffMinActionTime;
  VAR(float, TYPEDEF) LKSCodingParamLDWStartPositionOffset;
  VAR(float, TYPEDEF) LKSCodingParamLDWFinishPosition;
  VAR(float, TYPEDEF) LKSCodingParamLDWFinishLateralVelocity;
  VAR(float, TYPEDEF) LKSCodingParamLDPStartPositionOffset;
  VAR(LKSCodingParamLDPFinishPosition_array_t, TYPEDEF) LKSCodingParamLDPFinishPosition;
} CPAR_FCT_LKS_t;
#endif
#ifndef RTE_TYPE_CPAR_FCT_LKS_Parameters_t
#define RTE_TYPE_CPAR_FCT_LKS_Parameters_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(CPAR_FCT_LKS_Hash_t, TYPEDEF) Hash;
  VAR(CPAR_FCT_LKS_t, TYPEDEF) LKS;
  VAR(CPAR_FCT_LCK_t, TYPEDEF) LCK;
  VAR(CPAR_FCT_LCD_t, TYPEDEF) LCD;
} CPAR_FCT_LKS_Parameters_t;
#endif
#ifndef RTE_TYPE_CPAR_FCT_Parameters_t
#define RTE_TYPE_CPAR_FCT_Parameters_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(CPAR_EBA_Parameters_t, TYPEDEF) EBA;
} CPAR_FCT_Parameters_t;
#endif
#ifndef RTE_TYPE_RTE_HLA_TestMode
#define RTE_TYPE_RTE_HLA_TestMode
typedef VAR(unsigned char, TYPEDEF) RTE_HLA_TestMode;
#endif
#ifndef RTE_TYPE_RTE_HLA_FogDetection
#define RTE_TYPE_RTE_HLA_FogDetection
typedef VAR(unsigned char, TYPEDEF) RTE_HLA_FogDetection;
#endif
#ifndef RTE_TYPE_RTE_HLA_CparSensityMode
#define RTE_TYPE_RTE_HLA_CparSensityMode
typedef VAR(unsigned char, TYPEDEF) RTE_HLA_CparSensityMode;
#endif
#ifndef RTE_TYPE_RTE_HLAF_ParameterAlgoCfg_t
#define RTE_TYPE_RTE_HLAF_ParameterAlgoCfg_t
typedef struct
{
  VAR(RTE_HLA_TestMode, TYPEDEF) TestMode;
  VAR(RTE_HLA_FogDetection, TYPEDEF) FogDetection;
  VAR(RTE_HLA_BadWeatherDetection, TYPEDEF) BadWeatherDetection;
  VAR(RTE_HLA_CparSensityMode, TYPEDEF) sensitivityMode;
} RTE_HLAF_ParameterAlgoCfg_t;
#endif
#ifndef RTE_TYPE_RTE_HLAF_ParameterVehicleProbability_t
#define RTE_TYPE_RTE_HLAF_ParameterVehicleProbability_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) thresholdUpperOncoming;
  VAR(unsigned char, TYPEDEF) thresholdUpperPreceding;
  VAR(unsigned char, TYPEDEF) thresholdUpperOncomingHighway;
  VAR(unsigned char, TYPEDEF) thresholdUpperPrecedingHighway;
  VAR(unsigned char, TYPEDEF) thresholdUpperOncomingCity;
  VAR(unsigned char, TYPEDEF) thresholdUpperPrecedingCity;
  VAR(unsigned char, TYPEDEF) thresholdLowerOncoming;
  VAR(unsigned char, TYPEDEF) thresholdLowerPreceding;
  VAR(unsigned char, TYPEDEF) thresholdLowerOncomingHighway;
  VAR(unsigned char, TYPEDEF) thresholdLowerPrecedingHighway;
  VAR(unsigned char, TYPEDEF) thresholdLowerOncomingCity;
  VAR(unsigned char, TYPEDEF) thresholdLowerPrecedingCity;
} RTE_HLAF_ParameterVehicleProbability_t;
#endif
#ifndef RTE_TYPE_RTE_HLAF_ParameterKeepOnDelay_t
#define RTE_TYPE_RTE_HLAF_ParameterKeepOnDelay_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) distanceOncomingVehicle;
  VAR(unsigned short, TYPEDEF) distancePrecedingVehicleMin;
  VAR(unsigned short, TYPEDEF) distancePrecedingVehicleMax;
} RTE_HLAF_ParameterKeepOnDelay_t;
#endif
#ifndef RTE_TYPE_RTE_HLAF_ParameterTurnOnDelay_t
#define RTE_TYPE_RTE_HLAF_ParameterTurnOnDelay_t
typedef struct
{
  VAR(float, TYPEDEF) OncomingMin;
  VAR(float, TYPEDEF) OncomingMax;
  VAR(float, TYPEDEF) OncomingMinHighway;
  VAR(float, TYPEDEF) OncomingMaxHighway;
  VAR(float, TYPEDEF) PrecedingMin;
  VAR(float, TYPEDEF) PrecedingMinWiperOn;
  VAR(float, TYPEDEF) PrecedingMaxShort;
  VAR(float, TYPEDEF) PrecedingMaxLong;
  VAR(float, TYPEDEF) SlowOvertaking;
  VAR(float, TYPEDEF) Fog;
  VAR(float, TYPEDEF) Blockage;
} RTE_HLAF_ParameterTurnOnDelay_t;
#endif
#ifndef RTE_TYPE_RTE_HLAF_ParameterTurnOffDelay_t
#define RTE_TYPE_RTE_HLAF_ParameterTurnOffDelay_t
typedef struct
{
  VAR(float, TYPEDEF) oncomingVehicle;
  VAR(float, TYPEDEF) precedingVehicle;
} RTE_HLAF_ParameterTurnOffDelay_t;
#endif
#ifndef RTE_TYPE_RTE_HLAF_ParameterSpeed_t
#define RTE_TYPE_RTE_HLAF_ParameterSpeed_t
typedef struct
{
  VAR(float, TYPEDEF) DeactivateSpeed;
  VAR(float, TYPEDEF) DeactivateSpeedHigh;
  VAR(float, TYPEDEF) ActivateSpeed;
  VAR(float, TYPEDEF) ActivateSpeedHigh;
  VAR(float, TYPEDEF) AlwaysActiveSpeed;
  VAR(float, TYPEDEF) KeepOff_VeryLowSpeed;
  VAR(float, TYPEDEF) KeepOff_LowRadius;
  VAR(float, TYPEDEF) KeepOff_HighAcceleration;
  VAR(float, TYPEDEF) KeepOff_AccTime;
  VAR(float, TYPEDEF) KeepOff_Delay;
} RTE_HLAF_ParameterSpeed_t;
#endif
#ifndef RTE_TYPE_RTE_HLAF_ParameterMatrixBeam_t
#define RTE_TYPE_RTE_HLAF_ParameterMatrixBeam_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) MaxNumGlarefreeArea;
} RTE_HLAF_ParameterMatrixBeam_t;
#endif
#ifndef RTE_TYPE_DimmingDetection_t
#define RTE_TYPE_DimmingDetection_t
typedef VAR(unsigned char, TYPEDEF) DimmingDetection_t;
#endif
#ifndef RTE_TYPE_RTE_HLAF_ParameterDimming_t
#define RTE_TYPE_RTE_HLAF_ParameterDimming_t
typedef struct
{
  VAR(DimmingDetection_t, TYPEDEF) DimmingDetection;
  VAR(AreaRightBorderArray_array_t, TYPEDEF) AreaRightBorderArray;
  VAR(float, TYPEDEF) ReductThreshLevel1;
  VAR(float, TYPEDEF) ReductThreshLevel2;
  VAR(float, TYPEDEF) TurnOnDelay;
} RTE_HLAF_ParameterDimming_t;
#endif
#ifndef RTE_TYPE_CPAR_HLAF_Parameter_t
#define RTE_TYPE_CPAR_HLAF_Parameter_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(RTE_HLAF_ParameterAlgoCfg_t, TYPEDEF) AlgoCfg;
  VAR(RTE_HLAF_ParameterVehicleProbability_t, TYPEDEF) VehicleProbabilities;
  VAR(RTE_HLAF_ParameterKeepOnDelay_t, TYPEDEF) KeepOnDelay;
  VAR(RTE_HLAF_ParameterTurnOnDelay_t, TYPEDEF) TurnOnDelay;
  VAR(RTE_HLAF_ParameterTurnOffDelay_t, TYPEDEF) TurnOffDelay;
  VAR(RTE_HLAF_ParameterSpeed_t, TYPEDEF) Speed;
  VAR(RTE_HLAF_ParameterMatrixBeam_t, TYPEDEF) Matrix;
  VAR(RTE_HLAF_ParameterDimming_t, TYPEDEF) Dimming;
} CPAR_HLAF_Parameter_t;
#endif
#ifndef RTE_TYPE_RTE_Dyc_kappa_a2_y_scheduling_array_t
#define RTE_TYPE_RTE_Dyc_kappa_a2_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Dyc_kappa_a2_y_scheduling_array_t[12];
#endif
#ifndef RTE_TYPE_RTE_Dyc_kappa_a3_y_scheduling_array_t
#define RTE_TYPE_RTE_Dyc_kappa_a3_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Dyc_kappa_a3_y_scheduling_array_t[11];
#endif
#ifndef RTE_TYPE_RTE_Dyc_kappa_angle_t_y_sch_gen_neg_array_t
#define RTE_TYPE_RTE_Dyc_kappa_angle_t_y_sch_gen_neg_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Dyc_kappa_angle_t_y_sch_gen_neg_array_t[12];
#endif
#ifndef RTE_TYPE_RTE_Dyc_kappa_angle_t_y_schedul_gen_array_t
#define RTE_TYPE_RTE_Dyc_kappa_angle_t_y_schedul_gen_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Dyc_kappa_angle_t_y_schedul_gen_array_t[12];
#endif
#ifndef RTE_TYPE_RTE_Lat_ay_max_support_y_scheduling_array_t
#define RTE_TYPE_RTE_Lat_ay_max_support_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Lat_ay_max_support_y_scheduling_array_t[12];
#endif
#ifndef RTE_TYPE_RTE_Lat_ay_max_y_scheduling_array_t
#define RTE_TYPE_RTE_Lat_ay_max_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Lat_ay_max_y_scheduling_array_t[12];
#endif
#ifndef RTE_TYPE_RTE_Lat_kppa_min_omega_y_scheduling_array_t
#define RTE_TYPE_RTE_Lat_kppa_min_omega_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Lat_kppa_min_omega_y_scheduling_array_t[12];
#endif
#ifndef RTE_TYPE_RTE_Lat_max_kappa_ctrl_grad_y_sched_array_t
#define RTE_TYPE_RTE_Lat_max_kappa_ctrl_grad_y_sched_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Lat_max_kappa_ctrl_grad_y_sched_array_t[12];
#endif
#ifndef RTE_TYPE_RTE_Lat_max_torque_x_scheduling_array_t
#define RTE_TYPE_RTE_Lat_max_torque_x_scheduling_array_t
typedef VAR(short, TYPEDEF) RTE_Lat_max_torque_x_scheduling_array_t[12];
#endif
#ifndef RTE_TYPE_RTE_Lat_max_torque_y_scheduling_array_t
#define RTE_TYPE_RTE_Lat_max_torque_y_scheduling_array_t
typedef VAR(short, TYPEDEF) RTE_Lat_max_torque_y_scheduling_array_t[12];
#endif
#ifndef RTE_TYPE_RTE_Lat_min_damping_level_x_array_t
#define RTE_TYPE_RTE_Lat_min_damping_level_x_array_t
typedef VAR(short, TYPEDEF) RTE_Lat_min_damping_level_x_array_t[4];
#endif
#ifndef RTE_TYPE_RTE_Lat_min_damping_level_y_array_t
#define RTE_TYPE_RTE_Lat_min_damping_level_y_array_t
typedef VAR(short, TYPEDEF) RTE_Lat_min_damping_level_y_array_t[4];
#endif
#ifndef RTE_TYPE_RTE_Lat_rate_ys_kp_pt1_y_scheduling_array_t
#define RTE_TYPE_RTE_Lat_rate_ys_kp_pt1_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Lat_rate_ys_kp_pt1_y_scheduling_array_t[12];
#endif
#ifndef RTE_TYPE_RTE_Lat_rate_ys_kp_y_scheduling_array_t
#define RTE_TYPE_RTE_Lat_rate_ys_kp_y_scheduling_array_t
typedef VAR(short, TYPEDEF) RTE_Lat_rate_ys_kp_y_scheduling_array_t[12];
#endif
#ifndef RTE_TYPE_RTE_Lat_support_tor_x_scheduling_array_t
#define RTE_TYPE_RTE_Lat_support_tor_x_scheduling_array_t
typedef VAR(short, TYPEDEF) RTE_Lat_support_tor_x_scheduling_array_t[4];
#endif
#ifndef RTE_TYPE_RTE_Lat_support_tor_y_scheduling_array_t
#define RTE_TYPE_RTE_Lat_support_tor_y_scheduling_array_t
typedef VAR(short, TYPEDEF) RTE_Lat_support_tor_y_scheduling_array_t[4];
#endif
#ifndef RTE_TYPE_RTE_Lat_torque_grad_x_scheduling_array_t
#define RTE_TYPE_RTE_Lat_torque_grad_x_scheduling_array_t
typedef VAR(short, TYPEDEF) RTE_Lat_torque_grad_x_scheduling_array_t[12];
#endif
#ifndef RTE_TYPE_RTE_Lat_torque_grad_y_scheduling_array_t
#define RTE_TYPE_RTE_Lat_torque_grad_y_scheduling_array_t
typedef VAR(short, TYPEDEF) RTE_Lat_torque_grad_y_scheduling_array_t[12];
#endif
#ifndef RTE_TYPE_RTE_Obs_dos_ff_vel_y_scheduling_array_t
#define RTE_TYPE_RTE_Obs_dos_ff_vel_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Obs_dos_ff_vel_y_scheduling_array_t[13];
#endif
#ifndef RTE_TYPE_RTE_Obs_l_y_scheduling_array_t
#define RTE_TYPE_RTE_Obs_l_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Obs_l_y_scheduling_array_t[13];
#endif
#ifndef RTE_TYPE_RTE_Obs_one_j_y_scheduling_array_t
#define RTE_TYPE_RTE_Obs_one_j_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Obs_one_j_y_scheduling_array_t[13];
#endif
#ifndef RTE_TYPE_RTE_Sac_comp_fact_gain_y_scheduling_array_t
#define RTE_TYPE_RTE_Sac_comp_fact_gain_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Sac_comp_fact_gain_y_scheduling_array_t[10];
#endif
#ifndef RTE_TYPE_RTE_Sac_comp_factor_y_scheduling_array_t
#define RTE_TYPE_RTE_Sac_comp_factor_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Sac_comp_factor_y_scheduling_array_t[13];
#endif
#ifndef RTE_TYPE_RTE_Sac_damp_level_y_scheduling_array_t
#define RTE_TYPE_RTE_Sac_damp_level_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Sac_damp_level_y_scheduling_array_t[13];
#endif
#ifndef RTE_TYPE_RTE_Sac_delta_gradient_y_scheduling_array_t
#define RTE_TYPE_RTE_Sac_delta_gradient_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Sac_delta_gradient_y_scheduling_array_t[12];
#endif
#ifndef RTE_TYPE_RTE_Sac_feedfwd_factor_y_scheduling_array_t
#define RTE_TYPE_RTE_Sac_feedfwd_factor_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Sac_feedfwd_factor_y_scheduling_array_t[13];
#endif
#ifndef RTE_TYPE_RTE_Sac_kd_x_scheduling_array_t
#define RTE_TYPE_RTE_Sac_kd_x_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Sac_kd_x_scheduling_array_t[12];
#endif
#ifndef RTE_TYPE_RTE_Sac_kd_y_scheduling_array_t
#define RTE_TYPE_RTE_Sac_kd_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Sac_kd_y_scheduling_array_t[12];
#endif
#ifndef RTE_TYPE_RTE_Sac_ki_fb_y_scheduling_array_t
#define RTE_TYPE_RTE_Sac_ki_fb_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Sac_ki_fb_y_scheduling_array_t[11];
#endif
#ifndef RTE_TYPE_RTE_Sac_ki_y_scheduling_array_t
#define RTE_TYPE_RTE_Sac_ki_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Sac_ki_y_scheduling_array_t[13];
#endif
#ifndef RTE_TYPE_RTE_Sac_kp_x_scheduling_array_t
#define RTE_TYPE_RTE_Sac_kp_x_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Sac_kp_x_scheduling_array_t[12];
#endif
#ifndef RTE_TYPE_RTE_Sac_kp_y_scheduling_array_t
#define RTE_TYPE_RTE_Sac_kp_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Sac_kp_y_scheduling_array_t[12];
#endif
#ifndef RTE_TYPE_RTE_Sac_kx_y_scheduling_array_t
#define RTE_TYPE_RTE_Sac_kx_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Sac_kx_y_scheduling_array_t[13];
#endif
#ifndef RTE_TYPE_RTE_Sac_max_integ_trq_y_scheduling_array_t
#define RTE_TYPE_RTE_Sac_max_integ_trq_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Sac_max_integ_trq_y_scheduling_array_t[11];
#endif
#ifndef RTE_TYPE_RTE_Sac_mx_angle_speed_y_scheduling_array_t
#define RTE_TYPE_RTE_Sac_mx_angle_speed_y_scheduling_array_t
typedef VAR(short, TYPEDEF) RTE_Sac_mx_angle_speed_y_scheduling_array_t[11];
#endif
#ifndef RTE_TYPE_RTE_Sac_pid_kp_y_scheduling_array_t
#define RTE_TYPE_RTE_Sac_pid_kp_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Sac_pid_kp_y_scheduling_array_t[13];
#endif
#ifndef RTE_TYPE_RTE_Tdf_derating_slope_y_scheduling_array_t
#define RTE_TYPE_RTE_Tdf_derating_slope_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Tdf_derating_slope_y_scheduling_array_t[11];
#endif
#ifndef RTE_TYPE_RTE_Tdf_derating_thrs_y_scheduling_array_t
#define RTE_TYPE_RTE_Tdf_derating_thrs_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Tdf_derating_thrs_y_scheduling_array_t[11];
#endif
#ifndef RTE_TYPE_RTE_Tdf_load_comp_y_scheduling_array_t
#define RTE_TYPE_RTE_Tdf_load_comp_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Tdf_load_comp_y_scheduling_array_t[11];
#endif
#ifndef RTE_TYPE_RTE_Tdf_min_steer_trq_cls_y_schedul_array_t
#define RTE_TYPE_RTE_Tdf_min_steer_trq_cls_y_schedul_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Tdf_min_steer_trq_cls_y_schedul_array_t[11];
#endif
#ifndef RTE_TYPE_RTE_Tdf_steer_trq_cmp_ldp_y_schedul_array_t
#define RTE_TYPE_RTE_Tdf_steer_trq_cmp_ldp_y_schedul_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Tdf_steer_trq_cmp_ldp_y_schedul_array_t[11];
#endif
#ifndef RTE_TYPE_RTE_Tdf_steer_trq_cmp_slp_y_schedul_array_t
#define RTE_TYPE_RTE_Tdf_steer_trq_cmp_slp_y_schedul_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Tdf_steer_trq_cmp_slp_y_schedul_array_t[12];
#endif
#ifndef RTE_TYPE_RTE_Veh_steer_gear_ratio_x_tab_array_t
#define RTE_TYPE_RTE_Veh_steer_gear_ratio_x_tab_array_t
typedef VAR(short, TYPEDEF) RTE_Veh_steer_gear_ratio_x_tab_array_t[6];
#endif
#ifndef RTE_TYPE_RTE_Veh_steer_gear_ratio_y_tab_array_t
#define RTE_TYPE_RTE_Veh_steer_gear_ratio_y_tab_array_t
typedef VAR(short, TYPEDEF) RTE_Veh_steer_gear_ratio_y_tab_array_t[6];
#endif
#ifndef RTE_TYPE_RTE_Dyc_time_constant_y_scheduling_array_t
#define RTE_TYPE_RTE_Dyc_time_constant_y_scheduling_array_t
typedef VAR(unsigned short, TYPEDEF) RTE_Dyc_time_constant_y_scheduling_array_t[12];
#endif
#ifndef RTE_TYPE_CPAR_LCF_TunParamsDMC_t
#define RTE_TYPE_CPAR_LCF_TunParamsDMC_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(unsigned short, TYPEDEF) RTE_Dit_dirac_loop_count;
  VAR(unsigned short, TYPEDEF) RTE_Dit_signal_gen_frequency;
  VAR(unsigned short, TYPEDEF) RTE_Dit_torque_pulse_amplitude;
  VAR(unsigned short, TYPEDEF) RTE_Dmc_configuration_mode;
  VAR(unsigned short, TYPEDEF) RTE_Dmc_generic_00;
  VAR(unsigned short, TYPEDEF) RTE_Dmc_generic_01;
  VAR(unsigned short, TYPEDEF) RTE_Dmc_generic_02;
  VAR(unsigned short, TYPEDEF) RTE_Dmc_generic_03;
  VAR(unsigned short, TYPEDEF) RTE_Dmc_generic_04;
  VAR(unsigned short, TYPEDEF) RTE_Dmc_generic_05;
  VAR(unsigned short, TYPEDEF) RTE_Dmc_generic_06;
  VAR(unsigned short, TYPEDEF) RTE_Dmc_generic_07;
  VAR(unsigned short, TYPEDEF) RTE_Dmc_generic_08;
  VAR(unsigned short, TYPEDEF) RTE_Dmc_generic_09;
  VAR(short, TYPEDEF) RTE_Dmc_generic_10;
  VAR(short, TYPEDEF) RTE_Dmc_generic_11;
  VAR(short, TYPEDEF) RTE_Dmc_generic_12;
  VAR(short, TYPEDEF) RTE_Dmc_generic_13;
  VAR(short, TYPEDEF) RTE_Dmc_generic_14;
  VAR(short, TYPEDEF) RTE_Dmc_generic_15;
  VAR(short, TYPEDEF) RTE_Dmc_generic_16;
  VAR(short, TYPEDEF) RTE_Dmc_generic_17;
  VAR(short, TYPEDEF) RTE_Dmc_generic_18;
  VAR(short, TYPEDEF) RTE_Dmc_generic_19;
  VAR(unsigned short, TYPEDEF) RTE_Dyc_boost_signal_reduction;
  VAR(unsigned short, TYPEDEF) RTE_Dyc_compensation_mode;
  VAR(unsigned short, TYPEDEF) RTE_Dyc_kappa_a2_boost_factor;
  VAR(unsigned short, TYPEDEF) RTE_Dyc_kappa_a2_factor;
  VAR(RTE_Dyc_kappa_a2_y_scheduling_array_t, TYPEDEF) RTE_Dyc_kappa_a2_y_scheduling;
  VAR(unsigned short, TYPEDEF) RTE_Dyc_kappa_a3_factor;
  VAR(RTE_Dyc_kappa_a3_y_scheduling_array_t, TYPEDEF) RTE_Dyc_kappa_a3_y_scheduling;
  VAR(unsigned short, TYPEDEF) RTE_Dyc_kappa_angle_corr_factor;
  VAR(unsigned short, TYPEDEF) RTE_Dyc_kappa_angle_gen_cor_fct_neg;
  VAR(unsigned short, TYPEDEF) RTE_Dyc_kappa_angle_gen_corr_factor;
  VAR(unsigned short, TYPEDEF) RTE_Dyc_kappa_angle_lpf_corr_factor;
  VAR(RTE_Dyc_kappa_angle_t_y_sch_gen_neg_array_t, TYPEDEF) RTE_Dyc_kappa_angle_t_y_sch_gen_neg;
  VAR(RTE_Dyc_kappa_angle_t_y_schedul_gen_array_t, TYPEDEF) RTE_Dyc_kappa_angle_t_y_schedul_gen;
  VAR(unsigned short, TYPEDEF) RTE_Dyc_kappa_dot_boost_thrs;
  VAR(unsigned short, TYPEDEF) RTE_Dyc_kappa_dot_filter_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Eps_d;
  VAR(unsigned short, TYPEDEF) RTE_Eps_one_by_j_motor;
  VAR(unsigned short, TYPEDEF) RTE_Eps_torque_comp_factor;
  VAR(unsigned short, TYPEDEF) RTE_Hec_controller_mode;
  VAR(unsigned short, TYPEDEF) RTE_Lat_2nd_rate_ctrl_filter_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Lat_2nd_rate_ctrl_max_p_part;
  VAR(unsigned short, TYPEDEF) RTE_Lat_2nd_rate_ctrl_max_pt1_part;
  VAR(unsigned short, TYPEDEF) RTE_Lat_2nd_rate_limit_ctrl_kp;
  VAR(unsigned short, TYPEDEF) RTE_Lat_2nd_rate_limit_ctrl_pt1_kp;
  VAR(unsigned short, TYPEDEF) RTE_Lat_ay_control_kp;
  VAR(unsigned short, TYPEDEF) RTE_Lat_ay_control_pt1_kp;
  VAR(unsigned short, TYPEDEF) RTE_Lat_ay_controller_coeff;
  VAR(RTE_Lat_ay_max_support_y_scheduling_array_t, TYPEDEF) RTE_Lat_ay_max_support_y_scheduling;
  VAR(RTE_Lat_ay_max_y_scheduling_array_t, TYPEDEF) RTE_Lat_ay_max_y_scheduling;
  VAR(unsigned short, TYPEDEF) RTE_Lat_ay_requested_filter_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Lat_damp_level_grad_off;
  VAR(unsigned short, TYPEDEF) RTE_Lat_damp_level_grad_on;
  VAR(unsigned short, TYPEDEF) RTE_Lat_delta_f_dot_filter_coeff;
  VAR(short, TYPEDEF) RTE_Lat_delta_f_offset;
  VAR(unsigned short, TYPEDEF) RTE_Lat_delta_off_flt_initial_loops;
  VAR(unsigned short, TYPEDEF) RTE_Lat_delta_off_flt_initial_omega;
  VAR(unsigned short, TYPEDEF) RTE_Lat_delta_offset_filter_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Lat_delta_offset_filter_omega;
  VAR(unsigned short, TYPEDEF) RTE_Lat_derating_factor_filt_coeff;
  VAR(short, TYPEDEF) RTE_Lat_direct_feedthr_hf_part_trq;
  VAR(unsigned short, TYPEDEF) RTE_Lat_direct_feedthr_kappa_ctrl;
  VAR(unsigned short, TYPEDEF) RTE_Lat_direct_feedthrough_kappa;
  VAR(short, TYPEDEF) RTE_Lat_direct_feedthrough_trq;
  VAR(unsigned short, TYPEDEF) RTE_Lat_direct_feedthrough_trq_ldp;
  VAR(unsigned short, TYPEDEF) RTE_Lat_dmc_status_override_cycles;
  VAR(short, TYPEDEF) RTE_Lat_eps_trq_can_scaling_factor;
  VAR(unsigned short, TYPEDEF) RTE_Lat_feedthr_increment_per_loop;
  VAR(short, TYPEDEF) RTE_Lat_ffwd_rate_control_min_error;
  VAR(short, TYPEDEF) RTE_Lat_ffwd_rate_control_pt1_kp;
  VAR(short, TYPEDEF) RTE_Lat_ffwd_rate_limit_control_kp;
  VAR(short, TYPEDEF) RTE_Lat_ffwd_rate_pt1_filter_coeff;
  VAR(short, TYPEDEF) RTE_Lat_ffwd_rate_pt1_max_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Lat_kappa_ctrl_discharge_grad;
  VAR(unsigned short, TYPEDEF) RTE_Lat_kappa_ctrl_discharge_mn_err;
  VAR(unsigned short, TYPEDEF) RTE_Lat_kappa_ctrl_discharge_slope;
  VAR(unsigned short, TYPEDEF) RTE_Lat_kappa_ctrl_lat_error_slope;
  VAR(unsigned short, TYPEDEF) RTE_Lat_kappa_ctrl_max_lateral_err;
  VAR(unsigned short, TYPEDEF) RTE_Lat_kappa_discharge_gradient;
  VAR(unsigned short, TYPEDEF) RTE_Lat_kappa_discharge_min_error;
  VAR(unsigned short, TYPEDEF) RTE_Lat_kappa_discharge_slope;
  VAR(unsigned short, TYPEDEF) RTE_Lat_kappa_filter_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Lat_kappa_lateral_error_slope;
  VAR(unsigned short, TYPEDEF) RTE_Lat_kappa_linz_error_slope;
  VAR(unsigned short, TYPEDEF) RTE_Lat_kappa_linz_filt_max_error;
  VAR(unsigned short, TYPEDEF) RTE_Lat_kappa_linz_filter_max_omega;
  VAR(unsigned short, TYPEDEF) RTE_Lat_kappa_linz_filter_min_omega;
  VAR(unsigned short, TYPEDEF) RTE_Lat_kappa_linz_max_omega_memshp;
  VAR(unsigned short, TYPEDEF) RTE_Lat_kappa_linz_weighting_factor;
  VAR(unsigned short, TYPEDEF) RTE_Lat_kappa_max_lateral_error;
  VAR(RTE_Lat_kppa_min_omega_y_scheduling_array_t, TYPEDEF) RTE_Lat_kppa_min_omega_y_scheduling;
  VAR(unsigned short, TYPEDEF) RTE_Lat_ldp_startup_time;
  VAR(unsigned short, TYPEDEF) RTE_Lat_linz_error_slope;
  VAR(unsigned short, TYPEDEF) RTE_Lat_linz_filter_max_error;
  VAR(unsigned short, TYPEDEF) RTE_Lat_linz_filter_max_omega;
  VAR(unsigned short, TYPEDEF) RTE_Lat_linz_filter_min_omega;
  VAR(short, TYPEDEF) RTE_Lat_max_ay;
  VAR(unsigned short, TYPEDEF) RTE_Lat_max_ay_extrapolation_gain;
  VAR(unsigned short, TYPEDEF) RTE_Lat_max_ay_hand_off;
  VAR(unsigned short, TYPEDEF) RTE_Lat_max_ay_hand_off_kneepoint;
  VAR(RTE_Lat_max_kappa_ctrl_grad_y_sched_array_t, TYPEDEF) RTE_Lat_max_kappa_ctrl_grad_y_sched;
  VAR(unsigned short, TYPEDEF) RTE_Lat_max_kappa_ctrl_gradient;
  VAR(unsigned short, TYPEDEF) RTE_Lat_max_kappa_gradient;
  VAR(short, TYPEDEF) RTE_Lat_max_output_torque;
  VAR(unsigned short, TYPEDEF) RTE_Lat_max_torque_corr_factor;
  VAR(unsigned short, TYPEDEF) RTE_Lat_max_torque_select;
  VAR(RTE_Lat_max_torque_x_scheduling_array_t, TYPEDEF) RTE_Lat_max_torque_x_scheduling;
  VAR(RTE_Lat_max_torque_y_scheduling_array_t, TYPEDEF) RTE_Lat_max_torque_y_scheduling;
  VAR(RTE_Lat_min_damping_level_x_array_t, TYPEDEF) RTE_Lat_min_damping_level_x;
  VAR(RTE_Lat_min_damping_level_y_array_t, TYPEDEF) RTE_Lat_min_damping_level_y;
  VAR(short, TYPEDEF) RTE_Lat_min_offset_state;
  VAR(unsigned short, TYPEDEF) RTE_Lat_oc_fast_ki;
  VAR(unsigned short, TYPEDEF) RTE_Lat_oc_kappa_cmd_filter_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Lat_oc_kappa_max_driver_torque;
  VAR(unsigned short, TYPEDEF) RTE_Lat_oc_kappa_max_heading_error;
  VAR(unsigned short, TYPEDEF) RTE_Lat_oc_kappa_min_head_err_qual;
  VAR(unsigned short, TYPEDEF) RTE_Lat_oc_kappa_min_latency;
  VAR(short, TYPEDEF) RTE_Lat_oc_ki;
  VAR(unsigned short, TYPEDEF) RTE_Lat_oc_max_delta_f_dot;
  VAR(unsigned short, TYPEDEF) RTE_Lat_oc_max_delta_offset;
  VAR(unsigned short, TYPEDEF) RTE_Lat_oc_max_delta_offset_kappa;
  VAR(unsigned short, TYPEDEF) RTE_Lat_oc_max_driver_torque;
  VAR(unsigned short, TYPEDEF) RTE_Lat_oc_max_kappa;
  VAR(unsigned short, TYPEDEF) RTE_Lat_oc_max_kappa_dys;
  VAR(unsigned short, TYPEDEF) RTE_Lat_oc_max_lateral_accel;
  VAR(unsigned short, TYPEDEF) RTE_Lat_oc_max_lateral_error;
  VAR(unsigned short, TYPEDEF) RTE_Lat_oc_max_velocity;
  VAR(short, TYPEDEF) RTE_Lat_oc_min_kappa_quality;
  VAR(unsigned short, TYPEDEF) RTE_Lat_oc_min_velocity;
  VAR(unsigned short, TYPEDEF) RTE_Lat_oc_min_velocity_dys;
  VAR(unsigned short, TYPEDEF) RTE_Lat_oc_minimum_latency;
  VAR(unsigned short, TYPEDEF) RTE_Lat_oc_minimum_latency_shrt;
  VAR(short, TYPEDEF) RTE_Lat_offset_inc_per_loop_slow;
  VAR(short, TYPEDEF) RTE_Lat_offset_inc_per_loop_turn_on;
  VAR(short, TYPEDEF) RTE_Lat_offset_increment_per_loop;
  VAR(short, TYPEDEF) RTE_Lat_offset_max;
  VAR(short, TYPEDEF) RTE_Lat_offset_max_clm_trq;
  VAR(short, TYPEDEF) RTE_Lat_offset_max_steer_angle;
  VAR(short, TYPEDEF) RTE_Lat_out_direct_feedthrough_trq;
  VAR(unsigned short, TYPEDEF) RTE_Lat_out_torque_gradient;
  VAR(unsigned short, TYPEDEF) RTE_Lat_rate_control_d_filter_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Lat_rate_control_max_p_part;
  VAR(unsigned short, TYPEDEF) RTE_Lat_rate_control_max_pt1_part;
  VAR(unsigned short, TYPEDEF) RTE_Lat_rate_ctrl_pt1_filter_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Lat_rate_limit_control_kd;
  VAR(unsigned short, TYPEDEF) RTE_Lat_rate_limit_control_kp;
  VAR(short, TYPEDEF) RTE_Lat_rate_limit_control_pt1_kp;
  VAR(unsigned short, TYPEDEF) RTE_Lat_rate_pt1_filter_max_coeff;
  VAR(RTE_Lat_rate_ys_kp_pt1_y_scheduling_array_t, TYPEDEF) RTE_Lat_rate_ys_kp_pt1_y_scheduling;
  VAR(RTE_Lat_rate_ys_kp_y_scheduling_array_t, TYPEDEF) RTE_Lat_rate_ys_kp_y_scheduling;
  VAR(unsigned short, TYPEDEF) RTE_Lat_saturation_class_thr;
  VAR(unsigned short, TYPEDEF) RTE_Lat_select_input_source;
  VAR(unsigned short, TYPEDEF) RTE_Lat_support_arw_factor_1;
  VAR(unsigned short, TYPEDEF) RTE_Lat_support_arw_factor_2;
  VAR(unsigned short, TYPEDEF) RTE_Lat_support_arw_factor_3;
  VAR(unsigned short, TYPEDEF) RTE_Lat_support_discharge_omega;
  VAR(unsigned short, TYPEDEF) RTE_Lat_support_feedback_factor_1;
  VAR(unsigned short, TYPEDEF) RTE_Lat_support_feedback_factor_2;
  VAR(unsigned short, TYPEDEF) RTE_Lat_support_feedback_factor_hf;
  VAR(unsigned short, TYPEDEF) RTE_Lat_support_min_driver_torque;
  VAR(unsigned short, TYPEDEF) RTE_Lat_support_omega_1;
  VAR(unsigned short, TYPEDEF) RTE_Lat_support_omega_2;
  VAR(unsigned short, TYPEDEF) RTE_Lat_support_omega_hf;
  VAR(RTE_Lat_support_tor_x_scheduling_array_t, TYPEDEF) RTE_Lat_support_tor_x_scheduling;
  VAR(RTE_Lat_support_tor_y_scheduling_array_t, TYPEDEF) RTE_Lat_support_tor_y_scheduling;
  VAR(unsigned short, TYPEDEF) RTE_Lat_support_torque_threshold;
  VAR(unsigned short, TYPEDEF) RTE_Lat_switch_falling_rate;
  VAR(unsigned short, TYPEDEF) RTE_Lat_switch_falling_rate_2;
  VAR(unsigned short, TYPEDEF) RTE_Lat_switch_off_time;
  VAR(unsigned short, TYPEDEF) RTE_Lat_switch_rising_rate;
  VAR(unsigned short, TYPEDEF) RTE_Lat_switch_rising_rate_2;
  VAR(unsigned short, TYPEDEF) RTE_Lat_switch_rising_rate_initial;
  VAR(RTE_Lat_torque_grad_x_scheduling_array_t, TYPEDEF) RTE_Lat_torque_grad_x_scheduling;
  VAR(RTE_Lat_torque_grad_y_scheduling_array_t, TYPEDEF) RTE_Lat_torque_grad_y_scheduling;
  VAR(unsigned short, TYPEDEF) RTE_Lat_torque_gradient;
  VAR(unsigned short, TYPEDEF) RTE_Lat_torque_ramp_down_gradient;
  VAR(unsigned short, TYPEDEF) RTE_Lat_trq_grad_incr_factor_ldp;
  VAR(unsigned short, TYPEDEF) RTE_Lat_trq_grad_pos_req_factor_ldp;
  VAR(unsigned short, TYPEDEF) RTE_Lat_trq_saturation_end;
  VAR(unsigned short, TYPEDEF) RTE_Lat_trq_saturation_min;
  VAR(unsigned short, TYPEDEF) RTE_Lat_trq_saturation_start;
  VAR(unsigned short, TYPEDEF) RTE_Lat_trq_supporting_filt_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Lat_yaw_rate_dot_filter_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Lco_error_filter_falling_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Lco_error_filter_rising_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Lco_filter_falling_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Lco_filter_rising_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Lco_min_control_error;
  VAR(unsigned short, TYPEDEF) RTE_Lco_min_control_error_slope;
  VAR(unsigned short, TYPEDEF) RTE_Lco_min_curvature_command;
  VAR(unsigned short, TYPEDEF) RTE_Lco_min_curvature_slope;
  VAR(unsigned short, TYPEDEF) RTE_Lco_min_err_preload_enh_factor;
  VAR(unsigned short, TYPEDEF) RTE_Lco_min_lateral_error;
  VAR(unsigned short, TYPEDEF) RTE_Lco_min_lateral_error_slope;
  VAR(unsigned short, TYPEDEF) RTE_Lco_min_load_comp_factor;
  VAR(unsigned short, TYPEDEF) RTE_Lco_preload_enhancement_factor;
  VAR(unsigned short, TYPEDEF) RTE_Ldc_comp_kd_factor;
  VAR(unsigned short, TYPEDEF) RTE_Ldc_comp_kp_factor;
  VAR(unsigned short, TYPEDEF) RTE_Ldc_controller_mode;
  VAR(unsigned short, TYPEDEF) RTE_Ldc_ki;
  VAR(unsigned short, TYPEDEF) RTE_Ldc_ki_fb;
  VAR(unsigned short, TYPEDEF) RTE_Ldc_kp_factor;
  VAR(unsigned short, TYPEDEF) RTE_Lka_max_align_torque;
  VAR(short, TYPEDEF) RTE_Obs_damping_kd_transf_factor;
  VAR(unsigned short, TYPEDEF) RTE_Obs_dos_d;
  VAR(unsigned short, TYPEDEF) RTE_Obs_dos_ff_gain;
  VAR(RTE_Obs_dos_ff_vel_y_scheduling_array_t, TYPEDEF) RTE_Obs_dos_ff_vel_y_scheduling;
  VAR(unsigned short, TYPEDEF) RTE_Obs_dos_l;
  VAR(unsigned short, TYPEDEF) RTE_Obs_dos_one_by_j_motor;
  VAR(unsigned short, TYPEDEF) RTE_Obs_eps_d;
  VAR(unsigned short, TYPEDEF) RTE_Obs_eps_one_by_j_motor;
  VAR(short, TYPEDEF) RTE_Obs_ffwd_filter_omega;
  VAR(unsigned short, TYPEDEF) RTE_Obs_ffwd_filter_tau;
  VAR(unsigned short, TYPEDEF) RTE_Sac_parity_time_constant;
  VAR(unsigned short, TYPEDEF) RTE_Obs_filter_omega;
  VAR(short, TYPEDEF) RTE_Obs_filter_tau;
  VAR(short, TYPEDEF) RTE_Obs_force_torque_transf_factor;
  VAR(unsigned short, TYPEDEF) RTE_Obs_l;
  VAR(RTE_Obs_l_y_scheduling_array_t, TYPEDEF) RTE_Obs_l_y_scheduling;
  VAR(unsigned short, TYPEDEF) RTE_Obs_observer_mode;
  VAR(RTE_Obs_one_j_y_scheduling_array_t, TYPEDEF) RTE_Obs_one_j_y_scheduling;
  VAR(unsigned short, TYPEDEF) RTE_Odm_odometry_mode;
  VAR(short, TYPEDEF) RTE_Sac_accepted_control_error;
  VAR(unsigned short, TYPEDEF) RTE_Sac_accuracy_feedback_transf;
  VAR(unsigned short, TYPEDEF) RTE_Sac_angle_fading_mode;
  VAR(short, TYPEDEF) RTE_Sac_backlash_torque;
  VAR(unsigned short, TYPEDEF) RTE_Sac_cmd_boost_request_factor;
  VAR(short, TYPEDEF) RTE_Sac_cmd_enhancement_gain;
  VAR(unsigned short, TYPEDEF) RTE_Sac_cmd_feedforward_gain;
  VAR(unsigned short, TYPEDEF) RTE_Sac_cmd_offset_gain;
  VAR(RTE_Sac_comp_fact_gain_y_scheduling_array_t, TYPEDEF) RTE_Sac_comp_fact_gain_y_scheduling;
  VAR(RTE_Sac_comp_factor_y_scheduling_array_t, TYPEDEF) RTE_Sac_comp_factor_y_scheduling;
  VAR(short, TYPEDEF) RTE_Sac_compensation_factor;
  VAR(short, TYPEDEF) RTE_Sac_compensation_filter_select;
  VAR(unsigned short, TYPEDEF) RTE_Sac_controller_mode_1;
  VAR(unsigned short, TYPEDEF) RTE_Sac_controller_mode_2;
  VAR(unsigned short, TYPEDEF) RTE_Sac_ctrl_error_red_filter_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Sac_ctrl_error_red_hf_scale;
  VAR(unsigned short, TYPEDEF) RTE_Sac_damp_act_fading_gain;
  VAR(unsigned short, TYPEDEF) RTE_Sac_damp_act_min_control_error;
  VAR(unsigned short, TYPEDEF) RTE_Sac_damp_ffwd_filter_coeff_1;
  VAR(unsigned short, TYPEDEF) RTE_Sac_damp_ffwd_filter_coeff_2;
  VAR(RTE_Sac_damp_level_y_scheduling_array_t, TYPEDEF) RTE_Sac_damp_level_y_scheduling;
  VAR(unsigned short, TYPEDEF) RTE_Sac_damping_kd_transf_factor;
  VAR(short, TYPEDEF) RTE_Sac_damping_lpf_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Sac_damping_reduction_gate_time;
  VAR(unsigned short, TYPEDEF) RTE_Sac_dc_gain_curvature_slope;
  VAR(unsigned short, TYPEDEF) RTE_Sac_dc_gain_factor_high_curv;
  VAR(unsigned short, TYPEDEF) RTE_Sac_dc_gain_min_curvature;
  VAR(short, TYPEDEF) RTE_Sac_delta_f_cmd_filter_omega;
  VAR(unsigned short, TYPEDEF) RTE_Sac_delta_f_cmd_gradient;
  VAR(short, TYPEDEF) RTE_Sac_delta_f_dot2_filter_coeff;
  VAR(RTE_Sac_delta_gradient_y_scheduling_array_t, TYPEDEF) RTE_Sac_delta_gradient_y_scheduling;
  VAR(unsigned short, TYPEDEF) RTE_Sac_delta_psi_dot_factor;
  VAR(short, TYPEDEF) RTE_Sac_delta_psi_dot_maf_length;
  VAR(short, TYPEDEF) RTE_Sac_delta_psi_pt1_filter_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Sac_differential_2_part;
  VAR(unsigned short, TYPEDEF) RTE_Sac_differential_part;
  VAR(unsigned short, TYPEDEF) RTE_Sac_eps_damping_level;
  VAR(unsigned short, TYPEDEF) RTE_Sac_eps_damping_level_low;
  VAR(unsigned short, TYPEDEF) RTE_Sac_error_filter_omega;
  VAR(unsigned short, TYPEDEF) RTE_Sac_error_filter_omega_2;
  VAR(short, TYPEDEF) RTE_Sac_fad_flt_fallng_lw_dyn_coeff;
  VAR(short, TYPEDEF) RTE_Sac_fad_flt_rising_lw_dyn_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Sac_feedforward_filter_coeff;
  VAR(RTE_Sac_feedfwd_factor_y_scheduling_array_t, TYPEDEF) RTE_Sac_feedfwd_factor_y_scheduling;
  VAR(unsigned short, TYPEDEF) RTE_Sac_feedthr_increment_per_loop;
  VAR(short, TYPEDEF) RTE_Sac_ffwd_diff_filter_omega;
  VAR(unsigned short, TYPEDEF) RTE_Sac_ffwd_scale_pos_angle_cmd;
  VAR(unsigned short, TYPEDEF) RTE_Sac_ffwd_scaling_end;
  VAR(unsigned short, TYPEDEF) RTE_Sac_ffwd_scaling_start;
  VAR(short, TYPEDEF) RTE_Sac_filter_omega;
  VAR(short, TYPEDEF) RTE_Sac_filter_tau;
  VAR(unsigned short, TYPEDEF) RTE_Sac_frc_comp_b1_factor;
  VAR(unsigned short, TYPEDEF) RTE_Sac_frc_comp_omega;
  VAR(unsigned short, TYPEDEF) RTE_Sac_frc_static_friction_torque;
  VAR(unsigned short, TYPEDEF) RTE_Sac_frc_torque_corr_factor;
  VAR(unsigned short, TYPEDEF) RTE_Sac_friction_comp_activ_source;
  VAR(unsigned short, TYPEDEF) RTE_Sac_friction_comp_error_gain;
  VAR(unsigned short, TYPEDEF) RTE_Sac_friction_comp_linear_slope;
  VAR(unsigned short, TYPEDEF) RTE_Sac_friction_comp_torque;
  VAR(short, TYPEDEF) RTE_Sac_friction_comp_torque_cw;
  VAR(unsigned short, TYPEDEF) RTE_Sac_friction_control_error_gain;
  VAR(unsigned short, TYPEDEF) RTE_Sac_kd;
  VAR(unsigned short, TYPEDEF) RTE_Sac_kd_fading_factor;
  VAR(short, TYPEDEF) RTE_Sac_kd_max_fading_factor;
  VAR(short, TYPEDEF) RTE_Sac_kd_obs;
  VAR(RTE_Sac_kd_x_scheduling_array_t, TYPEDEF) RTE_Sac_kd_x_scheduling;
  VAR(RTE_Sac_kd_y_scheduling_array_t, TYPEDEF) RTE_Sac_kd_y_scheduling;
  VAR(unsigned short, TYPEDEF) RTE_Sac_ki;
  VAR(unsigned short, TYPEDEF) RTE_Sac_ki_fb;
  VAR(RTE_Sac_ki_fb_y_scheduling_array_t, TYPEDEF) RTE_Sac_ki_fb_y_scheduling;
  VAR(RTE_Sac_ki_y_scheduling_array_t, TYPEDEF) RTE_Sac_ki_y_scheduling;
  VAR(unsigned short, TYPEDEF) RTE_Sac_kmc_loop_gain;
  VAR(unsigned short, TYPEDEF) RTE_Sac_kp;
  VAR(unsigned short, TYPEDEF) RTE_Sac_kp_dc_gain_factor;
  VAR(unsigned short, TYPEDEF) RTE_Sac_kp_derating_slope;
  VAR(short, TYPEDEF) RTE_Sac_kp_fading_flt_falling_coeff;
  VAR(short, TYPEDEF) RTE_Sac_kp_fading_flt_rising_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Sac_kp_ldp;
  VAR(unsigned short, TYPEDEF) RTE_Sac_kp_scale_pos_angle_command;
  VAR(unsigned short, TYPEDEF) RTE_Sac_kp_scale_pos_control_error;
  VAR(unsigned short, TYPEDEF) RTE_Sac_kp_scaling_end;
  VAR(unsigned short, TYPEDEF) RTE_Sac_kp_scaling_start;
  VAR(RTE_Sac_kp_x_scheduling_array_t, TYPEDEF) RTE_Sac_kp_x_scheduling;
  VAR(RTE_Sac_kp_y_scheduling_array_t, TYPEDEF) RTE_Sac_kp_y_scheduling;
  VAR(unsigned short, TYPEDEF) RTE_Sac_kx;
  VAR(RTE_Sac_kx_y_scheduling_array_t, TYPEDEF) RTE_Sac_kx_y_scheduling;
  VAR(unsigned short, TYPEDEF) RTE_Sac_limiter_control_ki;
  VAR(unsigned short, TYPEDEF) RTE_Sac_lin_fad_enable_multi_ramp;
  VAR(unsigned short, TYPEDEF) RTE_Sac_lin_fading_activation_thrs;
  VAR(unsigned short, TYPEDEF) RTE_Sac_lin_fading_coefficient;
  VAR(unsigned short, TYPEDEF) RTE_Sac_lin_fading_gate_time;
  VAR(unsigned short, TYPEDEF) RTE_Sac_lin_fading_max_offset;
  VAR(unsigned short, TYPEDEF) RTE_Sac_lin_fading_min_offset;
  VAR(short, TYPEDEF) RTE_Sac_load_compensation_factor;
  VAR(unsigned short, TYPEDEF) RTE_Sac_max_angle_velocity;
  VAR(unsigned short, TYPEDEF) RTE_Sac_max_integ_torque_corr_fact;
  VAR(RTE_Sac_max_integ_trq_y_scheduling_array_t, TYPEDEF) RTE_Sac_max_integ_trq_y_scheduling;
  VAR(unsigned short, TYPEDEF) RTE_Sac_min_command_gradient;
  VAR(unsigned short, TYPEDEF) RTE_Sac_min_control_error;
  VAR(short, TYPEDEF) RTE_Sac_min_kp;
  VAR(unsigned short, TYPEDEF) RTE_Sac_min_proportional_part;
  VAR(unsigned short, TYPEDEF) RTE_Sac_min_proportional_part_scale;
  VAR(RTE_Sac_mx_angle_speed_y_scheduling_array_t, TYPEDEF) RTE_Sac_mx_angle_speed_y_scheduling;
  VAR(short, TYPEDEF) RTE_Sac_notch_cf;
  VAR(short, TYPEDEF) RTE_Sac_notch_d;
  VAR(unsigned short, TYPEDEF) RTE_Sac_notch_high_pass_omega_1;
  VAR(short, TYPEDEF) RTE_Sac_notch_high_pass_omega_2;
  VAR(unsigned short, TYPEDEF) RTE_Sac_notch_l1;
  VAR(unsigned short, TYPEDEF) RTE_Sac_notch_l2;
  VAR(unsigned short, TYPEDEF) RTE_Sac_notch_l3;
  VAR(unsigned short, TYPEDEF) RTE_Sac_notch_one_by_j_motor;
  VAR(unsigned short, TYPEDEF) RTE_Sac_obs_scaling_end;
  VAR(unsigned short, TYPEDEF) RTE_Sac_obs_scaling_start;
  VAR(unsigned short, TYPEDEF) RTE_Sac_omega_arw;
  VAR(short, TYPEDEF) RTE_Sac_one_by_ts;
  VAR(unsigned short, TYPEDEF) RTE_Sac_osc_damp_ctrl_error_slope;
  VAR(unsigned short, TYPEDEF) RTE_Sac_osc_damp_diff_part_slope;
  VAR(short, TYPEDEF) RTE_Sac_osc_damp_flt_falling_coeff;
  VAR(short, TYPEDEF) RTE_Sac_osc_damp_flt_rising_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Sac_osc_damp_min_control_error;
  VAR(short, TYPEDEF) RTE_Sac_p_part_filter_coeff;
  VAR(short, TYPEDEF) RTE_Sac_parity_omega;
  VAR(unsigned short, TYPEDEF) RTE_Sac_pid_kd;
  VAR(short, TYPEDEF) RTE_Sac_pid_kp;
  VAR(RTE_Sac_pid_kp_y_scheduling_array_t, TYPEDEF) RTE_Sac_pid_kp_y_scheduling;
  VAR(unsigned short, TYPEDEF) RTE_Sac_prop_part_limit_scale;
  VAR(unsigned short, TYPEDEF) RTE_Sac_pt1_filter_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Sac_pt1_filter_coeff_2;
  VAR(unsigned short, TYPEDEF) RTE_Sac_pt1_filter_coeff_3;
  VAR(unsigned short, TYPEDEF) RTE_Sac_pt1_filter_coeff_4;
  VAR(unsigned short, TYPEDEF) RTE_Sac_pt1_filter_coeff_5;
  VAR(unsigned short, TYPEDEF) RTE_Sac_pt1_filter_coeff_6;
  VAR(unsigned short, TYPEDEF) RTE_Sac_pt1_filter_coeff_7;
  VAR(unsigned short, TYPEDEF) RTE_Sac_pt1_max_filter_coeff_2;
  VAR(unsigned short, TYPEDEF) RTE_Sac_reduced_kmc_loop_gain;
  VAR(unsigned short, TYPEDEF) RTE_Sac_stiffness_filter_coeff;
  VAR(short, TYPEDEF) RTE_Sac_torque_scaling_factor;
  VAR(unsigned short, TYPEDEF) RTE_Sac_ts;
  VAR(unsigned short, TYPEDEF) RTE_Sat_dynamic_enhancement_factor;
  VAR(unsigned short, TYPEDEF) RTE_Sat_max_delta_f_cmd;
  VAR(unsigned short, TYPEDEF) RTE_Sat_thrs_control_kp;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_comp_factor_filter_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_control_err_derating_slope;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_derating_end;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_derating_mode;
  VAR(RTE_Tdf_derating_slope_y_scheduling_array_t, TYPEDEF) RTE_Tdf_derating_slope_y_scheduling;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_derating_start;
  VAR(RTE_Tdf_derating_thrs_y_scheduling_array_t, TYPEDEF) RTE_Tdf_derating_thrs_y_scheduling;
  VAR(short, TYPEDEF) RTE_Tdf_lat_accel_sign_slope;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_load_comp_end;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_load_comp_start;
  VAR(RTE_Tdf_load_comp_y_scheduling_array_t, TYPEDEF) RTE_Tdf_load_comp_y_scheduling;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_min_compensation_factor;
  VAR(short, TYPEDEF) RTE_Tdf_min_steer_torque_class;
  VAR(RTE_Tdf_min_steer_trq_cls_y_schedul_array_t, TYPEDEF) RTE_Tdf_min_steer_trq_cls_y_schedul;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_steer_torque_comp_slope;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_steer_torque_comp_thrs_ldp;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_steer_torque_sign_slope;
  VAR(RTE_Tdf_steer_trq_cmp_ldp_y_schedul_array_t, TYPEDEF) RTE_Tdf_steer_trq_cmp_ldp_y_schedul;
  VAR(RTE_Tdf_steer_trq_cmp_slp_y_schedul_array_t, TYPEDEF) RTE_Tdf_steer_trq_cmp_slp_y_schedul;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_steer_trq_comp_reduced_thrs;
  VAR(short, TYPEDEF) RTE_Tdf_toque_derating_slope;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_torque_der_filt_coeff_hf;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_torque_derating_filt_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_torque_derating_threshold;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_torque_request_sign_slope;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_torque_supporting_slope;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_torque_supporting_threshold;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_trq_der_thrs_dp_hi_sens;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_trq_derating_max_init_trq;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_trq_derating_min_init_trq;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_trq_derating_slope_hf_path;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_trq_derating_slope_hi_sens;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_trq_derating_threshold_dp;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_trq_derating_thrs_hi_sens;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_trq_filter_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_trq_scaling_end;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_trq_scaling_start;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_vel_derating_filt_coeff;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_velocity_derating_slope;
  VAR(unsigned short, TYPEDEF) RTE_Tdf_velocity_derating_threshold;
  VAR(unsigned short, TYPEDEF) RTE_Trj_generation_mode;
  VAR(unsigned short, TYPEDEF) RTE_Trj_max_accel;
  VAR(short, TYPEDEF) RTE_Trj_max_heading_angle;
  VAR(short, TYPEDEF) RTE_Trj_step_command;
  VAR(unsigned short, TYPEDEF) RTE_Veh_column_stiffness;
  VAR(unsigned char, TYPEDEF) RTE_Veh_steer_angle_rate_source;
  VAR(unsigned char, TYPEDEF) RTE_Veh_steer_angle_source;
  VAR(RTE_Veh_steer_gear_ratio_x_tab_array_t, TYPEDEF) RTE_Veh_steer_gear_ratio_x_tab;
  VAR(RTE_Veh_steer_gear_ratio_y_tab_array_t, TYPEDEF) RTE_Veh_steer_gear_ratio_y_tab;
  VAR(unsigned short, TYPEDEF) RTE_Lat_lka_startup_time;
  VAR(unsigned short, TYPEDEF) RTE_Sac_delta_f_cmd_initial_grad;
  VAR(unsigned short, TYPEDEF) RTE_Sac_parity_time_constant_ldp1;
  VAR(unsigned short, TYPEDEF) RTE_Dyc_state_filter_time_constant;
  VAR(RTE_Dyc_time_constant_y_scheduling_array_t, TYPEDEF) RTE_Dyc_time_constant_y_scheduling;
  VAR(short, TYPEDEF) RTE_Obs_delta_dot_filter_time_const;
  VAR(unsigned short, TYPEDEF) RTE_Sac_parity_time_constant_ldp;
  VAR(unsigned short, TYPEDEF) RTE_Tge_state_filter_time_constant;
} CPAR_LCF_TunParamsDMC_t;
#endif
#ifndef RTE_TYPE_Y_TPLTJC_WghtTgtDistYCharact_nu_array_t
#define RTE_TYPE_Y_TPLTJC_WghtTgtDistYCharact_nu_array_t
typedef VAR(float, TYPEDEF) Y_TPLTJC_WghtTgtDistYCharact_nu_array_t[2];
#endif
#ifndef RTE_TYPE_X_TPLTJC_WghtTgtDistYCustFct_nu_array_t
#define RTE_TYPE_X_TPLTJC_WghtTgtDistYCustFct_nu_array_t
typedef VAR(float, TYPEDEF) X_TPLTJC_WghtTgtDistYCustFct_nu_array_t[2];
#endif
#ifndef RTE_TYPE_Y_TPLTJC_WghtTgtTimeCharact_nu_array_t
#define RTE_TYPE_Y_TPLTJC_WghtTgtTimeCharact_nu_array_t
typedef VAR(float, TYPEDEF) Y_TPLTJC_WghtTgtTimeCharact_nu_array_t[2];
#endif
#ifndef RTE_TYPE_X_TPLTJC_WghtTgtTimeCustFct_nu_array_t
#define RTE_TYPE_X_TPLTJC_WghtTgtTimeCustFct_nu_array_t
typedef VAR(float, TYPEDEF) X_TPLTJC_WghtTgtTimeCustFct_nu_array_t[2];
#endif
#ifndef RTE_TYPE_X_TPLLCO_VehVelX_mps_array_t
#define RTE_TYPE_X_TPLLCO_VehVelX_mps_array_t
typedef VAR(float, TYPEDEF) X_TPLLCO_VehVelX_mps_array_t[13];
#endif
#ifndef RTE_TYPE_Y_TPLLCO_PreviewDistX_met_array_t
#define RTE_TYPE_Y_TPLLCO_PreviewDistX_met_array_t
typedef VAR(float, TYPEDEF) Y_TPLLCO_PreviewDistX_met_array_t[13];
#endif
#ifndef RTE_TYPE_X_TCTLGC_Curve_1pm_array_t
#define RTE_TYPE_X_TCTLGC_Curve_1pm_array_t
typedef VAR(float, TYPEDEF) X_TCTLGC_Curve_1pm_array_t[9];
#endif
#ifndef RTE_TYPE_X_TCTLGC_DTTC_met_array_t
#define RTE_TYPE_X_TCTLGC_DTTC_met_array_t
typedef VAR(float, TYPEDEF) X_TCTLGC_DTTC_met_array_t[5];
#endif
#ifndef RTE_TYPE_X_TCTLGC_DTTCTBVelX_mps_array_t
#define RTE_TYPE_X_TCTLGC_DTTCTBVelX_mps_array_t
typedef VAR(float, TYPEDEF) X_TCTLGC_DTTCTBVelX_mps_array_t[14];
#endif
#ifndef RTE_TYPE_X_TCTLGC_FactorCrvDistY_nu_array_t
#define RTE_TYPE_X_TCTLGC_FactorCrvDistY_nu_array_t
typedef VAR(float, TYPEDEF) X_TCTLGC_FactorCrvDistY_nu_array_t[7];
#endif
#ifndef RTE_TYPE_X_TCTLGC_FactorCrvHead_nu_array_t
#define RTE_TYPE_X_TCTLGC_FactorCrvHead_nu_array_t
typedef VAR(float, TYPEDEF) X_TCTLGC_FactorCrvHead_nu_array_t[7];
#endif
#ifndef RTE_TYPE_X_TCTLGC_OverallGainVelX_mps_array_t
#define RTE_TYPE_X_TCTLGC_OverallGainVelX_mps_array_t
typedef VAR(float, TYPEDEF) X_TCTLGC_OverallGainVelX_mps_array_t[16];
#endif
#ifndef RTE_TYPE_X_TCTLGC_Vel_mps_array_t
#define RTE_TYPE_X_TCTLGC_Vel_mps_array_t
typedef VAR(float, TYPEDEF) X_TCTLGC_Vel_mps_array_t[16];
#endif
#ifndef RTE_TYPE_Y_TCTLGC_DistYGain_nu_array_t
#define RTE_TYPE_Y_TCTLGC_DistYGain_nu_array_t
typedef VAR(float, TYPEDEF) Y_TCTLGC_DistYGain_nu_array_t[15];
#endif
#ifndef RTE_TYPE_Y_TCTLGC_DTTCGain_nu_array_t
#define RTE_TYPE_Y_TCTLGC_DTTCGain_nu_array_t
typedef VAR(float, TYPEDEF) Y_TCTLGC_DTTCGain_nu_array_t[4];
#endif
#ifndef RTE_TYPE_Y_TCTLGC_DTTCTBTime_sec_array_t
#define RTE_TYPE_Y_TCTLGC_DTTCTBTime_sec_array_t
typedef VAR(float, TYPEDEF) Y_TCTLGC_DTTCTBTime_sec_array_t[13];
#endif
#ifndef RTE_TYPE_Y_TCTLGC_FactorCrvCurveDistY_nu_array_t
#define RTE_TYPE_Y_TCTLGC_FactorCrvCurveDistY_nu_array_t
typedef VAR(float, TYPEDEF) Y_TCTLGC_FactorCrvCurveDistY_nu_array_t[8];
#endif
#ifndef RTE_TYPE_Y_TCTLGC_FactorCrvCurveHead_nu_array_t
#define RTE_TYPE_Y_TCTLGC_FactorCrvCurveHead_nu_array_t
typedef VAR(float, TYPEDEF) Y_TCTLGC_FactorCrvCurveHead_nu_array_t[8];
#endif
#ifndef RTE_TYPE_Y_TCTLGC_FactorCrvDistY_nu_array_t
#define RTE_TYPE_Y_TCTLGC_FactorCrvDistY_nu_array_t
typedef VAR(float, TYPEDEF) Y_TCTLGC_FactorCrvDistY_nu_array_t[6];
#endif
#ifndef RTE_TYPE_Y_TCTLGC_FactorCrvDistYLKA_nu_array_t
#define RTE_TYPE_Y_TCTLGC_FactorCrvDistYLKA_nu_array_t
typedef VAR(float, TYPEDEF) Y_TCTLGC_FactorCrvDistYLKA_nu_array_t[6];
#endif
#ifndef RTE_TYPE_Y_TCTLGC_FactorCrvHead_nu_array_t
#define RTE_TYPE_Y_TCTLGC_FactorCrvHead_nu_array_t
typedef VAR(float, TYPEDEF) Y_TCTLGC_FactorCrvHead_nu_array_t[6];
#endif
#ifndef RTE_TYPE_Y_TCTLGC_FactorCrvHeadLKA_nu_array_t
#define RTE_TYPE_Y_TCTLGC_FactorCrvHeadLKA_nu_array_t
typedef VAR(float, TYPEDEF) Y_TCTLGC_FactorCrvHeadLKA_nu_array_t[6];
#endif
#ifndef RTE_TYPE_Y_TCTLGC_FlxOverallGain_nu_array_t
#define RTE_TYPE_Y_TCTLGC_FlxOverallGain_nu_array_t
typedef VAR(float, TYPEDEF) Y_TCTLGC_FlxOverallGain_nu_array_t[15];
#endif
#ifndef RTE_TYPE_Y_TCTLGC_HeadingGain_nu_array_t
#define RTE_TYPE_Y_TCTLGC_HeadingGain_nu_array_t
typedef VAR(float, TYPEDEF) Y_TCTLGC_HeadingGain_nu_array_t[15];
#endif
#ifndef RTE_TYPE_X_TCTDTE_DetaVehVelToScalCrv_mps_array_t
#define RTE_TYPE_X_TCTDTE_DetaVehVelToScalCrv_mps_array_t
typedef VAR(float, TYPEDEF) X_TCTDTE_DetaVehVelToScalCrv_mps_array_t[10];
#endif
#ifndef RTE_TYPE_X_TCTDTE_FactorLatSlpVehVelX_nu_array_t
#define RTE_TYPE_X_TCTDTE_FactorLatSlpVehVelX_nu_array_t
typedef VAR(float, TYPEDEF) X_TCTDTE_FactorLatSlpVehVelX_nu_array_t[9];
#endif
#ifndef RTE_TYPE_X_TCTDTE_InputVehVelSat_met_array_t
#define RTE_TYPE_X_TCTDTE_InputVehVelSat_met_array_t
typedef VAR(float, TYPEDEF) X_TCTDTE_InputVehVelSat_met_array_t[8];
#endif
#ifndef RTE_TYPE_X_TCTDTE_InputVehVelScaling_mps_array_t
#define RTE_TYPE_X_TCTDTE_InputVehVelScaling_mps_array_t
typedef VAR(float, TYPEDEF) X_TCTDTE_InputVehVelScaling_mps_array_t[7];
#endif
#ifndef RTE_TYPE_Y_TCTDTE_DetaVehVelToScalCrvStartVal_nu_array_t
#define RTE_TYPE_Y_TCTDTE_DetaVehVelToScalCrvStartVal_nu_array_t
typedef VAR(float, TYPEDEF) Y_TCTDTE_DetaVehVelToScalCrvStartVal_nu_array_t[9];
#endif
#ifndef RTE_TYPE_Y_TCTDTE_FactorLatSlpVehVelY_nu_array_t
#define RTE_TYPE_Y_TCTDTE_FactorLatSlpVehVelY_nu_array_t
typedef VAR(float, TYPEDEF) Y_TCTDTE_FactorLatSlpVehVelY_nu_array_t[8];
#endif
#ifndef RTE_TYPE_Y_TCTDTE_InputVehVelToScalCrv_nu_array_t
#define RTE_TYPE_Y_TCTDTE_InputVehVelToScalCrv_nu_array_t
typedef VAR(float, TYPEDEF) Y_TCTDTE_InputVehVelToScalCrv_nu_array_t[6];
#endif
#ifndef RTE_TYPE_Y_TCTDTE_LatSlpFromCrvYAxis_rad_array_t
#define RTE_TYPE_Y_TCTDTE_LatSlpFromCrvYAxis_rad_array_t
typedef VAR(float, TYPEDEF) Y_TCTDTE_LatSlpFromCrvYAxis_rad_array_t[5];
#endif
#ifndef RTE_TYPE_Y_TCTDTE_ManuTrqActValScalCrv_nu_array_t
#define RTE_TYPE_Y_TCTDTE_ManuTrqActValScalCrv_nu_array_t
typedef VAR(float, TYPEDEF) Y_TCTDTE_ManuTrqActValScalCrv_nu_array_t[11];
#endif
#ifndef RTE_TYPE_Y_TCTDTE_VelXToMaxCrv_1pm_array_t
#define RTE_TYPE_Y_TCTDTE_VelXToMaxCrv_1pm_array_t
typedef VAR(float, TYPEDEF) Y_TCTDTE_VelXToMaxCrv_1pm_array_t[7];
#endif
#ifndef RTE_TYPE_Y_TCTDTE_VelXToMaxHeadAgl_rad_array_t
#define RTE_TYPE_Y_TCTDTE_VelXToMaxHeadAgl_rad_array_t
typedef VAR(float, TYPEDEF) Y_TCTDTE_VelXToMaxHeadAgl_rad_array_t[7];
#endif
#ifndef RTE_TYPE_Y_TCTDTE_VelXToMaxLatSlp_rad_array_t
#define RTE_TYPE_Y_TCTDTE_VelXToMaxLatSlp_rad_array_t
typedef VAR(float, TYPEDEF) Y_TCTDTE_VelXToMaxLatSlp_rad_array_t[7];
#endif
#ifndef RTE_TYPE_Y_TCTLGC_DistYD_nu_array_t
#define RTE_TYPE_Y_TCTLGC_DistYD_nu_array_t
typedef VAR(float, TYPEDEF) Y_TCTLGC_DistYD_nu_array_t[15];
#endif
#ifndef RTE_TYPE_P_DRMHOD_EstHandTqFilterC_array_t
#define RTE_TYPE_P_DRMHOD_EstHandTqFilterC_array_t
typedef VAR(float, TYPEDEF) P_DRMHOD_EstHandTqFilterC_array_t[8];
#endif
#ifndef RTE_TYPE_C_DRVMN_DebHorAfterHandsOff_sec_array_t
#define RTE_TYPE_C_DRVMN_DebHorAfterHandsOff_sec_array_t
typedef VAR(float, TYPEDEF) C_DRVMN_DebHorAfterHandsOff_sec_array_t[10];
#endif
#ifndef RTE_TYPE_C_DRVMN_DebounceTorAfterHor_sec_array_t
#define RTE_TYPE_C_DRVMN_DebounceTorAfterHor_sec_array_t
typedef VAR(float, TYPEDEF) C_DRVMN_DebounceTorAfterHor_sec_array_t[10];
#endif
#ifndef RTE_TYPE_P_DRMDAE_TrigDegrAftTorTime_sec_array_t
#define RTE_TYPE_P_DRMDAE_TrigDegrAftTorTime_sec_array_t
typedef VAR(float, TYPEDEF) P_DRMDAE_TrigDegrAftTorTime_sec_array_t[10];
#endif
#ifndef RTE_TYPE_CPAR_LCF_TunParamsKMC_t
#define RTE_TYPE_CPAR_LCF_TunParamsKMC_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(unsigned char, TYPEDEF) P_TPLFBT_TgtCrvSwitch_nu;
  VAR(unsigned char, TYPEDEF) P_TPLCEN_DrvTqrReplanEnable_nu;
  VAR(float, TYPEDEF) P_TPLCEN_ErrDistY_met;
  VAR(float, TYPEDEF) P_TPLCEN_ErrHeadAglPrev_rad;
  VAR(float, TYPEDEF) P_TPLCEN_ManualTrqImpuls_Nm;
  VAR(float, TYPEDEF) P_TPLCEN_ManualTrqTime_sec;
  VAR(unsigned char, TYPEDEF) P_TPLCEN_ParamInternal_nu;
  VAR(unsigned char, TYPEDEF) P_TPLCEN_PlanTgtValueSwitch_nu;
  VAR(unsigned char, TYPEDEF) P_TPLCEN_RelTrigCustFctRplCur_nu;
  VAR(unsigned char, TYPEDEF) P_TPLCEN_TrajPlanEnable_nu;
  VAR(float, TYPEDEF) P_TPLCEN_CyCTimeTrajCalc_sec;
  VAR(unsigned char, TYPEDEF) P_TPLCEN_CycEnable_nu;
  VAR(unsigned char, TYPEDEF) P_TPLTJC_ColldetActive_nu;
  VAR(float, TYPEDEF) P_TPLTJC_MaxArcLength_met;
  VAR(unsigned char, TYPEDEF) P_TPLTJC_NumCircles_nu;
  VAR(unsigned char, TYPEDEF) P_TPLTJC_ParamCostFctInternal_nu;
  VAR(float, TYPEDEF) P_TPLTJC_TMax_nu;
  VAR(unsigned char, TYPEDEF) P_TPLTJC_TimeTrajEndEnable_nu;
  VAR(float, TYPEDEF) P_TPLTJC_WeightDistBased_nu;
  VAR(Y_TPLTJC_WghtTgtDistYCharact_nu_array_t, TYPEDEF) Y_TPLTJC_WghtTgtDistYCharact_nu;
  VAR(X_TPLTJC_WghtTgtDistYCustFct_nu_array_t, TYPEDEF) X_TPLTJC_WghtTgtDistYCustFct_nu;
  VAR(float, TYPEDEF) P_TPLTJC_WeightTgtDistY_nu;
  VAR(Y_TPLTJC_WghtTgtTimeCharact_nu_array_t, TYPEDEF) Y_TPLTJC_WghtTgtTimeCharact_nu;
  VAR(X_TPLTJC_WghtTgtTimeCustFct_nu_array_t, TYPEDEF) X_TPLTJC_WghtTgtTimeCustFct_nu;
  VAR(float, TYPEDEF) P_TPLTJC_WeightTgtTime_nu;
  VAR(float, TYPEDEF) P_TPLCEN_VMinTimeBasedTraj_kph;
  VAR(unsigned char, TYPEDEF) P_TPLLCO_PreviewDistXEnable_nu;
  VAR(X_TPLLCO_VehVelX_mps_array_t, TYPEDEF) X_TPLLCO_VehVelX_mps;
  VAR(Y_TPLLCO_PreviewDistX_met_array_t, TYPEDEF) Y_TPLLCO_PreviewDistX_met;
  VAR(unsigned char, TYPEDEF) P_TCTLGC_CrvDifftoZeroSW_nu;
  VAR(float, TYPEDEF) P_TCTLGC_CrvErrCorrTime_sec;
  VAR(float, TYPEDEF) P_TCTLGC_CrvErrorD_nu;
  VAR(float, TYPEDEF) P_TCTLGC_CrvErrorI_nu;
  VAR(float, TYPEDEF) P_TCTLGC_CrvErrorILimit_nu;
  VAR(float, TYPEDEF) P_TCTLGC_CrvErrorP_nu;
  VAR(float, TYPEDEF) P_TCTLGC_DistYGain_nu;
  VAR(unsigned char, TYPEDEF) P_TCTLGC_DTTCFunction_nu;
  VAR(float, TYPEDEF) P_TCTLGC_FactorDistYFromErrY_nu;
  VAR(float, TYPEDEF) P_TCTLGC_FactorHeadFromDistY_nu;
  VAR(unsigned char, TYPEDEF) P_TCTLGC_FlxOverallGainEnable_nu;
  VAR(float, TYPEDEF) P_TCTLGC_HeadingGain_nu;
  VAR(float, TYPEDEF) P_TCTLGC_LateralCrvBeta_nu;
  VAR(float, TYPEDEF) P_TCTLGC_LateralErrorAlpha_nu;
  VAR(float, TYPEDEF) P_TCTLGC_LateralErrorILimit_met;
  VAR(float, TYPEDEF) P_TCTLGC_LateralOffset_met;
  VAR(unsigned char, TYPEDEF) P_TCTLGC_LCFControllerEnable_nu;
  VAR(float, TYPEDEF) P_TCTLGC_MaximumCorrDist_nu;
  VAR(float, TYPEDEF) P_TCTLGC_MaximumCrv_1pm;
  VAR(float, TYPEDEF) P_TCTLGC_MinimumCorrDist_nu;
  VAR(float, TYPEDEF) P_TCTLGC_MinimumCrv_1pm;
  VAR(float, TYPEDEF) P_TCTLGC_OverallGain_nu;
  VAR(float, TYPEDEF) P_TCTLGC_PT1FilterCorrDist_nu;
  VAR(float, TYPEDEF) P_TCTLGC_SpeedThreshold_mps;
  VAR(X_TCTLGC_Curve_1pm_array_t, TYPEDEF) X_TCTLGC_Curve_1pm;
  VAR(X_TCTLGC_DTTC_met_array_t, TYPEDEF) X_TCTLGC_DTTC_met;
  VAR(X_TCTLGC_DTTCTBVelX_mps_array_t, TYPEDEF) X_TCTLGC_DTTCTBVelX_mps;
  VAR(X_TCTLGC_FactorCrvDistY_nu_array_t, TYPEDEF) X_TCTLGC_FactorCrvDistY_nu;
  VAR(X_TCTLGC_FactorCrvHead_nu_array_t, TYPEDEF) X_TCTLGC_FactorCrvHead_nu;
  VAR(X_TCTLGC_OverallGainVelX_mps_array_t, TYPEDEF) X_TCTLGC_OverallGainVelX_mps;
  VAR(X_TCTLGC_Vel_mps_array_t, TYPEDEF) X_TCTLGC_Vel_mps;
  VAR(Y_TCTLGC_DistYGain_nu_array_t, TYPEDEF) Y_TCTLGC_DistYGain_nu;
  VAR(Y_TCTLGC_DTTCGain_nu_array_t, TYPEDEF) Y_TCTLGC_DTTCGain_nu;
  VAR(Y_TCTLGC_DTTCTBTime_sec_array_t, TYPEDEF) Y_TCTLGC_DTTCTBTime_sec;
  VAR(Y_TCTLGC_FactorCrvCurveDistY_nu_array_t, TYPEDEF) Y_TCTLGC_FactorCrvCurveDistY_nu;
  VAR(Y_TCTLGC_FactorCrvCurveHead_nu_array_t, TYPEDEF) Y_TCTLGC_FactorCrvCurveHead_nu;
  VAR(Y_TCTLGC_FactorCrvDistY_nu_array_t, TYPEDEF) Y_TCTLGC_FactorCrvDistY_nu;
  VAR(Y_TCTLGC_FactorCrvDistYLKA_nu_array_t, TYPEDEF) Y_TCTLGC_FactorCrvDistYLKA_nu;
  VAR(Y_TCTLGC_FactorCrvHead_nu_array_t, TYPEDEF) Y_TCTLGC_FactorCrvHead_nu;
  VAR(Y_TCTLGC_FactorCrvHeadLKA_nu_array_t, TYPEDEF) Y_TCTLGC_FactorCrvHeadLKA_nu;
  VAR(Y_TCTLGC_FlxOverallGain_nu_array_t, TYPEDEF) Y_TCTLGC_FlxOverallGain_nu;
  VAR(Y_TCTLGC_HeadingGain_nu_array_t, TYPEDEF) Y_TCTLGC_HeadingGain_nu;
  VAR(unsigned char, TYPEDEF) P_TCTCDC_PT1CurDistYEnable_nu;
  VAR(float, TYPEDEF) P_TCTCDC_PT1CurDistYTime_sec;
  VAR(unsigned char, TYPEDEF) P_TCTCDC_PT1CurHeadingEnable_nu;
  VAR(float, TYPEDEF) P_TCTCDC_PT1CurHeadingTime_sec;
  VAR(unsigned char, TYPEDEF) P_TCTCDC_PT1DevHeadingEnable_nu;
  VAR(float, TYPEDEF) P_TCTCDC_PT1DevHeadingTime_sec;
  VAR(unsigned char, TYPEDEF) P_TCTDTE_ClearToZeroCrvDistrb_nu;
  VAR(unsigned char, TYPEDEF) P_TCTDTE_ClrZeroHeadAglDistrb_nu;
  VAR(float, TYPEDEF) P_TCTDTE_DebounceTimerHold_sec;
  VAR(float, TYPEDEF) P_TCTDTE_DeZoneHeadAglDistrb_rad;
  VAR(float, TYPEDEF) P_TCTDTE_DmpngCrvBuildup_nu;
  VAR(float, TYPEDEF) P_TCTDTE_DmpngCrvReduction_nu;
  VAR(float, TYPEDEF) P_TCTDTE_DmpngCtrlledSys_nu;
  VAR(float, TYPEDEF) P_TCTDTE_DmpngGrdLimitBuildup_nu;
  VAR(float, TYPEDEF) P_TCTDTE_DmpngGrdLimRed_nu;
  VAR(float, TYPEDEF) P_TCTDTE_DmpngHeadingAngle_nu;
  VAR(unsigned char, TYPEDEF) P_TCTDTE_EstiBankAngleEnable_nu;
  VAR(float, TYPEDEF) P_TCTDTE_GrdGHold_nu;
  VAR(float, TYPEDEF) P_TCTDTE_MinimumSpeed_mps;
  VAR(float, TYPEDEF) P_TCTDTE_StartValTimerHold_sec;
  VAR(unsigned char, TYPEDEF) P_TCTDTE_SwitchCtrlErrHeading_nu;
  VAR(float, TYPEDEF) P_TCTDTE_TConstCrvBuildup_sec;
  VAR(float, TYPEDEF) P_TCTDTE_TConstCrvRed_sec;
  VAR(float, TYPEDEF) P_TCTDTE_TConstCrvSlBdup_sec;
  VAR(float, TYPEDEF) P_TCTDTE_TConstCtrlledSys_sec;
  VAR(float, TYPEDEF) P_TCTDTE_TConstGrdLimBdup_sec;
  VAR(float, TYPEDEF) P_TCTDTE_TConstGrdLimRed_sec;
  VAR(float, TYPEDEF) P_TCTDTE_TConstGrdLimSlBdup_sec;
  VAR(float, TYPEDEF) P_TCTDTE_TConstHeadAgl_sec;
  VAR(float, TYPEDEF) P_TCTDTE_ThActualManualTrq_Nm;
  VAR(float, TYPEDEF) P_TCTDTE_ThCtrlErrLatOffset_met;
  VAR(float, TYPEDEF) P_TCTDTE_ThStrAglFRAxlEffGrd_rps;
  VAR(float, TYPEDEF) P_TCTDTE_TStrAglFRAxlEff_sec;
  VAR(X_TCTDTE_DetaVehVelToScalCrv_mps_array_t, TYPEDEF) X_TCTDTE_DetaVehVelToScalCrv_mps;
  VAR(X_TCTDTE_FactorLatSlpVehVelX_nu_array_t, TYPEDEF) X_TCTDTE_FactorLatSlpVehVelX_nu;
  VAR(X_TCTDTE_InputVehVelSat_met_array_t, TYPEDEF) X_TCTDTE_InputVehVelSat_met;
  VAR(X_TCTDTE_InputVehVelScaling_mps_array_t, TYPEDEF) X_TCTDTE_InputVehVelScaling_mps;
  VAR(Y_TCTDTE_DetaVehVelToScalCrvStartVal_nu_array_t, TYPEDEF) Y_TCTDTE_DetaVehVelToScalCrvStartVal_nu;
  VAR(Y_TCTDTE_FactorLatSlpVehVelY_nu_array_t, TYPEDEF) Y_TCTDTE_FactorLatSlpVehVelY_nu;
  VAR(Y_TCTDTE_InputVehVelToScalCrv_nu_array_t, TYPEDEF) Y_TCTDTE_InputVehVelToScalCrv_nu;
  VAR(Y_TCTDTE_LatSlpFromCrvYAxis_rad_array_t, TYPEDEF) Y_TCTDTE_LatSlpFromCrvYAxis_rad;
  VAR(Y_TCTDTE_ManuTrqActValScalCrv_nu_array_t, TYPEDEF) Y_TCTDTE_ManuTrqActValScalCrv_nu;
  VAR(Y_TCTDTE_VelXToMaxCrv_1pm_array_t, TYPEDEF) Y_TCTDTE_VelXToMaxCrv_1pm;
  VAR(Y_TCTDTE_VelXToMaxHeadAgl_rad_array_t, TYPEDEF) Y_TCTDTE_VelXToMaxHeadAgl_rad;
  VAR(Y_TCTDTE_VelXToMaxLatSlp_rad_array_t, TYPEDEF) Y_TCTDTE_VelXToMaxLatSlp_rad;
  VAR(unsigned char, TYPEDEF) P_TCTDTE_BankAngleCrvActive_nu;
  VAR(float, TYPEDEF) P_TCTLGC_DistYGainLDP_nu;
  VAR(float, TYPEDEF) P_TCTLGC_HeadingGainLDP_nu;
  VAR(Y_TCTLGC_DistYD_nu_array_t, TYPEDEF) Y_TCTLGC_DistYD_nu;
  VAR(P_DRMHOD_EstHandTqFilterC_array_t, TYPEDEF) P_DRMHOD_EstHandTqFilterC;
  VAR(float, TYPEDEF) P_DRMHOD_HandsOffTqLim_Nm;
  VAR(float, TYPEDEF) P_DRMHOD_HandsOnTorLimAbs_Nm;
  VAR(float, TYPEDEF) P_DRMHOD_HandsOnTqLim_Nm;
  VAR(C_DRVMN_DebHorAfterHandsOff_sec_array_t, TYPEDEF) C_DRVMN_DebHorAfterHandsOff_sec;
  VAR(C_DRVMN_DebounceTorAfterHor_sec_array_t, TYPEDEF) C_DRVMN_DebounceTorAfterHor_sec;
  VAR(P_DRMDAE_TrigDegrAftTorTime_sec_array_t, TYPEDEF) P_DRMDAE_TrigDegrAftTorTime_sec;
  VAR(unsigned char, TYPEDEF) P_DRMDAE_IncWarningTime_bool;
} CPAR_LCF_TunParamsKMC_t;
#endif
#ifndef RTE_TYPE_Y_DPLSMI_CrvICDlcOffset_met_array_t
#define RTE_TYPE_Y_DPLSMI_CrvICDlcOffset_met_array_t
typedef VAR(float, TYPEDEF) Y_DPLSMI_CrvICDlcOffset_met_array_t[6];
#endif
#ifndef RTE_TYPE_Y_DPLSMI_CrvOCDlcOffset_met_array_t
#define RTE_TYPE_Y_DPLSMI_CrvOCDlcOffset_met_array_t
typedef VAR(float, TYPEDEF) Y_DPLSMI_CrvOCDlcOffset_met_array_t[6];
#endif
#ifndef RTE_TYPE_Y_DPLSMI_LWTrigDlcScalFact_nu_array_t
#define RTE_TYPE_Y_DPLSMI_LWTrigDlcScalFact_nu_array_t
typedef VAR(float, TYPEDEF) Y_DPLSMI_LWTrigDlcScalFact_nu_array_t[6];
#endif
#ifndef RTE_TYPE_Y_DPLSMI_LWTrigTlcScalFact_nu_array_t
#define RTE_TYPE_Y_DPLSMI_LWTrigTlcScalFact_nu_array_t
typedef VAR(float, TYPEDEF) Y_DPLSMI_LWTrigTlcScalFact_nu_array_t[6];
#endif
#ifndef RTE_TYPE_Y_DPLSMI_VXMD1TrigDlc_met_array_t
#define RTE_TYPE_Y_DPLSMI_VXMD1TrigDlc_met_array_t
typedef VAR(float, TYPEDEF) Y_DPLSMI_VXMD1TrigDlc_met_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPLSMI_VXMD2TrigDlc_met_array_t
#define RTE_TYPE_Y_DPLSMI_VXMD2TrigDlc_met_array_t
typedef VAR(float, TYPEDEF) Y_DPLSMI_VXMD2TrigDlc_met_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPLSMI_VXMD3TrigDlc_met_array_t
#define RTE_TYPE_Y_DPLSMI_VXMD3TrigDlc_met_array_t
typedef VAR(float, TYPEDEF) Y_DPLSMI_VXMD3TrigDlc_met_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPLSMI_VXTrigTlc_sec_array_t
#define RTE_TYPE_Y_DPLSMI_VXTrigTlc_sec_array_t
typedef VAR(float, TYPEDEF) Y_DPLSMI_VXTrigTlc_sec_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPLSMW_CrvICDlcOffset_met_array_t
#define RTE_TYPE_Y_DPLSMW_CrvICDlcOffset_met_array_t
typedef VAR(float, TYPEDEF) Y_DPLSMW_CrvICDlcOffset_met_array_t[6];
#endif
#ifndef RTE_TYPE_Y_DPLSMW_CrvOCDlcOffset_met_array_t
#define RTE_TYPE_Y_DPLSMW_CrvOCDlcOffset_met_array_t
typedef VAR(float, TYPEDEF) Y_DPLSMW_CrvOCDlcOffset_met_array_t[6];
#endif
#ifndef RTE_TYPE_Y_DPLSMW_LWTrigDlcScalFact_nu_array_t
#define RTE_TYPE_Y_DPLSMW_LWTrigDlcScalFact_nu_array_t
typedef VAR(float, TYPEDEF) Y_DPLSMW_LWTrigDlcScalFact_nu_array_t[6];
#endif
#ifndef RTE_TYPE_Y_DPLSMW_LWTrigTlcScalFact_nu_array_t
#define RTE_TYPE_Y_DPLSMW_LWTrigTlcScalFact_nu_array_t
typedef VAR(float, TYPEDEF) Y_DPLSMW_LWTrigTlcScalFact_nu_array_t[6];
#endif
#ifndef RTE_TYPE_Y_DPLSMW_VXMD1TrigDlc_met_array_t
#define RTE_TYPE_Y_DPLSMW_VXMD1TrigDlc_met_array_t
typedef VAR(float, TYPEDEF) Y_DPLSMW_VXMD1TrigDlc_met_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPLSMW_VXMD2TrigDlc_met_array_t
#define RTE_TYPE_Y_DPLSMW_VXMD2TrigDlc_met_array_t
typedef VAR(float, TYPEDEF) Y_DPLSMW_VXMD2TrigDlc_met_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPLSMW_VXTrigTlc_sec_array_t
#define RTE_TYPE_Y_DPLSMW_VXTrigTlc_sec_array_t
typedef VAR(float, TYPEDEF) Y_DPLSMW_VXTrigTlc_sec_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPRSMI_CrvICDlcOffset_met_array_t
#define RTE_TYPE_Y_DPRSMI_CrvICDlcOffset_met_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMI_CrvICDlcOffset_met_array_t[6];
#endif
#ifndef RTE_TYPE_Y_DPRSMI_CrvOCDlcOffset_met_array_t
#define RTE_TYPE_Y_DPRSMI_CrvOCDlcOffset_met_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMI_CrvOCDlcOffset_met_array_t[6];
#endif
#ifndef RTE_TYPE_Y_DPRSMI_LWTrigDlcScalFact_nu_array_t
#define RTE_TYPE_Y_DPRSMI_LWTrigDlcScalFact_nu_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMI_LWTrigDlcScalFact_nu_array_t[6];
#endif
#ifndef RTE_TYPE_Y_DPRSMI_LWTrigTlcScalFact_nu_array_t
#define RTE_TYPE_Y_DPRSMI_LWTrigTlcScalFact_nu_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMI_LWTrigTlcScalFact_nu_array_t[6];
#endif
#ifndef RTE_TYPE_Y_DPRSMI_VXMD1TrigDlc_met_array_t
#define RTE_TYPE_Y_DPRSMI_VXMD1TrigDlc_met_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMI_VXMD1TrigDlc_met_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPRSMI_VXMD2TrigDlc_met_array_t
#define RTE_TYPE_Y_DPRSMI_VXMD2TrigDlc_met_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMI_VXMD2TrigDlc_met_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPRSMI_VXTrigDrcDlc_met_array_t
#define RTE_TYPE_Y_DPRSMI_VXTrigDrcDlc_met_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMI_VXTrigDrcDlc_met_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPRSMI_VXTrigDrc_met_array_t
#define RTE_TYPE_Y_DPRSMI_VXTrigDrc_met_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMI_VXTrigDrc_met_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPRSMI_VXTrigTlc_sec_array_t
#define RTE_TYPE_Y_DPRSMI_VXTrigTlc_sec_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMI_VXTrigTlc_sec_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPRSMI_VXTrigTrcTlc_sec_array_t
#define RTE_TYPE_Y_DPRSMI_VXTrigTrcTlc_sec_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMI_VXTrigTrcTlc_sec_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPRSMI_VXTrigTrc_sec_array_t
#define RTE_TYPE_Y_DPRSMI_VXTrigTrc_sec_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMI_VXTrigTrc_sec_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPRSMI_VXMD1TrigTrcTlc_sec_array_t
#define RTE_TYPE_Y_DPRSMI_VXMD1TrigTrcTlc_sec_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMI_VXMD1TrigTrcTlc_sec_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPRSMI_VXMD1TrigTrc_sec_array_t
#define RTE_TYPE_Y_DPRSMI_VXMD1TrigTrc_sec_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMI_VXMD1TrigTrc_sec_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPRSMI_VXMD2TrigTrcTlc_sec_array_t
#define RTE_TYPE_Y_DPRSMI_VXMD2TrigTrcTlc_sec_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMI_VXMD2TrigTrcTlc_sec_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPRSMI_VXMD2TrigTrc_sec_array_t
#define RTE_TYPE_Y_DPRSMI_VXMD2TrigTrc_sec_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMI_VXMD2TrigTrc_sec_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPRSMW_CrvICDlcOffset_met_array_t
#define RTE_TYPE_Y_DPRSMW_CrvICDlcOffset_met_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMW_CrvICDlcOffset_met_array_t[6];
#endif
#ifndef RTE_TYPE_Y_DPRSMW_CrvOCDlcOffset_met_array_t
#define RTE_TYPE_Y_DPRSMW_CrvOCDlcOffset_met_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMW_CrvOCDlcOffset_met_array_t[6];
#endif
#ifndef RTE_TYPE_Y_DPRSMW_LWTrigDlcScalFact_nu_array_t
#define RTE_TYPE_Y_DPRSMW_LWTrigDlcScalFact_nu_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMW_LWTrigDlcScalFact_nu_array_t[6];
#endif
#ifndef RTE_TYPE_Y_DPRSMW_LWTrigTlcScalFact_nu_array_t
#define RTE_TYPE_Y_DPRSMW_LWTrigTlcScalFact_nu_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMW_LWTrigTlcScalFact_nu_array_t[6];
#endif
#ifndef RTE_TYPE_Y_DPRSMW_VXMD1TrigDlc_met_array_t
#define RTE_TYPE_Y_DPRSMW_VXMD1TrigDlc_met_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMW_VXMD1TrigDlc_met_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPRSMW_VXMD2TrigDlc_met_array_t
#define RTE_TYPE_Y_DPRSMW_VXMD2TrigDlc_met_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMW_VXMD2TrigDlc_met_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPRSMW_VXTrigDrcDlc_met_array_t
#define RTE_TYPE_Y_DPRSMW_VXTrigDrcDlc_met_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMW_VXTrigDrcDlc_met_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPRSMW_VXTrigDrc_met_array_t
#define RTE_TYPE_Y_DPRSMW_VXTrigDrc_met_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMW_VXTrigDrc_met_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPRSMW_VXTrigTlc_sec_array_t
#define RTE_TYPE_Y_DPRSMW_VXTrigTlc_sec_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMW_VXTrigTlc_sec_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPRSMW_VXTrigTrcTlc_sec_array_t
#define RTE_TYPE_Y_DPRSMW_VXTrigTrcTlc_sec_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMW_VXTrigTrcTlc_sec_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPRSMW_VXTrigTrc_sec_array_t
#define RTE_TYPE_Y_DPRSMW_VXTrigTrc_sec_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMW_VXTrigTrc_sec_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPRSMW_VXMD1TrigTrcTlc_sec_array_t
#define RTE_TYPE_Y_DPRSMW_VXMD1TrigTrcTlc_sec_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMW_VXMD1TrigTrcTlc_sec_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPRSMW_VXMD1TrigTrc_sec_array_t
#define RTE_TYPE_Y_DPRSMW_VXMD1TrigTrc_sec_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMW_VXMD1TrigTrc_sec_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPRSMW_VXMD2TrigTrcTlc_sec_array_t
#define RTE_TYPE_Y_DPRSMW_VXMD2TrigTrcTlc_sec_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMW_VXMD2TrigTrcTlc_sec_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPRSMW_VXMD2TrigTrc_sec_array_t
#define RTE_TYPE_Y_DPRSMW_VXMD2TrigTrc_sec_array_t
typedef VAR(float, TYPEDEF) Y_DPRSMW_VXMD2TrigTrc_sec_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPODOO_TrigTlcValVx_sec_array_t
#define RTE_TYPE_Y_DPODOO_TrigTlcValVx_sec_array_t
typedef VAR(float, TYPEDEF) Y_DPODOO_TrigTlcValVx_sec_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPODOO_TrigTtcValVx_sec_array_t
#define RTE_TYPE_Y_DPODOO_TrigTtcValVx_sec_array_t
typedef VAR(float, TYPEDEF) Y_DPODOO_TrigTtcValVx_sec_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPODOO_TrigTlcTtcOffsetVx_sec_array_t
#define RTE_TYPE_Y_DPODOO_TrigTlcTtcOffsetVx_sec_array_t
typedef VAR(float, TYPEDEF) Y_DPODOO_TrigTlcTtcOffsetVx_sec_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPODOO_TrigTlcScalFactLw_nu_array_t
#define RTE_TYPE_Y_DPODOO_TrigTlcScalFactLw_nu_array_t
typedef VAR(float, TYPEDEF) Y_DPODOO_TrigTlcScalFactLw_nu_array_t[6];
#endif
#ifndef RTE_TYPE_Y_DPODOO_TrigDlcObjValVx_met_array_t
#define RTE_TYPE_Y_DPODOO_TrigDlcObjValVx_met_array_t
typedef VAR(float, TYPEDEF) Y_DPODOO_TrigDlcObjValVx_met_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPODOO_TrigDlcObjScalFactLw_nu_array_t
#define RTE_TYPE_Y_DPODOO_TrigDlcObjScalFactLw_nu_array_t
typedef VAR(float, TYPEDEF) Y_DPODOO_TrigDlcObjScalFactLw_nu_array_t[6];
#endif
#ifndef RTE_TYPE_Y_DPODOO_TrigDlcEgoValVxMd2_met_array_t
#define RTE_TYPE_Y_DPODOO_TrigDlcEgoValVxMd2_met_array_t
typedef VAR(float, TYPEDEF) Y_DPODOO_TrigDlcEgoValVxMd2_met_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPODOO_TrigDlcEgoValVxMd1_met_array_t
#define RTE_TYPE_Y_DPODOO_TrigDlcEgoValVxMd1_met_array_t
typedef VAR(float, TYPEDEF) Y_DPODOO_TrigDlcEgoValVxMd1_met_array_t[8];
#endif
#ifndef RTE_TYPE_Y_DPODOO_TrigDlcEgoScalFactLw_nu_array_t
#define RTE_TYPE_Y_DPODOO_TrigDlcEgoScalFactLw_nu_array_t
typedef VAR(float, TYPEDEF) Y_DPODOO_TrigDlcEgoScalFactLw_nu_array_t[6];
#endif
#ifndef RTE_TYPE_Y_DPODOO_TrigDlcEgoValCrvIC_met_array_t
#define RTE_TYPE_Y_DPODOO_TrigDlcEgoValCrvIC_met_array_t
typedef VAR(float, TYPEDEF) Y_DPODOO_TrigDlcEgoValCrvIC_met_array_t[6];
#endif
#ifndef RTE_TYPE_Y_DPODOO_TrigDlcEgoValCrvOC_met_array_t
#define RTE_TYPE_Y_DPODOO_TrigDlcEgoValCrvOC_met_array_t
typedef VAR(float, TYPEDEF) Y_DPODOO_TrigDlcEgoValCrvOC_met_array_t[6];
#endif
#ifndef RTE_TYPE_CPAR_LCF_TunParamsLDP_t
#define RTE_TYPE_CPAR_LCF_TunParamsLDP_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(unsigned char, TYPEDEF) VcsLcfVariantNumber_nu;
  VAR(Y_DPLSMI_CrvICDlcOffset_met_array_t, TYPEDEF) Y_DPLSMI_CrvICDlcOffset_met;
  VAR(Y_DPLSMI_CrvOCDlcOffset_met_array_t, TYPEDEF) Y_DPLSMI_CrvOCDlcOffset_met;
  VAR(Y_DPLSMI_LWTrigDlcScalFact_nu_array_t, TYPEDEF) Y_DPLSMI_LWTrigDlcScalFact_nu;
  VAR(Y_DPLSMI_LWTrigTlcScalFact_nu_array_t, TYPEDEF) Y_DPLSMI_LWTrigTlcScalFact_nu;
  VAR(Y_DPLSMI_VXMD1TrigDlc_met_array_t, TYPEDEF) Y_DPLSMI_VXMD1TrigDlc_met;
  VAR(Y_DPLSMI_VXMD2TrigDlc_met_array_t, TYPEDEF) Y_DPLSMI_VXMD2TrigDlc_met;
  VAR(Y_DPLSMI_VXMD3TrigDlc_met_array_t, TYPEDEF) Y_DPLSMI_VXMD3TrigDlc_met;
  VAR(Y_DPLSMI_VXTrigTlc_sec_array_t, TYPEDEF) Y_DPLSMI_VXTrigTlc_sec;
  VAR(float, TYPEDEF) P_DPLSMI_TlcDistanceMin_met;
  VAR(Y_DPLSMW_CrvICDlcOffset_met_array_t, TYPEDEF) Y_DPLSMW_CrvICDlcOffset_met;
  VAR(Y_DPLSMW_CrvOCDlcOffset_met_array_t, TYPEDEF) Y_DPLSMW_CrvOCDlcOffset_met;
  VAR(Y_DPLSMW_LWTrigDlcScalFact_nu_array_t, TYPEDEF) Y_DPLSMW_LWTrigDlcScalFact_nu;
  VAR(Y_DPLSMW_LWTrigTlcScalFact_nu_array_t, TYPEDEF) Y_DPLSMW_LWTrigTlcScalFact_nu;
  VAR(Y_DPLSMW_VXMD1TrigDlc_met_array_t, TYPEDEF) Y_DPLSMW_VXMD1TrigDlc_met;
  VAR(Y_DPLSMW_VXMD2TrigDlc_met_array_t, TYPEDEF) Y_DPLSMW_VXMD2TrigDlc_met;
  VAR(Y_DPLSMW_VXTrigTlc_sec_array_t, TYPEDEF) Y_DPLSMW_VXTrigTlc_sec;
  VAR(float, TYPEDEF) P_DPLSMW_TlcDistanceMin_met;
  VAR(Y_DPRSMI_CrvICDlcOffset_met_array_t, TYPEDEF) Y_DPRSMI_CrvICDlcOffset_met;
  VAR(Y_DPRSMI_CrvOCDlcOffset_met_array_t, TYPEDEF) Y_DPRSMI_CrvOCDlcOffset_met;
  VAR(Y_DPRSMI_LWTrigDlcScalFact_nu_array_t, TYPEDEF) Y_DPRSMI_LWTrigDlcScalFact_nu;
  VAR(Y_DPRSMI_LWTrigTlcScalFact_nu_array_t, TYPEDEF) Y_DPRSMI_LWTrigTlcScalFact_nu;
  VAR(Y_DPRSMI_VXMD1TrigDlc_met_array_t, TYPEDEF) Y_DPRSMI_VXMD1TrigDlc_met;
  VAR(Y_DPRSMI_VXMD2TrigDlc_met_array_t, TYPEDEF) Y_DPRSMI_VXMD2TrigDlc_met;
  VAR(Y_DPRSMI_VXTrigDrcDlc_met_array_t, TYPEDEF) Y_DPRSMI_VXTrigDrcDlc_met;
  VAR(Y_DPRSMI_VXTrigDrc_met_array_t, TYPEDEF) Y_DPRSMI_VXTrigDrc_met;
  VAR(Y_DPRSMI_VXTrigTlc_sec_array_t, TYPEDEF) Y_DPRSMI_VXTrigTlc_sec;
  VAR(Y_DPRSMI_VXTrigTrcTlc_sec_array_t, TYPEDEF) Y_DPRSMI_VXTrigTrcTlc_sec;
  VAR(Y_DPRSMI_VXTrigTrc_sec_array_t, TYPEDEF) Y_DPRSMI_VXTrigTrc_sec;
  VAR(Y_DPRSMI_VXMD1TrigTrcTlc_sec_array_t, TYPEDEF) Y_DPRSMI_VXMD1TrigTrcTlc_sec;
  VAR(Y_DPRSMI_VXMD1TrigTrc_sec_array_t, TYPEDEF) Y_DPRSMI_VXMD1TrigTrc_sec;
  VAR(Y_DPRSMI_VXMD2TrigTrcTlc_sec_array_t, TYPEDEF) Y_DPRSMI_VXMD2TrigTrcTlc_sec;
  VAR(Y_DPRSMI_VXMD2TrigTrc_sec_array_t, TYPEDEF) Y_DPRSMI_VXMD2TrigTrc_sec;
  VAR(Y_DPRSMW_CrvICDlcOffset_met_array_t, TYPEDEF) Y_DPRSMW_CrvICDlcOffset_met;
  VAR(Y_DPRSMW_CrvOCDlcOffset_met_array_t, TYPEDEF) Y_DPRSMW_CrvOCDlcOffset_met;
  VAR(Y_DPRSMW_LWTrigDlcScalFact_nu_array_t, TYPEDEF) Y_DPRSMW_LWTrigDlcScalFact_nu;
  VAR(Y_DPRSMW_LWTrigTlcScalFact_nu_array_t, TYPEDEF) Y_DPRSMW_LWTrigTlcScalFact_nu;
  VAR(Y_DPRSMW_VXMD1TrigDlc_met_array_t, TYPEDEF) Y_DPRSMW_VXMD1TrigDlc_met;
  VAR(Y_DPRSMW_VXMD2TrigDlc_met_array_t, TYPEDEF) Y_DPRSMW_VXMD2TrigDlc_met;
  VAR(Y_DPRSMW_VXTrigDrcDlc_met_array_t, TYPEDEF) Y_DPRSMW_VXTrigDrcDlc_met;
  VAR(Y_DPRSMW_VXTrigDrc_met_array_t, TYPEDEF) Y_DPRSMW_VXTrigDrc_met;
  VAR(Y_DPRSMW_VXTrigTlc_sec_array_t, TYPEDEF) Y_DPRSMW_VXTrigTlc_sec;
  VAR(Y_DPRSMW_VXTrigTrcTlc_sec_array_t, TYPEDEF) Y_DPRSMW_VXTrigTrcTlc_sec;
  VAR(Y_DPRSMW_VXTrigTrc_sec_array_t, TYPEDEF) Y_DPRSMW_VXTrigTrc_sec;
  VAR(Y_DPRSMW_VXMD1TrigTrcTlc_sec_array_t, TYPEDEF) Y_DPRSMW_VXMD1TrigTrcTlc_sec;
  VAR(Y_DPRSMW_VXMD1TrigTrc_sec_array_t, TYPEDEF) Y_DPRSMW_VXMD1TrigTrc_sec;
  VAR(Y_DPRSMW_VXMD2TrigTrcTlc_sec_array_t, TYPEDEF) Y_DPRSMW_VXMD2TrigTrcTlc_sec;
  VAR(Y_DPRSMW_VXMD2TrigTrc_sec_array_t, TYPEDEF) Y_DPRSMW_VXMD2TrigTrc_sec;
  VAR(Y_DPODOO_TrigTlcValVx_sec_array_t, TYPEDEF) Y_DPODOO_TrigTlcValVx_sec;
  VAR(Y_DPODOO_TrigTtcValVx_sec_array_t, TYPEDEF) Y_DPODOO_TrigTtcValVx_sec;
  VAR(Y_DPODOO_TrigTlcTtcOffsetVx_sec_array_t, TYPEDEF) Y_DPODOO_TrigTlcTtcOffsetVx_sec;
  VAR(Y_DPODOO_TrigTlcScalFactLw_nu_array_t, TYPEDEF) Y_DPODOO_TrigTlcScalFactLw_nu;
  VAR(Y_DPODOO_TrigDlcObjValVx_met_array_t, TYPEDEF) Y_DPODOO_TrigDlcObjValVx_met;
  VAR(Y_DPODOO_TrigDlcObjScalFactLw_nu_array_t, TYPEDEF) Y_DPODOO_TrigDlcObjScalFactLw_nu;
  VAR(Y_DPODOO_TrigDlcEgoValVxMd2_met_array_t, TYPEDEF) Y_DPODOO_TrigDlcEgoValVxMd2_met;
  VAR(Y_DPODOO_TrigDlcEgoValVxMd1_met_array_t, TYPEDEF) Y_DPODOO_TrigDlcEgoValVxMd1_met;
  VAR(Y_DPODOO_TrigDlcEgoScalFactLw_nu_array_t, TYPEDEF) Y_DPODOO_TrigDlcEgoScalFactLw_nu;
  VAR(Y_DPODOO_TrigDlcEgoValCrvIC_met_array_t, TYPEDEF) Y_DPODOO_TrigDlcEgoValCrvIC_met;
  VAR(Y_DPODOO_TrigDlcEgoValCrvOC_met_array_t, TYPEDEF) Y_DPODOO_TrigDlcEgoValCrvOC_met;
} CPAR_LCF_TunParamsLDP_t;
#endif
#ifndef RTE_TYPE_Y_LTAMGR_ManualTrqDumpGain_nu_array_t
#define RTE_TYPE_Y_LTAMGR_ManualTrqDumpGain_nu_array_t
typedef VAR(float, TYPEDEF) Y_LTAMGR_ManualTrqDumpGain_nu_array_t[15];
#endif
#ifndef RTE_TYPE_X_LTAMGR_ManualTrqActualVal_Nm_array_t
#define RTE_TYPE_X_LTAMGR_ManualTrqActualVal_Nm_array_t
typedef VAR(float, TYPEDEF) X_LTAMGR_ManualTrqActualVal_Nm_array_t[16];
#endif
#ifndef RTE_TYPE_Y_LTAMGR_CrvDumpGain_nu_array_t
#define RTE_TYPE_Y_LTAMGR_CrvDumpGain_nu_array_t
typedef VAR(float, TYPEDEF) Y_LTAMGR_CrvDumpGain_nu_array_t[4];
#endif
#ifndef RTE_TYPE_X_LTAMGR_CntrLnClthCurvR_met_array_t
#define RTE_TYPE_X_LTAMGR_CntrLnClthCurvR_met_array_t
typedef VAR(float, TYPEDEF) X_LTAMGR_CntrLnClthCurvR_met_array_t[5];
#endif
#ifndef RTE_TYPE_Y_LTAMGR_TgtStrAngGuard_deg_array_t
#define RTE_TYPE_Y_LTAMGR_TgtStrAngGuard_deg_array_t
typedef VAR(float, TYPEDEF) Y_LTAMGR_TgtStrAngGuard_deg_array_t[22];
#endif
#ifndef RTE_TYPE_Y_LTAMGR_TgtStrAngRateGuard_dps_array_t
#define RTE_TYPE_Y_LTAMGR_TgtStrAngRateGuard_dps_array_t
typedef VAR(float, TYPEDEF) Y_LTAMGR_TgtStrAngRateGuard_dps_array_t[22];
#endif
#ifndef RTE_TYPE_Y_LTAMGR_TgGainDcrStartTrq_nm_array_t
#define RTE_TYPE_Y_LTAMGR_TgGainDcrStartTrq_nm_array_t
typedef VAR(float, TYPEDEF) Y_LTAMGR_TgGainDcrStartTrq_nm_array_t[22];
#endif
#ifndef RTE_TYPE_Y_LTAMGR_TgGainDcrEndTrq_nm_array_t
#define RTE_TYPE_Y_LTAMGR_TgGainDcrEndTrq_nm_array_t
typedef VAR(float, TYPEDEF) Y_LTAMGR_TgGainDcrEndTrq_nm_array_t[22];
#endif
#ifndef RTE_TYPE_CPAR_LCF_TunParamsLKA_t
#define RTE_TYPE_CPAR_LCF_TunParamsLKA_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(unsigned short, TYPEDEF) P_LTAMGR_VCS_Info_btm;
  VAR(Y_LTAMGR_ManualTrqDumpGain_nu_array_t, TYPEDEF) Y_LTAMGR_ManualTrqDumpGain_nu;
  VAR(X_LTAMGR_ManualTrqActualVal_Nm_array_t, TYPEDEF) X_LTAMGR_ManualTrqActualVal_Nm;
  VAR(Y_LTAMGR_CrvDumpGain_nu_array_t, TYPEDEF) Y_LTAMGR_CrvDumpGain_nu;
  VAR(X_LTAMGR_CntrLnClthCurvR_met_array_t, TYPEDEF) X_LTAMGR_CntrLnClthCurvR_met;
  VAR(Y_LTAMGR_TgtStrAngGuard_deg_array_t, TYPEDEF) Y_LTAMGR_TgtStrAngGuard_deg;
  VAR(Y_LTAMGR_TgtStrAngRateGuard_dps_array_t, TYPEDEF) Y_LTAMGR_TgtStrAngRateGuard_dps;
  VAR(Y_LTAMGR_TgGainDcrStartTrq_nm_array_t, TYPEDEF) Y_LTAMGR_TgGainDcrStartTrq_nm;
  VAR(Y_LTAMGR_TgGainDcrEndTrq_nm_array_t, TYPEDEF) Y_LTAMGR_TgGainDcrEndTrq_nm;
} CPAR_LCF_TunParamsLKA_t;
#endif
#ifndef RTE_TYPE_LSD_e_Cpar_HeadlightType
#define RTE_TYPE_LSD_e_Cpar_HeadlightType
typedef VAR(unsigned char, TYPEDEF) LSD_e_Cpar_HeadlightType;
#endif
#ifndef RTE_TYPE_LSD_e_Cpar_ConfigTestMode
#define RTE_TYPE_LSD_e_Cpar_ConfigTestMode
typedef VAR(unsigned char, TYPEDEF) LSD_e_Cpar_ConfigTestMode;
#endif
#ifndef RTE_TYPE_LSD_e_Cpar_ConfigCityDetection
#define RTE_TYPE_LSD_e_Cpar_ConfigCityDetection
typedef VAR(unsigned char, TYPEDEF) LSD_e_Cpar_ConfigCityDetection;
#endif
#ifndef RTE_TYPE_LSD_e_Cpar_ConfigTunnelDetection
#define RTE_TYPE_LSD_e_Cpar_ConfigTunnelDetection
typedef VAR(unsigned char, TYPEDEF) LSD_e_Cpar_ConfigTunnelDetection;
#endif
#ifndef RTE_TYPE_LSD_Cpar_Config_t
#define RTE_TYPE_LSD_Cpar_Config_t
typedef struct
{
  VAR(LSD_e_Cpar_ConfigTestMode, TYPEDEF) testMode;
  VAR(LSD_e_Cpar_ConfigCityDetection, TYPEDEF) cityDetection;
  VAR(LSD_e_Cpar_ConfigTunnelDetection, TYPEDEF) tunnelDetection;
} LSD_Cpar_Config_t;
#endif
#ifndef RTE_TYPE_LSD_e_TrafficStyle
#define RTE_TYPE_LSD_e_TrafficStyle
typedef VAR(unsigned char, TYPEDEF) LSD_e_TrafficStyle;
#endif
#ifndef RTE_TYPE_LSD_e_Cpar_CountryCode
#define RTE_TYPE_LSD_e_Cpar_CountryCode
typedef VAR(unsigned char, TYPEDEF) LSD_e_Cpar_CountryCode;
#endif
#ifndef RTE_TYPE_LSD_Cpar_Country_t
#define RTE_TYPE_LSD_Cpar_Country_t
typedef struct
{
  VAR(LSD_e_TrafficStyle, TYPEDEF) trafficStyle;
  VAR(LSD_e_Cpar_CountryCode, TYPEDEF) countryCode;
} LSD_Cpar_Country_t;
#endif
#ifndef RTE_TYPE_LSD_Cpar_Analysis_t
#define RTE_TYPE_LSD_Cpar_Analysis_t
typedef struct
{
  VAR(float, TYPEDEF) lrfOutputBonus_Oncoming;
  VAR(float, TYPEDEF) lrfOutputBonus_Ahead;
  VAR(float, TYPEDEF) lrfOutputBonus_AheadRedRefArea;
  VAR(float, TYPEDEF) lrfOutputBonus_AheadWhiteRefArea;
  VAR(float, TYPEDEF) lrfOutputBonus_RedLights;
  VAR(float, TYPEDEF) lrfOutputBonus_CityLights;
  VAR(float, TYPEDEF) lrfOutputPenalty_Oncoming;
  VAR(float, TYPEDEF) lrfOutputPenalty_Ahead;
  VAR(float, TYPEDEF) lrfOutputPenalty_AheadRedRefArea;
  VAR(float, TYPEDEF) lrfOutputPenalty_AheadWhiteRefArea;
  VAR(float, TYPEDEF) lrfOutputPenalty_RedLights;
  VAR(float, TYPEDEF) lrfOutputPenalty_CityLights;
  VAR(float, TYPEDEF) lrfMinSum_Oncoming;
  VAR(float, TYPEDEF) lrfMinSum_Ahead;
  VAR(float, TYPEDEF) lrfMinSum_AheadRedRefArea;
  VAR(float, TYPEDEF) lrfMinSum_AheadWhiteRefArea;
} LSD_Cpar_Analysis_t;
#endif
#ifndef RTE_TYPE_LSD_Cpar_City_t
#define RTE_TYPE_LSD_Cpar_City_t
typedef struct
{
  VAR(float, TYPEDEF) speedThresholdLow;
  VAR(float, TYPEDEF) speedThresholdHigh;
  VAR(unsigned short, TYPEDEF) numLeavingStreetlamp_LowSpeed;
  VAR(unsigned short, TYPEDEF) numLeavingStreetlamp_HighSpeed;
  VAR(unsigned short, TYPEDEF) numSceneStreetlamp_LowSpeed;
  VAR(unsigned short, TYPEDEF) numSceneStreetlamp_HighSpeed;
  VAR(float, TYPEDEF) ambientLevel_LowSpeed;
  VAR(float, TYPEDEF) ambientLevel_HighSpeed;
  VAR(float, TYPEDEF) streetLampMaxInterDist_LowSpeed;
  VAR(float, TYPEDEF) streetLampMaxInterDist_HighSpeed;
  VAR(float, TYPEDEF) streetLampMaxDist_LowSpeed;
  VAR(float, TYPEDEF) streetLampMaxDist_HighSpeed;
  VAR(float, TYPEDEF) leavingStreetLampDiscardDistance;
  VAR(float, TYPEDEF) leavingCityDelay_LowSpeed;
  VAR(float, TYPEDEF) leavingCityDelay_HighSpeed;
  VAR(float, TYPEDEF) leavingCityDelaySceneStreetlamp_LowInt;
  VAR(float, TYPEDEF) leavingCityDelaySceneStreetlamp_HighInt;
  VAR(unsigned short, TYPEDEF) numTunnelStreetlamp;
  VAR(unsigned short, TYPEDEF) numStreetlampInSceneLeaveCityJapan;
} LSD_Cpar_City_t;
#endif
#ifndef RTE_TYPE_LSD_Cpar_Highway_t
#define RTE_TYPE_LSD_Cpar_Highway_t
typedef struct
{
  VAR(float, TYPEDEF) speedDetThreshold_Fast;
  VAR(float, TYPEDEF) speedDetThreshold;
  VAR(float, TYPEDEF) speedDetThresholdDistance;
} LSD_Cpar_Highway_t;
#endif
#ifndef RTE_TYPE_CPAR_LSD_t
#define RTE_TYPE_CPAR_LSD_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(LSD_e_Cpar_HeadlightType, TYPEDEF) headlightType;
  VAR(LSD_Cpar_Config_t, TYPEDEF) config;
  VAR(LSD_Cpar_Country_t, TYPEDEF) country;
  VAR(LSD_Cpar_Analysis_t, TYPEDEF) analysis;
  VAR(LSD_Cpar_City_t, TYPEDEF) city;
  VAR(LSD_Cpar_Highway_t, TYPEDEF) highway;
} CPAR_LSD_t;
#endif
#ifndef RTE_TYPE_aubConfigData_array_t
#define RTE_TYPE_aubConfigData_array_t
typedef VAR(unsigned char, TYPEDEF) aubConfigData_array_t[8];
#endif
#ifndef RTE_TYPE_CPAR_Ld_t
#define RTE_TYPE_CPAR_Ld_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(int, TYPEDEF) iMirroringFactorLengthSegmentOne;
  VAR(float, TYPEDEF) fMirroringMaxTangentAngle;
  VAR(float, TYPEDEF) fMirroringMaxTangentAngleSCurve;
  VAR(int, TYPEDEF) iCalibEnableMacSemoForLane;
  VAR(aubConfigData_array_t, TYPEDEF) aubConfigData;
  VAR(float, TYPEDEF) CALIB_CAM_R_START_YAW;
  VAR(float, TYPEDEF) CALIB_CAM_R_START_ROLL;
  VAR(float, TYPEDEF) CALIB_CAM_R_START_PITCH;
  VAR(float, TYPEDEF) CALIB_CAM_R_ABS_DEV_YAW;
  VAR(float, TYPEDEF) CALIB_CAM_R_ABS_DEV_ROLL;
  VAR(float, TYPEDEF) CALIB_CAM_R_MIN_DEV_PITCH;
  VAR(float, TYPEDEF) CALIB_CAM_R_MAX_DEV_PITCH;
  VAR(float, TYPEDEF) CALIB_MAX_DIST_INITAL_MAC_CALIB;
} CPAR_Ld_t;
#endif
#ifndef RTE_TYPE_SR_RTE_ApplicationControlFlow_t
#define RTE_TYPE_SR_RTE_ApplicationControlFlow_t
typedef VAR(unsigned int, TYPEDEF) SR_RTE_ApplicationControlFlow_t;
#endif
#ifndef RTE_TYPE_SrDefaultCountryCode_t
#define RTE_TYPE_SrDefaultCountryCode_t
typedef VAR(unsigned int, TYPEDEF) SrDefaultCountryCode_t;
#endif
#ifndef RTE_TYPE_SrFeatureMaster_t
#define RTE_TYPE_SrFeatureMaster_t
typedef VAR(unsigned int, TYPEDEF) SrFeatureMaster_t;
#endif
#ifndef RTE_TYPE_SrCustomFeature_array_t
#define RTE_TYPE_SrCustomFeature_array_t
typedef VAR(unsigned char, TYPEDEF) SrCustomFeature_array_t[8];
#endif
#ifndef RTE_TYPE_CPAR_SR_RTE_parameters_t
#define RTE_TYPE_CPAR_SR_RTE_parameters_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(boolean, TYPEDEF) enable;
  VAR(SR_RTE_ApplicationControlFlow_t, TYPEDEF) SrControlFlow;
  VAR(SrDefaultCountryCode_t, TYPEDEF) SrDefaultCountryCode;
  VAR(SrFeatureMaster_t, TYPEDEF) SrFeatureMaster;
  VAR(SrCustomFeature_array_t, TYPEDEF) SrCustomFeature;
} CPAR_SR_RTE_parameters_t;
#endif
#ifndef RTE_TYPE_TLR_e_BrightnessMode
#define RTE_TYPE_TLR_e_BrightnessMode
typedef VAR(unsigned char, TYPEDEF) TLR_e_BrightnessMode;
#endif
#ifndef RTE_TYPE_TLR_e_CountryVariation
#define RTE_TYPE_TLR_e_CountryVariation
typedef VAR(unsigned char, TYPEDEF) TLR_e_CountryVariation;
#endif
#ifndef RTE_TYPE_TLR_e_FeatureMaster
#define RTE_TYPE_TLR_e_FeatureMaster
typedef VAR(unsigned char, TYPEDEF) TLR_e_FeatureMaster;
#endif
#ifndef RTE_TYPE_CPAR_TLR_Parameters_t
#define RTE_TYPE_CPAR_TLR_Parameters_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(TLR_e_BrightnessMode, TYPEDEF) e_BrightnessMode;
  VAR(TLR_e_CountryVariation, TYPEDEF) e_CountryVariation;
  VAR(TLR_e_FeatureMaster, TYPEDEF) u_FeatureMaster;
} CPAR_TLR_Parameters_t;
#endif
#ifndef RTE_TYPE_TsaCountryVariationVehicle_t
#define RTE_TYPE_TsaCountryVariationVehicle_t
typedef VAR(unsigned char, TYPEDEF) TsaCountryVariationVehicle_t;
#endif
#ifndef RTE_TYPE_TsaNavigationInputIdentifier_t
#define RTE_TYPE_TsaNavigationInputIdentifier_t
typedef VAR(unsigned char, TYPEDEF) TsaNavigationInputIdentifier_t;
#endif
#ifndef RTE_TYPE_TsaRteEndSignDisplayCondition_t
#define RTE_TYPE_TsaRteEndSignDisplayCondition_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) uDisplayTime;
  VAR(unsigned char, TYPEDEF) uDisplayDistance;
} TsaRteEndSignDisplayCondition_t;
#endif
#ifndef RTE_TYPE_TsaRteExpirationDistance_t
#define RTE_TYPE_TsaRteExpirationDistance_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) uMaxGroupSpeed;
  VAR(unsigned char, TYPEDEF) uExpirationDistance;
} TsaRteExpirationDistance_t;
#endif
#ifndef RTE_TYPE_aSlExpTabHwMph_array_t
#define RTE_TYPE_aSlExpTabHwMph_array_t
typedef VAR(TsaRteExpirationDistance_t, TYPEDEF) aSlExpTabHwMph_array_t[5];
#endif
#ifndef RTE_TYPE_aSlExpTabNhwKmh
#define RTE_TYPE_aSlExpTabNhwKmh
typedef struct
{
  VAR(unsigned char, TYPEDEF) uMaxGroupSpeed;
  VAR(unsigned char, TYPEDEF) uExpirationDistance;
} aSlExpTabNhwKmh;
#endif
#ifndef RTE_TYPE_aSlExpTabNhwMph_array_t
#define RTE_TYPE_aSlExpTabNhwMph_array_t
typedef VAR(TsaRteExpirationDistance_t, TYPEDEF) aSlExpTabNhwMph_array_t[5];
#endif
#ifndef RTE_TYPE_aSlExpTabHwKmh
#define RTE_TYPE_aSlExpTabHwKmh
typedef struct
{
  VAR(unsigned char, TYPEDEF) uMaxGroupSpeed;
  VAR(unsigned char, TYPEDEF) uExpirationDistance;
} aSlExpTabHwKmh;
#endif
#ifndef RTE_TYPE_CPAR_TSA_RTE_parameters_t
#define RTE_TYPE_CPAR_TSA_RTE_parameters_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(boolean, TYPEDEF) enable;
  VAR(TsaCountryVariationVehicle_t, TYPEDEF) TsaCountryVariationVehicle;
  VAR(TsaNavigationInputIdentifier_t, TYPEDEF) TsaNavigationInputIdentifier;
  VAR(boolean, TYPEDEF) wwaEnable;
  VAR(TsaRteEndSignDisplayCondition_t, TYPEDEF) sEndSpeedLimit;
  VAR(TsaRteEndSignDisplayCondition_t, TYPEDEF) sEndHighway;
  VAR(TsaRteEndSignDisplayCondition_t, TYPEDEF) sEndMotorway;
  VAR(TsaRteEndSignDisplayCondition_t, TYPEDEF) sEndCity;
  VAR(TsaRteEndSignDisplayCondition_t, TYPEDEF) sEndPlaystreet;
  VAR(TsaRteEndSignDisplayCondition_t, TYPEDEF) sEndGeneral;
  VAR(TsaRteEndSignDisplayCondition_t, TYPEDEF) sEndNoPassing;
  VAR(unsigned short, TYPEDEF) uNoPassingExpDistanceHw;
  VAR(unsigned short, TYPEDEF) uNoPassingExpDistanceNhw;
  VAR(unsigned short, TYPEDEF) uSignExpirationDistanceFactor;
  VAR(aSlExpTabHwMph_array_t, TYPEDEF) aSlExpTabHwMph;
  VAR(aSlExpTabNhwKmh, TYPEDEF) aSlExpTabNhwKmh[5];
  VAR(aSlExpTabNhwMph_array_t, TYPEDEF) aSlExpTabNhwMph;
  VAR(aSlExpTabHwKmh, TYPEDEF) aSlExpTabHwKmh[5];
} CPAR_TSA_RTE_parameters_t;
#endif
#ifndef RTE_TYPE_UDW_ENABLE_t
#define RTE_TYPE_UDW_ENABLE_t
typedef VAR(unsigned char, TYPEDEF) UDW_ENABLE_t;
#endif
#ifndef RTE_TYPE_UDW_SIZE_ANALYSIS_WINDOW_t
#define RTE_TYPE_UDW_SIZE_ANALYSIS_WINDOW_t
typedef VAR(unsigned char, TYPEDEF) UDW_SIZE_ANALYSIS_WINDOW_t;
#endif
#ifndef RTE_TYPE_UDW_Parameters_t
#define RTE_TYPE_UDW_Parameters_t
typedef struct
{
  VAR(UDW_ENABLE_t, TYPEDEF) UDW_ENABLE;
  VAR(unsigned char, TYPEDEF) UDW_SPEED_LOW_THRESHOLD_ACTIVATION;
  VAR(unsigned char, TYPEDEF) UDW_SPEED_HIGH_THRESHOLD_ACTIVATION;
  VAR(unsigned char, TYPEDEF) UDW_SPEED_LOW_THRESHOLD_DEACTIVATION;
  VAR(unsigned char, TYPEDEF) UDW_SPEED_HIGH_THRESHOLD_DEACTIVATION;
  VAR(UDW_SIZE_ANALYSIS_WINDOW_t, TYPEDEF) UDW_SIZE_ANALYSIS_WINDOW;
  VAR(unsigned int, TYPEDEF) UDW_SIZE_SUPPRESS_OWN_ALARM_WINDOW;
  VAR(unsigned int, TYPEDEF) UDW_SIZE_SUPPRESS_OTHER_ALARMS_WINDOW;
  VAR(unsigned int, TYPEDEF) UDW_SIZE_SUPPRESS_ACTIVE_DRIVER_WINDOW;
  VAR(unsigned char, TYPEDEF) UDW_MIN_NR_LDA_WARNINGS;
  VAR(unsigned int, TYPEDEF) UDW_SIZE_LDA_ALARM_WINDOW_HIGH;
  VAR(unsigned int, TYPEDEF) UDW_SIZE_LDA_ALARM_WINDOW_LOW;
  VAR(unsigned int, TYPEDEF) UDW_SIZE_MAX_DISPLAY_ALARM;
  VAR(unsigned int, TYPEDEF) UDW_SIZE_MIN_DISPLAY_ALARM;
  VAR(unsigned short, TYPEDEF) UDW_SIZE_BUZZER_ALARM;
  VAR(unsigned char, TYPEDEF) UDW_MIN_ATTENTION_WARNING_THRESHOLD;
  VAR(unsigned char, TYPEDEF) UDW_MAX_WARNING_DRIVING_SESSION;
  VAR(unsigned int, TYPEDEF) UDW_SIZE_MAX_BREAK_WINDOW;
  VAR(float, TYPEDEF) UDW_CFG_SENS_PCG_LOW;
  VAR(float, TYPEDEF) UDW_CFG_SENS_PCG_MEDIUM;
  VAR(float, TYPEDEF) UDW_CFG_SENS_PCG_HIGH;
  VAR(float, TYPEDEF) UDW_CFG_SENS_PCG_VERY_HIGH;
} UDW_Parameters_t;
#endif
#ifndef RTE_TYPE_DAW_Parameters_t
#define RTE_TYPE_DAW_Parameters_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) U8_MIN_DAW_VEHICLE_WIDTH;
  VAR(unsigned char, TYPEDEF) U8_MIN_DAW_ACT_SPEED;
  VAR(unsigned char, TYPEDEF) U8_MIN_DAW_DEACT_SPEED;
  VAR(unsigned char, TYPEDEF) U8_MAX_DAW_ACT_SPEED;
  VAR(unsigned char, TYPEDEF) U8_MAX_DAW_DEACT_SPEED;
  VAR(unsigned char, TYPEDEF) U8_MIN_DAW_INIT_WARN_PREVENTION_TIME_MIN;
  VAR(unsigned char, TYPEDEF) U8_MIN_DAW_RE_WARN_PREVENTION_TIME_MIN;
  VAR(unsigned char, TYPEDEF) U8_MIN_DAW_STANDBY_TRANS_TIME_MIN;
  VAR(unsigned char, TYPEDEF) U8_MIN_DAW_EARLY_ZIGZAG_LAT_THR_STR;
  VAR(unsigned char, TYPEDEF) U8_MIN_DAW_EARLY_ZIGZAG_LAT_THR_CURV;
  VAR(unsigned char, TYPEDEF) U8_MIN_DAW_EARLY_CCROSS_THR;
  VAR(unsigned char, TYPEDEF) U8_MIN_DAW_NORMAL_ZIGZAG_LAT_THR_STR;
  VAR(unsigned char, TYPEDEF) U8_MIN_DAW_NORMAL_ZIGZAG_LAT_THR_CURV;
  VAR(unsigned char, TYPEDEF) U8_MIN_DAW_NORMAL_CCROSS_THR;
  VAR(unsigned char, TYPEDEF) U8_MIN_DAW_LKA_ZIGZAG_LAT_THR_STR;
  VAR(unsigned char, TYPEDEF) U8_MIN_DAW_LKA_ZIGZAG_LAT_THR_CURV;
  VAR(unsigned char, TYPEDEF) U8_MIN_DAW_LKA_CCROSS_THR;
  VAR(unsigned char, TYPEDEF) U8_MIN_DAW_SWDB_CORR_TORQUE;
  VAR(unsigned char, TYPEDEF) U8_MIN_DAW_TQDB_LAT_THR;
} DAW_Parameters_t;
#endif
#ifndef RTE_TYPE_CPAR_UDW_Parameters_t
#define RTE_TYPE_CPAR_UDW_Parameters_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(UDW_Parameters_t, TYPEDEF) UDW_Parameters;
  VAR(DAW_Parameters_t, TYPEDEF) DAW_Parameters;
} CPAR_UDW_Parameters_t;
#endif
#ifndef RTE_TYPE_ucPredictState_t
#define RTE_TYPE_ucPredictState_t
typedef VAR(unsigned char, TYPEDEF) ucPredictState_t;
#endif
#ifndef RTE_TYPE_CPCustOutPredTraj_t
#define RTE_TYPE_CPCustOutPredTraj_t
typedef struct
{
  VAR(float, TYPEDEF) fCurveC0;
  VAR(float, TYPEDEF) fCurveC1;
  VAR(float, TYPEDEF) fAngle;
  VAR(ucPredictState_t, TYPEDEF) ucPredictState;
} CPCustOutPredTraj_t;
#endif
#ifndef RTE_TYPE_SlaSignType_t_e
#define RTE_TYPE_SlaSignType_t_e
typedef VAR(unsigned char, TYPEDEF) SlaSignType_t_e;
#endif
#ifndef RTE_TYPE_SlaSignVal_t_e
#define RTE_TYPE_SlaSignVal_t_e
typedef VAR(unsigned char, TYPEDEF) SlaSignVal_t_e;
#endif
#ifndef RTE_TYPE_SlaSpeedUnit_t_e
#define RTE_TYPE_SlaSpeedUnit_t_e
typedef VAR(unsigned char, TYPEDEF) SlaSpeedUnit_t_e;
#endif
#ifndef RTE_TYPE_SlaSignWarning_t_e
#define RTE_TYPE_SlaSignWarning_t_e
typedef VAR(unsigned char, TYPEDEF) SlaSignWarning_t_e;
#endif
#ifndef RTE_TYPE_SLASpdLim_t
#define RTE_TYPE_SLASpdLim_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) spdLmtValue;
  VAR(unsigned char, TYPEDEF) uConfidence;
  VAR(SlaSignType_t_e, TYPEDEF) signType;
  VAR(SlaSignVal_t_e, TYPEDEF) spdLmtValidity;
  VAR(SlaSpeedUnit_t_e, TYPEDEF) spdUnit;
  VAR(SlaSignWarning_t_e, TYPEDEF) warning;
} SLASpdLim_t;
#endif
#ifndef RTE_TYPE_spdLmt_array_t
#define RTE_TYPE_spdLmt_array_t
typedef VAR(SLASpdLim_t, TYPEDEF) spdLmt_array_t[2];
#endif
#ifndef RTE_TYPE_CamSLAInputData_t
#define RTE_TYPE_CamSLAInputData_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(spdLmt_array_t, TYPEDEF) spdLmt;
} CamSLAInputData_t;
#endif
#ifndef RTE_TYPE_Camera_t
#define RTE_TYPE_Camera_t
typedef struct
{
  VAR(float, TYPEDEF) fRatio;
  VAR(float, TYPEDEF) fQuality;
} Camera_t;
#endif
#ifndef RTE_TYPE_CarModSts_t
#define RTE_TYPE_CarModSts_t
typedef VAR(unsigned char, TYPEDEF) CarModSts_t;
#endif
#ifndef RTE_TYPE_CippErrorCode_t
#define RTE_TYPE_CippErrorCode_t
typedef VAR(unsigned char, TYPEDEF) CippErrorCode_t;
#endif
#ifndef RTE_TYPE_CippHistogram_array_t
#define RTE_TYPE_CippHistogram_array_t
typedef VAR(unsigned short, TYPEDEF) CippHistogram_array_t[256];
#endif
#ifndef RTE_TYPE_CippRteImageStatistics_t
#define RTE_TYPE_CippRteImageStatistics_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(CippHistogram_array_t, TYPEDEF) aHistogramAboveHorizon;
  VAR(CippHistogram_array_t, TYPEDEF) aHistogramBelowHorizon;
  VAR(CippHistogram_array_t, TYPEDEF) aHistogramCompleteImage;
} CippRteImageStatistics_t;
#endif
#ifndef RTE_TYPE_CippWhiteBalanceResult_t
#define RTE_TYPE_CippWhiteBalanceResult_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(int, TYPEDEF) s_WbStaticRed;
  VAR(int, TYPEDEF) s_WbStaticBlue;
  VAR(int, TYPEDEF) s_WbDynMeasRed;
  VAR(int, TYPEDEF) s_WbDynMeasBlue;
  VAR(int, TYPEDEF) s_WbDynUsedRed;
  VAR(int, TYPEDEF) s_WbDynUsedBlue;
  VAR(int, TYPEDEF) s_WbDynConfidenceRed;
  VAR(int, TYPEDEF) s_WbDynConfidenceBlue;
  VAR(float, TYPEDEF) f_WbRatioStaticRed;
  VAR(float, TYPEDEF) f_WbRatioStaticBlue;
  VAR(float, TYPEDEF) f_WbRatioDynRed;
  VAR(float, TYPEDEF) f_WbRatioDynBlue;
  VAR(float, TYPEDEF) f_WbRatioUsedRed;
  VAR(float, TYPEDEF) f_WbRatioUsedBlue;
} CippWhiteBalanceResult_t;
#endif
#ifndef RTE_TYPE_RTE_HLAR_CityState
#define RTE_TYPE_RTE_HLAR_CityState
typedef VAR(unsigned char, TYPEDEF) RTE_HLAR_CityState;
#endif
#ifndef RTE_TYPE_CityState
#define RTE_TYPE_CityState
typedef VAR(RTE_HLAR_CityState, TYPEDEF) CityState;
#endif
#ifndef RTE_TYPE_ClassConfidence
#define RTE_TYPE_ClassConfidence
typedef VAR(unsigned char, TYPEDEF) ClassConfidence;
#endif
#ifndef RTE_TYPE_ClosestObj_Ang
#define RTE_TYPE_ClosestObj_Ang
typedef VAR(float, TYPEDEF) ClosestObj_Ang;
#endif
#ifndef RTE_TYPE_ClosestObj_Dist
#define RTE_TYPE_ClosestObj_Dist
typedef VAR(float, TYPEDEF) ClosestObj_Dist;
#endif
#ifndef RTE_TYPE_ClosestObj_DistReliability
#define RTE_TYPE_ClosestObj_DistReliability
typedef VAR(RTE_HLA_DistReliability, TYPEDEF) ClosestObj_DistReliability;
#endif
#ifndef RTE_TYPE_ClosestObj_DistState
#define RTE_TYPE_ClosestObj_DistState
typedef VAR(RTE_HLAF_DistState, TYPEDEF) ClosestObj_DistState;
#endif
#ifndef RTE_TYPE_ClosestObj_ObjId
#define RTE_TYPE_ClosestObj_ObjId
typedef VAR(unsigned char, TYPEDEF) ClosestObj_ObjId;
#endif
#ifndef RTE_TYPE_ClosestObj_Status
#define RTE_TYPE_ClosestObj_Status
typedef VAR(RTE_HLAF_ObjStatus, TYPEDEF) ClosestObj_Status;
#endif
#ifndef RTE_TYPE_ClothoidParameters_t
#define RTE_TYPE_ClothoidParameters_t
typedef struct
{
  VAR(float, TYPEDEF) f_YawAngle;
  VAR(float, TYPEDEF) f_Curvature;
  VAR(float, TYPEDEF) f_ClothoidParam1;
  VAR(float, TYPEDEF) f_TransitionPoint;
  VAR(float, TYPEDEF) f_ClothoidParam2;
} ClothoidParameters_t;
#endif
#ifndef RTE_TYPE_CluPedlPsdSafe2
#define RTE_TYPE_CluPedlPsdSafe2
typedef struct
{
  VAR(boolean, TYPEDEF) CluPedlPsd;
  VAR(boolean, TYPEDEF) CluPedlPsdSts;
  VAR(uint8_t, TYPEDEF) CluPedlPsdCntr;
  VAR(uint8_t, TYPEDEF) CluPedlPsdChks;
} CluPedlPsdSafe2;
#endif
#ifndef RTE_TYPE_CntrOfGravHeight
#define RTE_TYPE_CntrOfGravHeight
typedef VAR(float, TYPEDEF) CntrOfGravHeight;
#endif
#ifndef RTE_TYPE_CodingValue_t
#define RTE_TYPE_CodingValue_t
typedef VAR(unsigned int, TYPEDEF) CodingValue_t;
#endif
#ifndef RTE_TYPE_CodingPar_t
#define RTE_TYPE_CodingPar_t
typedef struct
{
  VAR(CodingValue_t, TYPEDEF) CodingValue;
  VAR(boolean, TYPEDEF) Valid;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
} CodingPar_t;
#endif
#ifndef RTE_TYPE_Com_EpsatCtrlAvailabilityStatus_Status
#define RTE_TYPE_Com_EpsatCtrlAvailabilityStatus_Status
typedef VAR(unsigned char, TYPEDEF) Com_EpsatCtrlAvailabilityStatus_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_ACCMode
#define RTE_TYPE_Com_Receive_ACCMode
typedef VAR(unsigned char, TYPEDEF) Com_Receive_ACCMode;
#endif
#ifndef RTE_TYPE_Com_Receive_ACCMode_Status
#define RTE_TYPE_Com_Receive_ACCMode_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_ACCMode_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_ACC_HostLaneLeftStatus
#define RTE_TYPE_Com_Receive_ACC_HostLaneLeftStatus
typedef VAR(unsigned char, TYPEDEF) Com_Receive_ACC_HostLaneLeftStatus;
#endif
#ifndef RTE_TYPE_Com_Receive_ACC_HostLaneRightStatus
#define RTE_TYPE_Com_Receive_ACC_HostLaneRightStatus
typedef VAR(unsigned char, TYPEDEF) Com_Receive_ACC_HostLaneRightStatus;
#endif
#ifndef RTE_TYPE_Com_Receive_AccIaccHWAMode
#define RTE_TYPE_Com_Receive_AccIaccHWAMode
typedef VAR(unsigned char, TYPEDEF) Com_Receive_AccIaccHWAMode;
#endif
#ifndef RTE_TYPE_Com_Receive_AccIaccHWAMode_Status
#define RTE_TYPE_Com_Receive_AccIaccHWAMode_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_AccIaccHWAMode_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_AdsUDLCStatus
#define RTE_TYPE_Com_Receive_AdsUDLCStatus
typedef VAR(unsigned char, TYPEDEF) Com_Receive_AdsUDLCStatus;
#endif
#ifndef RTE_TYPE_Com_Receive_AdsUDLCStatus_Status
#define RTE_TYPE_Com_Receive_AdsUDLCStatus_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_AdsUDLCStatus_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_BCM_BrakeLampError
#define RTE_TYPE_Com_Receive_BCM_BrakeLampError
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BCM_BrakeLampError;
#endif
#ifndef RTE_TYPE_Com_Receive_BCM_BrakeLampError_Status
#define RTE_TYPE_Com_Receive_BCM_BrakeLampError_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BCM_BrakeLampError_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_BCM_TurnLightSwitchSts
#define RTE_TYPE_Com_Receive_BCM_TurnLightSwitchSts
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BCM_TurnLightSwitchSts;
#endif
#ifndef RTE_TYPE_Com_Receive_BCM_TurnLightSwitchSts_Status
#define RTE_TYPE_Com_Receive_BCM_TurnLightSwitchSts_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BCM_TurnLightSwitchSts_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_BcmAutHeadLiSts
#define RTE_TYPE_Com_Receive_BcmAutHeadLiSts
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BcmAutHeadLiSts;
#endif
#ifndef RTE_TYPE_Com_Receive_BcmAutHeadLiSts_Status
#define RTE_TYPE_Com_Receive_BcmAutHeadLiSts_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BcmAutHeadLiSts_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_BcmDrvrDoorSts
#define RTE_TYPE_Com_Receive_BcmDrvrDoorSts
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BcmDrvrDoorSts;
#endif
#ifndef RTE_TYPE_Com_Receive_BcmDrvrDoorSts_Status
#define RTE_TYPE_Com_Receive_BcmDrvrDoorSts_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BcmDrvrDoorSts_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_BcmEmgyLiSts
#define RTE_TYPE_Com_Receive_BcmEmgyLiSts
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BcmEmgyLiSts;
#endif
#ifndef RTE_TYPE_Com_Receive_BcmEmgyLiSts_Status
#define RTE_TYPE_Com_Receive_BcmEmgyLiSts_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BcmEmgyLiSts_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_BcmFrntFogLmpSts
#define RTE_TYPE_Com_Receive_BcmFrntFogLmpSts
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BcmFrntFogLmpSts;
#endif
#ifndef RTE_TYPE_Com_Receive_BcmFrntFogLmpSts_Status
#define RTE_TYPE_Com_Receive_BcmFrntFogLmpSts_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BcmFrntFogLmpSts_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_BcmFrntWiperSts
#define RTE_TYPE_Com_Receive_BcmFrntWiperSts
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BcmFrntWiperSts;
#endif
#ifndef RTE_TYPE_Com_Receive_BcmHiBeamSts
#define RTE_TYPE_Com_Receive_BcmHiBeamSts
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BcmHiBeamSts;
#endif
#ifndef RTE_TYPE_Com_Receive_BcmHiBeamSts_Status
#define RTE_TYPE_Com_Receive_BcmHiBeamSts_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BcmHiBeamSts_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_BcmLeReDoorSts
#define RTE_TYPE_Com_Receive_BcmLeReDoorSts
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BcmLeReDoorSts;
#endif
#ifndef RTE_TYPE_Com_Receive_BcmLeReDoorSts_Status
#define RTE_TYPE_Com_Receive_BcmLeReDoorSts_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BcmLeReDoorSts_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_BcmLoBeamSts
#define RTE_TYPE_Com_Receive_BcmLoBeamSts
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BcmLoBeamSts;
#endif
#ifndef RTE_TYPE_Com_Receive_BcmLoBeamSts_Status
#define RTE_TYPE_Com_Receive_BcmLoBeamSts_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BcmLoBeamSts_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_BcmPassDoorSts
#define RTE_TYPE_Com_Receive_BcmPassDoorSts
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BcmPassDoorSts;
#endif
#ifndef RTE_TYPE_Com_Receive_BcmReFoglmpSts
#define RTE_TYPE_Com_Receive_BcmReFoglmpSts
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BcmReFoglmpSts;
#endif
#ifndef RTE_TYPE_Com_Receive_BcmReFoglmpSts_Status
#define RTE_TYPE_Com_Receive_BcmReFoglmpSts_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BcmReFoglmpSts_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_BcmRiReDoorSts
#define RTE_TYPE_Com_Receive_BcmRiReDoorSts
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BcmRiReDoorSts;
#endif
#ifndef RTE_TYPE_Com_Receive_BcmRiReDoorSts_Status
#define RTE_TYPE_Com_Receive_BcmRiReDoorSts_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BcmRiReDoorSts_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_BcmTurnIndcrLe
#define RTE_TYPE_Com_Receive_BcmTurnIndcrLe
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BcmTurnIndcrLe;
#endif
#ifndef RTE_TYPE_Com_Receive_BcmTurnIndcrRi
#define RTE_TYPE_Com_Receive_BcmTurnIndcrRi
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BcmTurnIndcrRi;
#endif
#ifndef RTE_TYPE_Com_Receive_BrakePressureSimulator
#define RTE_TYPE_Com_Receive_BrakePressureSimulator
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BrakePressureSimulator;
#endif
#ifndef RTE_TYPE_Com_Receive_BrakePressureSimulator_Status
#define RTE_TYPE_Com_Receive_BrakePressureSimulator_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_BrakePressureSimulator_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EPS_APA_EpasFAILED
#define RTE_TYPE_Com_Receive_EPS_APA_EpasFAILED
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EPS_APA_EpasFAILED;
#endif
#ifndef RTE_TYPE_Com_Receive_EPS_APA_EpasFAILED_Status
#define RTE_TYPE_Com_Receive_EPS_APA_EpasFAILED_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EPS_APA_EpasFAILED_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EPS_ActualMotorTorq
#define RTE_TYPE_Com_Receive_EPS_ActualMotorTorq
typedef VAR(float, TYPEDEF) Com_Receive_EPS_ActualMotorTorq;
#endif
#ifndef RTE_TYPE_Com_Receive_EPS_ActualMotorTorq_Status
#define RTE_TYPE_Com_Receive_EPS_ActualMotorTorq_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EPS_ActualMotorTorq_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EPS_ActualTorsionBarTorq
#define RTE_TYPE_Com_Receive_EPS_ActualTorsionBarTorq
typedef VAR(float, TYPEDEF) Com_Receive_EPS_ActualTorsionBarTorq;
#endif
#ifndef RTE_TYPE_Com_Receive_EPS_ActualTorsionBarTorq_Status
#define RTE_TYPE_Com_Receive_EPS_ActualTorsionBarTorq_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EPS_ActualTorsionBarTorq_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EPS_MeasuredTorsionBarTorqValid
#define RTE_TYPE_Com_Receive_EPS_MeasuredTorsionBarTorqValid
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EPS_MeasuredTorsionBarTorqValid;
#endif
#ifndef RTE_TYPE_Com_Receive_EPS_Pinionang_Valid
#define RTE_TYPE_Com_Receive_EPS_Pinionang_Valid
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EPS_Pinionang_Valid;
#endif
#ifndef RTE_TYPE_Com_Receive_EPS_fault_state
#define RTE_TYPE_Com_Receive_EPS_fault_state
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EPS_fault_state;
#endif
#ifndef RTE_TYPE_Com_Receive_EPS_fault_state_Status
#define RTE_TYPE_Com_Receive_EPS_fault_state_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EPS_fault_state_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_ESP_LatAccelValid
#define RTE_TYPE_Com_Receive_ESP_LatAccelValid
typedef VAR(unsigned char, TYPEDEF) Com_Receive_ESP_LatAccelValid;
#endif
#ifndef RTE_TYPE_Com_Receive_ESP_LongAccelValid
#define RTE_TYPE_Com_Receive_ESP_LongAccelValid
typedef VAR(unsigned char, TYPEDEF) Com_Receive_ESP_LongAccelValid;
#endif
#ifndef RTE_TYPE_Com_Receive_ESP_YawRateValid
#define RTE_TYPE_Com_Receive_ESP_YawRateValid
typedef VAR(unsigned char, TYPEDEF) Com_Receive_ESP_YawRateValid;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsConcussAvailabilityStatus
#define RTE_TYPE_Com_Receive_EpsConcussAvailabilityStatus
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EpsConcussAvailabilityStatus;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsConcussAvailabilityStatus_Status
#define RTE_TYPE_Com_Receive_EpsConcussAvailabilityStatus_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EpsConcussAvailabilityStatus_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsFaild
#define RTE_TYPE_Com_Receive_EpsFaild
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EpsFaild;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsFaild_Status
#define RTE_TYPE_Com_Receive_EpsFaild_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EpsFaild_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsIACCabortreason
#define RTE_TYPE_Com_Receive_EpsIACCabortreason
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EpsIACCabortreason;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsIACCabortreason_Status
#define RTE_TYPE_Com_Receive_EpsIACCabortreason_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EpsIACCabortreason_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsLatCtrlActive
#define RTE_TYPE_Com_Receive_EpsLatCtrlActive
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EpsLatCtrlActive;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsLatCtrlActive_Status
#define RTE_TYPE_Com_Receive_EpsLatCtrlActive_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EpsLatCtrlActive_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsLatCtrlAvailabilityStatus
#define RTE_TYPE_Com_Receive_EpsLatCtrlAvailabilityStatus
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EpsLatCtrlAvailabilityStatus;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsLatCtrlAvailabilityStatus_Status
#define RTE_TYPE_Com_Receive_EpsLatCtrlAvailabilityStatus_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EpsLatCtrlAvailabilityStatus_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsMeasuredTorsionBarTorq_Status
#define RTE_TYPE_Com_Receive_EpsMeasuredTorsionBarTorq_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EpsMeasuredTorsionBarTorq_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsMeasuredTorsionBarTorque
#define RTE_TYPE_Com_Receive_EpsMeasuredTorsionBarTorque
typedef VAR(float, TYPEDEF) Com_Receive_EpsMeasuredTorsionBarTorque;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsMeasuredTorsionBarTorque_Status
#define RTE_TYPE_Com_Receive_EpsMeasuredTorsionBarTorque_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EpsMeasuredTorsionBarTorque_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsPinionang
#define RTE_TYPE_Com_Receive_EpsPinionang
typedef VAR(float, TYPEDEF) Com_Receive_EpsPinionang;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsPinionang_Status
#define RTE_TYPE_Com_Receive_EpsPinionang_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EpsPinionang_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsSasCalSts
#define RTE_TYPE_Com_Receive_EpsSasCalSts
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EpsSasCalSts;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsSasCalSts_Status
#define RTE_TYPE_Com_Receive_EpsSasCalSts_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EpsSasCalSts_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsSasSteerAgVld
#define RTE_TYPE_Com_Receive_EpsSasSteerAgVld
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EpsSasSteerAgVld;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsSasSteerAg_Status
#define RTE_TYPE_Com_Receive_EpsSasSteerAg_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EpsSasSteerAg_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsSteerAgRate
#define RTE_TYPE_Com_Receive_EpsSteerAgRate
typedef VAR(float, TYPEDEF) Com_Receive_EpsSteerAgRate;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsSteerAgRate_Status
#define RTE_TYPE_Com_Receive_EpsSteerAgRate_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EpsSteerAgRate_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsSteerAgSensFilr
#define RTE_TYPE_Com_Receive_EpsSteerAgSensFilr
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EpsSteerAgSensFilr;
#endif
#ifndef RTE_TYPE_Com_Receive_EpsSteerAgSensFilr_Status
#define RTE_TYPE_Com_Receive_EpsSteerAgSensFilr_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EpsSteerAgSensFilr_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EspABAactive
#define RTE_TYPE_Com_Receive_EspABAactive
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspABAactive;
#endif
#ifndef RTE_TYPE_Com_Receive_EspABAactive_Status
#define RTE_TYPE_Com_Receive_EspABAactive_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspABAactive_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EspABAavailable
#define RTE_TYPE_Com_Receive_EspABAavailable
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspABAavailable;
#endif
#ifndef RTE_TYPE_Com_Receive_EspABAavailable_Status
#define RTE_TYPE_Com_Receive_EspABAavailable_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspABAavailable_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EspAEBAvailable
#define RTE_TYPE_Com_Receive_EspAEBAvailable
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspAEBAvailable;
#endif
#ifndef RTE_TYPE_Com_Receive_EspAEBAvailable_Status
#define RTE_TYPE_Com_Receive_EspAEBAvailable_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspAEBAvailable_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EspAEBdecActive
#define RTE_TYPE_Com_Receive_EspAEBdecActive
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspAEBdecActive;
#endif
#ifndef RTE_TYPE_Com_Receive_EspAEBdecActive_Status
#define RTE_TYPE_Com_Receive_EspAEBdecActive_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspAEBdecActive_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EspAWBactive
#define RTE_TYPE_Com_Receive_EspAWBactive
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspAWBactive;
#endif
#ifndef RTE_TYPE_Com_Receive_EspAWBactive_Status
#define RTE_TYPE_Com_Receive_EspAWBactive_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspAWBactive_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EspAWBavailable
#define RTE_TYPE_Com_Receive_EspAWBavailable
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspAWBavailable;
#endif
#ifndef RTE_TYPE_Com_Receive_EspAWBavailable_Status
#define RTE_TYPE_Com_Receive_EspAWBavailable_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspAWBavailable_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EspAbsActv
#define RTE_TYPE_Com_Receive_EspAbsActv
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspAbsActv;
#endif
#ifndef RTE_TYPE_Com_Receive_EspAbsActv_Status
#define RTE_TYPE_Com_Receive_EspAbsActv_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspAbsActv_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EspAbsFailr
#define RTE_TYPE_Com_Receive_EspAbsFailr
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspAbsFailr;
#endif
#ifndef RTE_TYPE_Com_Receive_EspAbsFailr_Status
#define RTE_TYPE_Com_Receive_EspAbsFailr_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspAbsFailr_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EspActvSts
#define RTE_TYPE_Com_Receive_EspActvSts
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspActvSts;
#endif
#ifndef RTE_TYPE_Com_Receive_EspActvSts_Status
#define RTE_TYPE_Com_Receive_EspActvSts_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspActvSts_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EspEbdFailr
#define RTE_TYPE_Com_Receive_EspEbdFailr
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspEbdFailr;
#endif
#ifndef RTE_TYPE_Com_Receive_EspEbdFailr_Status
#define RTE_TYPE_Com_Receive_EspEbdFailr_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspEbdFailr_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EspLatAccel
#define RTE_TYPE_Com_Receive_EspLatAccel
typedef VAR(float, TYPEDEF) Com_Receive_EspLatAccel;
#endif
#ifndef RTE_TYPE_Com_Receive_EspLatAccel_Status
#define RTE_TYPE_Com_Receive_EspLatAccel_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspLatAccel_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EspLongAccel
#define RTE_TYPE_Com_Receive_EspLongAccel
typedef VAR(float, TYPEDEF) Com_Receive_EspLongAccel;
#endif
#ifndef RTE_TYPE_Com_Receive_EspLongAccel_Status
#define RTE_TYPE_Com_Receive_EspLongAccel_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspLongAccel_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EspPrefillActiv
#define RTE_TYPE_Com_Receive_EspPrefillActiv
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspPrefillActiv;
#endif
#ifndef RTE_TYPE_Com_Receive_EspPrefillActive_Status
#define RTE_TYPE_Com_Receive_EspPrefillActive_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspPrefillActive_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EspPrefillAvailable_Status
#define RTE_TYPE_Com_Receive_EspPrefillAvailable_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspPrefillAvailable_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EspTcsActvSts
#define RTE_TYPE_Com_Receive_EspTcsActvSts
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspTcsActvSts;
#endif
#ifndef RTE_TYPE_Com_Receive_EspTcsActvSts_Status
#define RTE_TYPE_Com_Receive_EspTcsActvSts_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspTcsActvSts_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EspTcsFailr
#define RTE_TYPE_Com_Receive_EspTcsFailr
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspTcsFailr;
#endif
#ifndef RTE_TYPE_Com_Receive_EspTcsFailr_Status
#define RTE_TYPE_Com_Receive_EspTcsFailr_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspTcsFailr_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EspVdcActvSts
#define RTE_TYPE_Com_Receive_EspVdcActvSts
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspVdcActvSts;
#endif
#ifndef RTE_TYPE_Com_Receive_EspVdcActvSts_Status
#define RTE_TYPE_Com_Receive_EspVdcActvSts_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspVdcActvSts_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EspVehSpd
#define RTE_TYPE_Com_Receive_EspVehSpd
typedef VAR(float, TYPEDEF) Com_Receive_EspVehSpd;
#endif
#ifndef RTE_TYPE_Com_Receive_EspVehSpdVld
#define RTE_TYPE_Com_Receive_EspVehSpdVld
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspVehSpdVld;
#endif
#ifndef RTE_TYPE_Com_Receive_EspVehSpd_Status
#define RTE_TYPE_Com_Receive_EspVehSpd_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspVehSpd_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_EspYawRate
#define RTE_TYPE_Com_Receive_EspYawRate
typedef VAR(float, TYPEDEF) Com_Receive_EspYawRate;
#endif
#ifndef RTE_TYPE_Com_Receive_EspYawRate_Status
#define RTE_TYPE_Com_Receive_EspYawRate_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_EspYawRate_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_FR_RadarFailureStatus
#define RTE_TYPE_Com_Receive_FR_RadarFailureStatus
typedef VAR(unsigned char, TYPEDEF) Com_Receive_FR_RadarFailureStatus;
#endif
#ifndef RTE_TYPE_Com_Receive_FR_RadarFailureStatus_Status
#define RTE_TYPE_Com_Receive_FR_RadarFailureStatus_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_FR_RadarFailureStatus_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_FRadarCalibrationStatus
#define RTE_TYPE_Com_Receive_FRadarCalibrationStatus
typedef VAR(unsigned char, TYPEDEF) Com_Receive_FRadarCalibrationStatus;
#endif
#ifndef RTE_TYPE_Com_Receive_FRadarCalibrationStatus_Status
#define RTE_TYPE_Com_Receive_FRadarCalibrationStatus_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_FRadarCalibrationStatus_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_IBCU_PFSBrakePressureValid
#define RTE_TYPE_Com_Receive_IBCU_PFSBrakePressureValid
typedef VAR(unsigned char, TYPEDEF) Com_Receive_IBCU_PFSBrakePressureValid;
#endif
#ifndef RTE_TYPE_Com_Receive_IP_DISFail
#define RTE_TYPE_Com_Receive_IP_DISFail
typedef VAR(unsigned char, TYPEDEF) Com_Receive_IP_DISFail;
#endif
#ifndef RTE_TYPE_Com_Receive_IP_DISFail_Status
#define RTE_TYPE_Com_Receive_IP_DISFail_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_IP_DISFail_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_IP_QDashACCFail
#define RTE_TYPE_Com_Receive_IP_QDashACCFail
typedef VAR(unsigned char, TYPEDEF) Com_Receive_IP_QDashACCFail;
#endif
#ifndef RTE_TYPE_Com_Receive_IP_QDashACCFail_Status
#define RTE_TYPE_Com_Receive_IP_QDashACCFail_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_IP_QDashACCFail_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_IbBrkPedlStsGb
#define RTE_TYPE_Com_Receive_IbBrkPedlStsGb
typedef VAR(unsigned char, TYPEDEF) Com_Receive_IbBrkPedlStsGb;
#endif
#ifndef RTE_TYPE_Com_Receive_IbBrkPedlStsGbVld
#define RTE_TYPE_Com_Receive_IbBrkPedlStsGbVld
typedef VAR(unsigned char, TYPEDEF) Com_Receive_IbBrkPedlStsGbVld;
#endif
#ifndef RTE_TYPE_Com_Receive_IbBrkPedlStsGb_Status
#define RTE_TYPE_Com_Receive_IbBrkPedlStsGb_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_IbBrkPedlStsGb_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_IbBrkPedlTrvlDrvr
#define RTE_TYPE_Com_Receive_IbBrkPedlTrvlDrvr
typedef VAR(float, TYPEDEF) Com_Receive_IbBrkPedlTrvlDrvr;
#endif
#ifndef RTE_TYPE_Com_Receive_IbBrkPedlTrvlDrvrVld
#define RTE_TYPE_Com_Receive_IbBrkPedlTrvlDrvrVld
typedef VAR(unsigned char, TYPEDEF) Com_Receive_IbBrkPedlTrvlDrvrVld;
#endif
#ifndef RTE_TYPE_Com_Receive_PlungerBrakePressure
#define RTE_TYPE_Com_Receive_PlungerBrakePressure
typedef VAR(float, TYPEDEF) Com_Receive_PlungerBrakePressure;
#endif
#ifndef RTE_TYPE_Com_Receive_PlungerBrakePressure_Status
#define RTE_TYPE_Com_Receive_PlungerBrakePressure_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_PlungerBrakePressure_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj1_Dx
#define RTE_TYPE_Com_Receive_RadarObj1_Dx
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj1_Dx;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj1_Dx_Status
#define RTE_TYPE_Com_Receive_RadarObj1_Dx_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj1_Dx_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj1_Dy
#define RTE_TYPE_Com_Receive_RadarObj1_Dy
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj1_Dy;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj1_Dy_Status
#define RTE_TYPE_Com_Receive_RadarObj1_Dy_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj1_Dy_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj1_ExistProb
#define RTE_TYPE_Com_Receive_RadarObj1_ExistProb
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj1_ExistProb;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj1_ExistProb_Status
#define RTE_TYPE_Com_Receive_RadarObj1_ExistProb_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj1_ExistProb_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj1_Length
#define RTE_TYPE_Com_Receive_RadarObj1_Length
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj1_Length;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj1_Length_Status
#define RTE_TYPE_Com_Receive_RadarObj1_Length_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj1_Length_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj1_Location
#define RTE_TYPE_Com_Receive_RadarObj1_Location
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj1_Location;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj1_Location_Status
#define RTE_TYPE_Com_Receive_RadarObj1_Location_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj1_Location_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj1_Measured
#define RTE_TYPE_Com_Receive_RadarObj1_Measured
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj1_Measured;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj1_Measured_Status
#define RTE_TYPE_Com_Receive_RadarObj1_Measured_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj1_Measured_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj1_RelAx
#define RTE_TYPE_Com_Receive_RadarObj1_RelAx
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj1_RelAx;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj1_RelAx_Status
#define RTE_TYPE_Com_Receive_RadarObj1_RelAx_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj1_RelAx_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj1_RelVx
#define RTE_TYPE_Com_Receive_RadarObj1_RelVx
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj1_RelVx;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj1_RelVx_Status
#define RTE_TYPE_Com_Receive_RadarObj1_RelVx_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj1_RelVx_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj1_RelVy
#define RTE_TYPE_Com_Receive_RadarObj1_RelVy
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj1_RelVy;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj1_RelVy_Status
#define RTE_TYPE_Com_Receive_RadarObj1_RelVy_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj1_RelVy_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj1_Width
#define RTE_TYPE_Com_Receive_RadarObj1_Width
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj1_Width;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj1_Width_Status
#define RTE_TYPE_Com_Receive_RadarObj1_Width_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj1_Width_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj2_Dx
#define RTE_TYPE_Com_Receive_RadarObj2_Dx
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj2_Dx;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj2_Dx_Status
#define RTE_TYPE_Com_Receive_RadarObj2_Dx_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj2_Dx_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj2_Dy
#define RTE_TYPE_Com_Receive_RadarObj2_Dy
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj2_Dy;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj2_Dy_Status
#define RTE_TYPE_Com_Receive_RadarObj2_Dy_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj2_Dy_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj2_ExistProb
#define RTE_TYPE_Com_Receive_RadarObj2_ExistProb
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj2_ExistProb;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj2_ExistProb_Status
#define RTE_TYPE_Com_Receive_RadarObj2_ExistProb_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj2_ExistProb_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj2_Length
#define RTE_TYPE_Com_Receive_RadarObj2_Length
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj2_Length;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj2_Length_Status
#define RTE_TYPE_Com_Receive_RadarObj2_Length_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj2_Length_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj2_Location
#define RTE_TYPE_Com_Receive_RadarObj2_Location
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj2_Location;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj2_Location_Status
#define RTE_TYPE_Com_Receive_RadarObj2_Location_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj2_Location_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj2_Measured
#define RTE_TYPE_Com_Receive_RadarObj2_Measured
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj2_Measured;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj2_Measured_Status
#define RTE_TYPE_Com_Receive_RadarObj2_Measured_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj2_Measured_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj2_RelAx
#define RTE_TYPE_Com_Receive_RadarObj2_RelAx
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj2_RelAx;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj2_RelAx_Status
#define RTE_TYPE_Com_Receive_RadarObj2_RelAx_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj2_RelAx_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj2_RelVx
#define RTE_TYPE_Com_Receive_RadarObj2_RelVx
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj2_RelVx;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj2_RelVx_Status
#define RTE_TYPE_Com_Receive_RadarObj2_RelVx_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj2_RelVx_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj2_RelVy
#define RTE_TYPE_Com_Receive_RadarObj2_RelVy
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj2_RelVy;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj2_RelVy_Status
#define RTE_TYPE_Com_Receive_RadarObj2_RelVy_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj2_RelVy_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj2_Width
#define RTE_TYPE_Com_Receive_RadarObj2_Width
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj2_Width;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj2_Width_Status
#define RTE_TYPE_Com_Receive_RadarObj2_Width_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj2_Width_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj3_Dx
#define RTE_TYPE_Com_Receive_RadarObj3_Dx
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj3_Dx;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj3_Dx_Status
#define RTE_TYPE_Com_Receive_RadarObj3_Dx_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj3_Dx_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj3_Dy
#define RTE_TYPE_Com_Receive_RadarObj3_Dy
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj3_Dy;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj3_Dy_Status
#define RTE_TYPE_Com_Receive_RadarObj3_Dy_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj3_Dy_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj3_ExistProb
#define RTE_TYPE_Com_Receive_RadarObj3_ExistProb
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj3_ExistProb;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj3_ExistProb_Status
#define RTE_TYPE_Com_Receive_RadarObj3_ExistProb_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj3_ExistProb_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj3_Length
#define RTE_TYPE_Com_Receive_RadarObj3_Length
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj3_Length;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj3_Length_Status
#define RTE_TYPE_Com_Receive_RadarObj3_Length_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj3_Length_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj3_Location
#define RTE_TYPE_Com_Receive_RadarObj3_Location
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj3_Location;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj3_Location_Status
#define RTE_TYPE_Com_Receive_RadarObj3_Location_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj3_Location_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj3_Measured
#define RTE_TYPE_Com_Receive_RadarObj3_Measured
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj3_Measured;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj3_Measured_Status
#define RTE_TYPE_Com_Receive_RadarObj3_Measured_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj3_Measured_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj3_RelAx
#define RTE_TYPE_Com_Receive_RadarObj3_RelAx
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj3_RelAx;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj3_RelAx_Status
#define RTE_TYPE_Com_Receive_RadarObj3_RelAx_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj3_RelAx_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj3_RelVx
#define RTE_TYPE_Com_Receive_RadarObj3_RelVx
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj3_RelVx;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj3_RelVx_Status
#define RTE_TYPE_Com_Receive_RadarObj3_RelVx_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj3_RelVx_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj3_RelVy
#define RTE_TYPE_Com_Receive_RadarObj3_RelVy
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj3_RelVy;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj3_RelVy_Status
#define RTE_TYPE_Com_Receive_RadarObj3_RelVy_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj3_RelVy_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj3_Width
#define RTE_TYPE_Com_Receive_RadarObj3_Width
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj3_Width;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj3_Width_Status
#define RTE_TYPE_Com_Receive_RadarObj3_Width_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj3_Width_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj4_Dx
#define RTE_TYPE_Com_Receive_RadarObj4_Dx
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj4_Dx;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj4_Dx_Status
#define RTE_TYPE_Com_Receive_RadarObj4_Dx_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj4_Dx_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj4_Dy
#define RTE_TYPE_Com_Receive_RadarObj4_Dy
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj4_Dy;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj4_Dy_Status
#define RTE_TYPE_Com_Receive_RadarObj4_Dy_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj4_Dy_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj4_ExistProb
#define RTE_TYPE_Com_Receive_RadarObj4_ExistProb
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj4_ExistProb;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj4_ExistProb_Status
#define RTE_TYPE_Com_Receive_RadarObj4_ExistProb_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj4_ExistProb_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj4_Length
#define RTE_TYPE_Com_Receive_RadarObj4_Length
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj4_Length;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj4_Length_Status
#define RTE_TYPE_Com_Receive_RadarObj4_Length_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj4_Length_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj4_Location
#define RTE_TYPE_Com_Receive_RadarObj4_Location
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj4_Location;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj4_Location_Status
#define RTE_TYPE_Com_Receive_RadarObj4_Location_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj4_Location_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj4_Measured
#define RTE_TYPE_Com_Receive_RadarObj4_Measured
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj4_Measured;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj4_Measured_Status
#define RTE_TYPE_Com_Receive_RadarObj4_Measured_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj4_Measured_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj4_RelAx
#define RTE_TYPE_Com_Receive_RadarObj4_RelAx
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj4_RelAx;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj4_RelAx_Status
#define RTE_TYPE_Com_Receive_RadarObj4_RelAx_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj4_RelAx_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj4_RelVx
#define RTE_TYPE_Com_Receive_RadarObj4_RelVx
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj4_RelVx;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj4_RelVx_Status
#define RTE_TYPE_Com_Receive_RadarObj4_RelVx_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj4_RelVx_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj4_RelVy
#define RTE_TYPE_Com_Receive_RadarObj4_RelVy
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj4_RelVy;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj4_RelVy_Status
#define RTE_TYPE_Com_Receive_RadarObj4_RelVy_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj4_RelVy_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj4_Width
#define RTE_TYPE_Com_Receive_RadarObj4_Width
typedef VAR(float, TYPEDEF) Com_Receive_RadarObj4_Width;
#endif
#ifndef RTE_TYPE_Com_Receive_RadarObj4_Width_Status
#define RTE_TYPE_Com_Receive_RadarObj4_Width_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_RadarObj4_Width_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_SrsDrvrBucSwtSts
#define RTE_TYPE_Com_Receive_SrsDrvrBucSwtSts
typedef VAR(unsigned char, TYPEDEF) Com_Receive_SrsDrvrBucSwtSts;
#endif
#ifndef RTE_TYPE_Com_Receive_SrsDrvrBucSwtSts_Status
#define RTE_TYPE_Com_Receive_SrsDrvrBucSwtSts_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_SrsDrvrBucSwtSts_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_SrsPassBucSwtSts
#define RTE_TYPE_Com_Receive_SrsPassBucSwtSts
typedef VAR(unsigned char, TYPEDEF) Com_Receive_SrsPassBucSwtSts;
#endif
#ifndef RTE_TYPE_Com_Receive_SrsPassBucSwtSts_Status
#define RTE_TYPE_Com_Receive_SrsPassBucSwtSts_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_SrsPassBucSwtSts_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_TmsFrntBlowMod
#define RTE_TYPE_Com_Receive_TmsFrntBlowMod
typedef VAR(unsigned char, TYPEDEF) Com_Receive_TmsFrntBlowMod;
#endif
#ifndef RTE_TYPE_Com_Receive_TmsFrntBlowMod_Status
#define RTE_TYPE_Com_Receive_TmsFrntBlowMod_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_TmsFrntBlowMod_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_VcuAccrPedlPosn
#define RTE_TYPE_Com_Receive_VcuAccrPedlPosn
typedef VAR(float, TYPEDEF) Com_Receive_VcuAccrPedlPosn;
#endif
#ifndef RTE_TYPE_Com_Receive_VcuAccrPedlPosnVld
#define RTE_TYPE_Com_Receive_VcuAccrPedlPosnVld
typedef VAR(unsigned char, TYPEDEF) Com_Receive_VcuAccrPedlPosnVld;
#endif
#ifndef RTE_TYPE_Com_Receive_VcuAccrPedlPosn_Status
#define RTE_TYPE_Com_Receive_VcuAccrPedlPosn_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_VcuAccrPedlPosn_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_VcuGearPosn
#define RTE_TYPE_Com_Receive_VcuGearPosn
typedef VAR(unsigned char, TYPEDEF) Com_Receive_VcuGearPosn;
#endif
#ifndef RTE_TYPE_Com_Receive_VcuGearPosn_Status
#define RTE_TYPE_Com_Receive_VcuGearPosn_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_VcuGearPosn_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_VcuVehGearPosnVld
#define RTE_TYPE_Com_Receive_VcuVehGearPosnVld
typedef VAR(unsigned char, TYPEDEF) Com_Receive_VcuVehGearPosnVld;
#endif
#ifndef RTE_TYPE_Com_Receive_VcuVehGearPosn_Status
#define RTE_TYPE_Com_Receive_VcuVehGearPosn_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_VcuVehGearPosn_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdFrntLePls
#define RTE_TYPE_Com_Receive_WhlSpdFrntLePls
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdFrntLePls;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdFrntLePls_Status
#define RTE_TYPE_Com_Receive_WhlSpdFrntLePls_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdFrntLePls_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdFrntRiPls
#define RTE_TYPE_Com_Receive_WhlSpdFrntRiPls
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdFrntRiPls;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdFrntRiPls_Status
#define RTE_TYPE_Com_Receive_WhlSpdFrntRiPls_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdFrntRiPls_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdLeFrntData
#define RTE_TYPE_Com_Receive_WhlSpdLeFrntData
typedef VAR(float, TYPEDEF) Com_Receive_WhlSpdLeFrntData;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdLeFrntDataVld
#define RTE_TYPE_Com_Receive_WhlSpdLeFrntDataVld
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdLeFrntDataVld;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdLeFrntData_Status
#define RTE_TYPE_Com_Receive_WhlSpdLeFrntData_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdLeFrntData_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdLeFrntDir
#define RTE_TYPE_Com_Receive_WhlSpdLeFrntDir
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdLeFrntDir;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdLeFrntDir_Status
#define RTE_TYPE_Com_Receive_WhlSpdLeFrntDir_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdLeFrntDir_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdLeReData
#define RTE_TYPE_Com_Receive_WhlSpdLeReData
typedef VAR(float, TYPEDEF) Com_Receive_WhlSpdLeReData;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdLeReDataVld
#define RTE_TYPE_Com_Receive_WhlSpdLeReDataVld
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdLeReDataVld;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdLeReData_Status
#define RTE_TYPE_Com_Receive_WhlSpdLeReData_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdLeReData_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdLeReDir
#define RTE_TYPE_Com_Receive_WhlSpdLeReDir
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdLeReDir;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdLeReDir_Status
#define RTE_TYPE_Com_Receive_WhlSpdLeReDir_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdLeReDir_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdReLePls
#define RTE_TYPE_Com_Receive_WhlSpdReLePls
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdReLePls;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdReLePls_Status
#define RTE_TYPE_Com_Receive_WhlSpdReLePls_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdReLePls_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdReRiPls
#define RTE_TYPE_Com_Receive_WhlSpdReRiPls
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdReRiPls;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdReRiPls_Status
#define RTE_TYPE_Com_Receive_WhlSpdReRiPls_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdReRiPls_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdRiFrntData
#define RTE_TYPE_Com_Receive_WhlSpdRiFrntData
typedef VAR(float, TYPEDEF) Com_Receive_WhlSpdRiFrntData;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdRiFrntDataVld
#define RTE_TYPE_Com_Receive_WhlSpdRiFrntDataVld
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdRiFrntDataVld;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdRiFrntData_Status
#define RTE_TYPE_Com_Receive_WhlSpdRiFrntData_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdRiFrntData_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdRiFrntDir
#define RTE_TYPE_Com_Receive_WhlSpdRiFrntDir
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdRiFrntDir;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdRiFrntDir_Status
#define RTE_TYPE_Com_Receive_WhlSpdRiFrntDir_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdRiFrntDir_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdRiReData
#define RTE_TYPE_Com_Receive_WhlSpdRiReData
typedef VAR(float, TYPEDEF) Com_Receive_WhlSpdRiReData;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdRiReDataVld
#define RTE_TYPE_Com_Receive_WhlSpdRiReDataVld
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdRiReDataVld;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdRiReData_Status
#define RTE_TYPE_Com_Receive_WhlSpdRiReData_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdRiReData_Status;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdRiReDir
#define RTE_TYPE_Com_Receive_WhlSpdRiReDir
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdRiReDir;
#endif
#ifndef RTE_TYPE_Com_Receive_WhlSpdRiReDir_Status
#define RTE_TYPE_Com_Receive_WhlSpdRiReDir_Status
typedef VAR(unsigned char, TYPEDEF) Com_Receive_WhlSpdRiReDir_Status;
#endif
#ifndef RTE_TYPE_Com_Recevie_EpsSasSteerAg
#define RTE_TYPE_Com_Recevie_EpsSasSteerAg
typedef VAR(float, TYPEDEF) Com_Recevie_EpsSasSteerAg;
#endif
#ifndef RTE_TYPE_Com_Reveice_BcmFrntWiperSts_Status
#define RTE_TYPE_Com_Reveice_BcmFrntWiperSts_Status
typedef VAR(unsigned char, TYPEDEF) Com_Reveice_BcmFrntWiperSts_Status;
#endif
#ifndef RTE_TYPE_Com_Reveice_BcmPassDoorSts_Status
#define RTE_TYPE_Com_Reveice_BcmPassDoorSts_Status
typedef VAR(unsigned char, TYPEDEF) Com_Reveice_BcmPassDoorSts_Status;
#endif
#ifndef RTE_TYPE_Com_Reveice_BcmTurnIndcrLe_Status
#define RTE_TYPE_Com_Reveice_BcmTurnIndcrLe_Status
typedef VAR(unsigned char, TYPEDEF) Com_Reveice_BcmTurnIndcrLe_Status;
#endif
#ifndef RTE_TYPE_Com_Reveice_EspPrefillAvailable
#define RTE_TYPE_Com_Reveice_EspPrefillAvailable
typedef VAR(unsigned char, TYPEDEF) Com_Reveice_EspPrefillAvailable;
#endif
#ifndef RTE_TYPE_Com_Send_ACC_HostLaneLeftStatus
#define RTE_TYPE_Com_Send_ACC_HostLaneLeftStatus
typedef VAR(unsigned char, TYPEDEF) Com_Send_ACC_HostLaneLeftStatus;
#endif
#ifndef RTE_TYPE_Com_Send_ACC_HostLaneRightStatus
#define RTE_TYPE_Com_Send_ACC_HostLaneRightStatus
typedef VAR(unsigned char, TYPEDEF) Com_Send_ACC_HostLaneRightStatus;
#endif
#ifndef RTE_TYPE_Com_Send_ACC_LatAngReq
#define RTE_TYPE_Com_Send_ACC_LatAngReq
typedef VAR(float, TYPEDEF) Com_Send_ACC_LatAngReq;
#endif
#ifndef RTE_TYPE_Com_Send_ACC_LatAngReqActive
#define RTE_TYPE_Com_Send_ACC_LatAngReqActive
typedef VAR(unsigned char, TYPEDEF) Com_Send_ACC_LatAngReqActive;
#endif
#ifndef RTE_TYPE_Com_Send_FC_ABAActive
#define RTE_TYPE_Com_Send_FC_ABAActive
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_ABAActive;
#endif
#ifndef RTE_TYPE_Com_Send_FC_ABAlevel
#define RTE_TYPE_Com_Send_FC_ABAlevel
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_ABAlevel;
#endif
#ifndef RTE_TYPE_Com_Send_FC_AEBActive
#define RTE_TYPE_Com_Send_FC_AEBActive
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_AEBActive;
#endif
#ifndef RTE_TYPE_Com_Send_FC_AEBCtrlType
#define RTE_TYPE_Com_Send_FC_AEBCtrlType
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_AEBCtrlType;
#endif
#ifndef RTE_TYPE_Com_Send_FC_AEBEnable
#define RTE_TYPE_Com_Send_FC_AEBEnable
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_AEBEnable;
#endif
#ifndef RTE_TYPE_Com_Send_FC_AEBStatus
#define RTE_TYPE_Com_Send_FC_AEBStatus
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_AEBStatus;
#endif
#ifndef RTE_TYPE_Com_Send_FC_AEBTargetAx
#define RTE_TYPE_Com_Send_FC_AEBTargetAx
typedef VAR(float, TYPEDEF) Com_Send_FC_AEBTargetAx;
#endif
#ifndef RTE_TYPE_Com_Send_FC_AEBTargetAy
#define RTE_TYPE_Com_Send_FC_AEBTargetAy
typedef VAR(float, TYPEDEF) Com_Send_FC_AEBTargetAy;
#endif
#ifndef RTE_TYPE_Com_Send_FC_AEBTargetDeceleration
#define RTE_TYPE_Com_Send_FC_AEBTargetDeceleration
typedef VAR(float, TYPEDEF) Com_Send_FC_AEBTargetDeceleration;
#endif
#ifndef RTE_TYPE_Com_Send_FC_AEBTargetDetection
#define RTE_TYPE_Com_Send_FC_AEBTargetDetection
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_AEBTargetDetection;
#endif
#ifndef RTE_TYPE_Com_Send_FC_AEBTargetLatRange
#define RTE_TYPE_Com_Send_FC_AEBTargetLatRange
typedef VAR(float, TYPEDEF) Com_Send_FC_AEBTargetLatRange;
#endif
#ifndef RTE_TYPE_Com_Send_FC_AEBTargetLatRelSpeed
#define RTE_TYPE_Com_Send_FC_AEBTargetLatRelSpeed
typedef VAR(float, TYPEDEF) Com_Send_FC_AEBTargetLatRelSpeed;
#endif
#ifndef RTE_TYPE_Com_Send_FC_AEBTargetLngRange
#define RTE_TYPE_Com_Send_FC_AEBTargetLngRange
typedef VAR(float, TYPEDEF) Com_Send_FC_AEBTargetLngRange;
#endif
#ifndef RTE_TYPE_Com_Send_FC_AEBTargetProb
#define RTE_TYPE_Com_Send_FC_AEBTargetProb
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_AEBTargetProb;
#endif
#ifndef RTE_TYPE_Com_Send_FC_AEBTargetRelSpeed
#define RTE_TYPE_Com_Send_FC_AEBTargetRelSpeed
typedef VAR(float, TYPEDEF) Com_Send_FC_AEBTargetRelSpeed;
#endif
#ifndef RTE_TYPE_Com_Send_FC_AEBTargetType
#define RTE_TYPE_Com_Send_FC_AEBTargetType
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_AEBTargetType;
#endif
#ifndef RTE_TYPE_Com_Send_FC_AEBTargetmode
#define RTE_TYPE_Com_Send_FC_AEBTargetmode
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_AEBTargetmode;
#endif
#ifndef RTE_TYPE_Com_Send_FC_AEBTextInfo
#define RTE_TYPE_Com_Send_FC_AEBTextInfo
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_AEBTextInfo;
#endif
#ifndef RTE_TYPE_Com_Send_FC_AEBVehilceHoldReq
#define RTE_TYPE_Com_Send_FC_AEBVehilceHoldReq
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_AEBVehilceHoldReq;
#endif
#ifndef RTE_TYPE_Com_Send_FC_AWBActive
#define RTE_TYPE_Com_Send_FC_AWBActive
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_AWBActive;
#endif
#ifndef RTE_TYPE_Com_Send_FC_AWBlevel
#define RTE_TYPE_Com_Send_FC_AWBlevel
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_AWBlevel;
#endif
#ifndef RTE_TYPE_Com_Send_FC_ELKEnableStatus
#define RTE_TYPE_Com_Send_FC_ELKEnableStatus
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_ELKEnableStatus;
#endif
#ifndef RTE_TYPE_Com_Send_FC_ELKInterventionMode
#define RTE_TYPE_Com_Send_FC_ELKInterventionMode
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_ELKInterventionMode;
#endif
#ifndef RTE_TYPE_Com_Send_FC_ELKMode
#define RTE_TYPE_Com_Send_FC_ELKMode
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_ELKMode;
#endif
#ifndef RTE_TYPE_Com_Send_FC_FCWActive
#define RTE_TYPE_Com_Send_FC_FCWActive
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_FCWActive;
#endif
#ifndef RTE_TYPE_Com_Send_FC_FCWLatentWarning
#define RTE_TYPE_Com_Send_FC_FCWLatentWarning
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_FCWLatentWarning;
#endif
#ifndef RTE_TYPE_Com_Send_FC_FCWPreWarning
#define RTE_TYPE_Com_Send_FC_FCWPreWarning
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_FCWPreWarning;
#endif
#ifndef RTE_TYPE_Com_Send_FC_FCWSettingStatus
#define RTE_TYPE_Com_Send_FC_FCWSettingStatus
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_FCWSettingStatus;
#endif
#ifndef RTE_TYPE_Com_Send_FC_FCWStatus
#define RTE_TYPE_Com_Send_FC_FCWStatus
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_FCWStatus;
#endif
#ifndef RTE_TYPE_Com_Send_FC_HMAEnableStatus
#define RTE_TYPE_Com_Send_FC_HMAEnableStatus
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_HMAEnableStatus;
#endif
#ifndef RTE_TYPE_Com_Send_FC_HMALightDistribution
#define RTE_TYPE_Com_Send_FC_HMALightDistribution
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_HMALightDistribution;
#endif
#ifndef RTE_TYPE_Com_Send_FC_HMAStatus
#define RTE_TYPE_Com_Send_FC_HMAStatus
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_HMAStatus;
#endif
#ifndef RTE_TYPE_Com_Send_FC_HostLaneLeftStatus
#define RTE_TYPE_Com_Send_FC_HostLaneLeftStatus
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_HostLaneLeftStatus;
#endif
#ifndef RTE_TYPE_Com_Send_FC_HostLaneRightStatus
#define RTE_TYPE_Com_Send_FC_HostLaneRightStatus
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_HostLaneRightStatus;
#endif
#ifndef RTE_TYPE_Com_Send_FC_LASModeSelectionStatus
#define RTE_TYPE_Com_Send_FC_LASModeSelectionStatus
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_LASModeSelectionStatus;
#endif
#ifndef RTE_TYPE_Com_Send_FC_LASWarningModeSelectionSts
#define RTE_TYPE_Com_Send_FC_LASWarningModeSelectionSts
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_LASWarningModeSelectionSts;
#endif
#ifndef RTE_TYPE_Com_Send_FC_LDWShakeLevStatus
#define RTE_TYPE_Com_Send_FC_LDWShakeLevStatus
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_LDWShakeLevStatus;
#endif
#ifndef RTE_TYPE_Com_Send_FC_LDWStatus
#define RTE_TYPE_Com_Send_FC_LDWStatus
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_LDWStatus;
#endif
#ifndef RTE_TYPE_Com_Send_FC_LDWVibrationWarningReq
#define RTE_TYPE_Com_Send_FC_LDWVibrationWarningReq
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_LDWVibrationWarningReq;
#endif
#ifndef RTE_TYPE_Com_Send_FC_LKAStatus
#define RTE_TYPE_Com_Send_FC_LKAStatus
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_LKAStatus;
#endif
#ifndef RTE_TYPE_Com_Send_FC_LKATakeoverReq
#define RTE_TYPE_Com_Send_FC_LKATakeoverReq
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_LKATakeoverReq;
#endif
#ifndef RTE_TYPE_Com_Send_FC_LLaneDistanceFus
#define RTE_TYPE_Com_Send_FC_LLaneDistanceFus
typedef VAR(float, TYPEDEF) Com_Send_FC_LLaneDistanceFus;
#endif
#ifndef RTE_TYPE_Com_Send_FC_LLaneMarkerType
#define RTE_TYPE_Com_Send_FC_LLaneMarkerType
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_LLaneMarkerType;
#endif
#ifndef RTE_TYPE_Com_Send_FC_LatAngReq
#define RTE_TYPE_Com_Send_FC_LatAngReq
typedef VAR(float, TYPEDEF) Com_Send_FC_LatAngReq;
#endif
#ifndef RTE_TYPE_Com_Send_FC_LatAngReqActive
#define RTE_TYPE_Com_Send_FC_LatAngReqActive
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_LatAngReqActive;
#endif
#ifndef RTE_TYPE_Com_Send_FC_MotorTorqueMaxLimitRequest
#define RTE_TYPE_Com_Send_FC_MotorTorqueMaxLimitRequest
typedef VAR(float, TYPEDEF) Com_Send_FC_MotorTorqueMaxLimitRequest;
#endif
#ifndef RTE_TYPE_Com_Send_FC_MotorTorqueMinLimitRequest
#define RTE_TYPE_Com_Send_FC_MotorTorqueMinLimitRequest
typedef VAR(float, TYPEDEF) Com_Send_FC_MotorTorqueMinLimitRequest;
#endif
#ifndef RTE_TYPE_Com_Send_FC_OBJ_AEB_ID
#define RTE_TYPE_Com_Send_FC_OBJ_AEB_ID
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_OBJ_AEB_ID;
#endif
#ifndef RTE_TYPE_Com_Send_FC_PrefillActive
#define RTE_TYPE_Com_Send_FC_PrefillActive
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_PrefillActive;
#endif
#ifndef RTE_TYPE_Com_Send_FC_RLaneDistanceFus
#define RTE_TYPE_Com_Send_FC_RLaneDistanceFus
typedef VAR(float, TYPEDEF) Com_Send_FC_RLaneDistanceFus;
#endif
#ifndef RTE_TYPE_Com_Send_FC_RLaneMarkerType
#define RTE_TYPE_Com_Send_FC_RLaneMarkerType
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_RLaneMarkerType;
#endif
#ifndef RTE_TYPE_Com_Send_FC_Voiceinfo
#define RTE_TYPE_Com_Send_FC_Voiceinfo
typedef VAR(unsigned char, TYPEDEF) Com_Send_FC_Voiceinfo;
#endif
#ifndef RTE_TYPE_Com_SignalSts_t
#define RTE_TYPE_Com_SignalSts_t
typedef VAR(unsigned char, TYPEDEF) Com_SignalSts_t;
#endif
#ifndef RTE_TYPE_Confidence
#define RTE_TYPE_Confidence
typedef VAR(float, TYPEDEF) Confidence;
#endif
#ifndef RTE_TYPE_ControlLimitations_t
#define RTE_TYPE_ControlLimitations_t
typedef struct
{
  VAR(float, TYPEDEF) f_LongAccelMax;
  VAR(float, TYPEDEF) f_LongDecelMax;
  VAR(float, TYPEDEF) f_LongAccGradMax;
  VAR(float, TYPEDEF) f_LongDecGradMax;
} ControlLimitations_t;
#endif
#ifndef RTE_TYPE_e_BorderType_t
#define RTE_TYPE_e_BorderType_t
typedef VAR(unsigned char, TYPEDEF) e_BorderType_t;
#endif
#ifndef RTE_TYPE_QualityMeasures_t
#define RTE_TYPE_QualityMeasures_t
typedef struct
{
  VAR(float, TYPEDEF) f_Confidence;
  VAR(float, TYPEDEF) f_MinX;
  VAR(float, TYPEDEF) f_MaxX;
  VAR(float, TYPEDEF) f_MaxXCompensated;
  VAR(e_BorderType_t, TYPEDEF) e_BorderType;
  VAR(unsigned char, TYPEDEF) u_TrackingStatus;
} QualityMeasures_t;
#endif
#ifndef RTE_TYPE_e_CoupledRoadCoherence_t
#define RTE_TYPE_e_CoupledRoadCoherence_t
typedef VAR(unsigned char, TYPEDEF) e_CoupledRoadCoherence_t;
#endif
#ifndef RTE_TYPE_CoupledRoad_t
#define RTE_TYPE_CoupledRoad_t
typedef struct
{
  VAR(ClothoidParameters_t, TYPEDEF) ClothoidParams;
  VAR(QualityMeasures_t, TYPEDEF) QualityMeasLeft;
  VAR(QualityMeasures_t, TYPEDEF) QualityMeasRight;
  VAR(float, TYPEDEF) f_LateralOffsetLeft;
  VAR(float, TYPEDEF) f_LateralOffsetRight;
  VAR(float, TYPEDEF) f_LatStdDevFiltered;
  VAR(unsigned char, TYPEDEF) u_GlobalConfidence;
  VAR(unsigned char, TYPEDEF) u_GlobalTrackingStatus;
  VAR(e_CoupledRoadCoherence_t, TYPEDEF) e_CoupledRoadCoherence;
} CoupledRoad_t;
#endif
#ifndef RTE_TYPE_t_CourseInfoSeg
#define RTE_TYPE_t_CourseInfoSeg
typedef struct
{
  VAR(float, TYPEDEF) f_C0;
  VAR(float, TYPEDEF) f_C1;
  VAR(float, TYPEDEF) f_StartDistX;
  VAR(float, TYPEDEF) f_Length;
  VAR(float, TYPEDEF) f_ResidualSegEnd;
} t_CourseInfoSeg;
#endif
#ifndef RTE_TYPE_t_CourseInfo
#define RTE_TYPE_t_CourseInfo
typedef struct
{
  VAR(float, TYPEDEF) f_Angle;
  VAR(t_CourseInfoSeg, TYPEDEF) CourseInfoSegNear;
  VAR(t_CourseInfoSeg, TYPEDEF) CourseInfoSegFar;
} t_CourseInfo;
#endif
#ifndef RTE_TYPE_CourseInfo_array_t
#define RTE_TYPE_CourseInfo_array_t
typedef VAR(t_CourseInfo, TYPEDEF) CourseInfo_array_t[4];
#endif
#ifndef RTE_TYPE_CoverDamping
#define RTE_TYPE_CoverDamping
typedef VAR(float, TYPEDEF) CoverDamping;
#endif
#ifndef RTE_TYPE_Cpr_Msg_State
#define RTE_TYPE_Cpr_Msg_State
typedef VAR(unsigned char, TYPEDEF) Cpr_Msg_State;
#endif
#ifndef RTE_TYPE_Cpr_RxMsg_ID
#define RTE_TYPE_Cpr_RxMsg_ID
typedef VAR(unsigned char, TYPEDEF) Cpr_RxMsg_ID;
#endif
#ifndef RTE_TYPE_CruiseControlMode_t
#define RTE_TYPE_CruiseControlMode_t
typedef VAR(unsigned char, TYPEDEF) CruiseControlMode_t;
#endif
#ifndef RTE_TYPE_CrvAmp_t
#define RTE_TYPE_CrvAmp_t
typedef struct
{
  VAR(boolean, TYPEDEF) CrvAmplificationActivated_nu;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
} CrvAmp_t;
#endif
#ifndef RTE_TYPE_CrvConf
#define RTE_TYPE_CrvConf
typedef VAR(unsigned char, TYPEDEF) CrvConf;
#endif
#ifndef RTE_TYPE_CrvError
#define RTE_TYPE_CrvError
typedef VAR(float, TYPEDEF) CrvError;
#endif
#ifndef RTE_TYPE_CrvLimitation_t
#define RTE_TYPE_CrvLimitation_t
typedef struct
{
  VAR(float, TYPEDEF) MaxCrvTrajGuiCtrl_1pm;
  VAR(float, TYPEDEF) MaxCrvGrdBuildup_1pms;
  VAR(float, TYPEDEF) MaxCrvGrdReduction_1pms;
  VAR(float, TYPEDEF) GrdLimitTgtCrvTrajGuiCtrl_1pms;
} CrvLimitation_t;
#endif
#ifndef RTE_TYPE_CtrlTransitions_t
#define RTE_TYPE_CtrlTransitions_t
typedef struct
{
  VAR(float, TYPEDEF) StrWhStifLimit_nu;
  VAR(float, TYPEDEF) StrWhStifGrad_1ps;
  VAR(float, TYPEDEF) TrqRampGrad_1ps;
  VAR(float, TYPEDEF) MaxTrqScalLimit_nu;
  VAR(float, TYPEDEF) MaxTrqScalGrad_1ps;
  VAR(unsigned char, TYPEDEF) HighStatAccu_nu;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned short, TYPEDEF) RampingDownReq_nu;
  VAR(unsigned short, TYPEDEF) AngleFadingReq_nu;
  VAR(unsigned short, TYPEDEF) DeratingLevel_nu;
} CtrlTransitions_t;
#endif
#ifndef RTE_TYPE_CurbWeight
#define RTE_TYPE_CurbWeight
typedef VAR(float, TYPEDEF) CurbWeight;
#endif
#ifndef RTE_TYPE_Curvatures_t
#define RTE_TYPE_Curvatures_t
typedef struct
{
  VAR(float, TYPEDEF) TgtCrv_NoDE_1pm;
  VAR(float, TYPEDEF) TgtCrv_DEWithNoLatSlp_1pm;
  VAR(float, TYPEDEF) TgtCrv_DE_1pm;
  VAR(float, TYPEDEF) TgtCrv_Limited_1pm;
  VAR(float, TYPEDEF) TgtCrv_Gradient_1pms;
} Curvatures_t;
#endif
#ifndef RTE_TYPE_CurveC0Ext
#define RTE_TYPE_CurveC0Ext
typedef VAR(float, TYPEDEF) CurveC0Ext;
#endif
#ifndef RTE_TYPE_CurveC1Ext
#define RTE_TYPE_CurveC1Ext
typedef VAR(float, TYPEDEF) CurveC1Ext;
#endif
#ifndef RTE_TYPE_CurveVehDyn_t
#define RTE_TYPE_CurveVehDyn_t
typedef struct
{
  VAR(float, TYPEDEF) Curve;
  VAR(SignalHeader_t, TYPEDEF) CurveTimestamp;
  VAR(float, TYPEDEF) C1;
  VAR(float, TYPEDEF) Gradient;
  VAR(float, TYPEDEF) varC0;
  VAR(float, TYPEDEF) varC1;
  VAR(float, TYPEDEF) Quality;
  VAR(float, TYPEDEF) CrvError;
  VAR(unsigned char, TYPEDEF) CrvConf;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
  VAR(unsigned char, TYPEDEF) reserved3;
  VAR(float, TYPEDEF) VarCurve;
} CurveVehDyn_t;
#endif
#ifndef RTE_TYPE_FCTCustObjData_t
#define RTE_TYPE_FCTCustObjData_t
typedef struct
{
  VAR(AbsolutKinematics_t, TYPEDEF) AbsolutKinematics;
} FCTCustObjData_t;
#endif
#ifndef RTE_TYPE_CustObjData_array_t
#define RTE_TYPE_CustObjData_array_t
typedef VAR(FCTCustObjData_t, TYPEDEF) CustObjData_array_t[40];
#endif
#ifndef RTE_TYPE_EM_t_StatusFusion
#define RTE_TYPE_EM_t_StatusFusion
typedef VAR(unsigned short, TYPEDEF) EM_t_StatusFusion;
#endif
#ifndef RTE_TYPE_percentage_t
#define RTE_TYPE_percentage_t
typedef VAR(unsigned char, TYPEDEF) percentage_t;
#endif
#ifndef RTE_TYPE_EM_t_GenObjClassification
#define RTE_TYPE_EM_t_GenObjClassification
typedef VAR(unsigned char, TYPEDEF) EM_t_GenObjClassification;
#endif
#ifndef RTE_TYPE_EM_t_CamTurnLightsState
#define RTE_TYPE_EM_t_CamTurnLightsState
typedef VAR(unsigned char, TYPEDEF) EM_t_CamTurnLightsState;
#endif
#ifndef RTE_TYPE_EM_t_CamBrakeLight
#define RTE_TYPE_EM_t_CamBrakeLight
typedef VAR(unsigned char, TYPEDEF) EM_t_CamBrakeLight;
#endif
#ifndef RTE_TYPE_EM_t_CamObjManeuver
#define RTE_TYPE_EM_t_CamObjManeuver
typedef VAR(unsigned char, TYPEDEF) EM_t_CamObjManeuver;
#endif
#ifndef RTE_TYPE_EM_t_CamObjAssociatedLane
#define RTE_TYPE_EM_t_CamObjAssociatedLane
typedef VAR(unsigned char, TYPEDEF) EM_t_CamObjAssociatedLane;
#endif
#ifndef RTE_TYPE_EM_t_Cust_CamObjectData
#define RTE_TYPE_EM_t_Cust_CamObjectData
typedef struct
{
  VAR(percentage_t, TYPEDEF) CamConfirmationProb;
  VAR(EM_t_GenObjClassification, TYPEDEF) e_CamClass;
  VAR(EM_t_CamTurnLightsState, TYPEDEF) eTurnLightsState;
  VAR(EM_t_CamBrakeLight, TYPEDEF) eBrakeLight;
  VAR(EM_t_CamObjManeuver, TYPEDEF) eObjManeuver;
  VAR(EM_t_CamObjAssociatedLane, TYPEDEF) e_LaneAssignment;
  VAR(percentage_t, TYPEDEF) RelWidthOnAssocLane;
  VAR(percentage_t, TYPEDEF) RelWidthOnLaneLeft;
  VAR(percentage_t, TYPEDEF) RelWidthOnLaneRight;
} EM_t_Cust_CamObjectData;
#endif
#ifndef RTE_TYPE_EM_t_Cust_ObjectData
#define RTE_TYPE_EM_t_Cust_ObjectData
typedef struct
{
  VAR(EM_t_StatusFusion, TYPEDEF) statusFusion;
  VAR(unsigned char, TYPEDEF) u_ExternalID_Cam;
  VAR(EM_t_Cust_CamObjectData, TYPEDEF) CamObjectData;
} EM_t_Cust_ObjectData;
#endif
#ifndef RTE_TYPE_CustObjects_array_t
#define RTE_TYPE_CustObjects_array_t
typedef VAR(EM_t_Cust_ObjectData, TYPEDEF) CustObjects_array_t[40];
#endif
#ifndef RTE_TYPE_HDCSysStat_t
#define RTE_TYPE_HDCSysStat_t
typedef VAR(unsigned char, TYPEDEF) HDCSysStat_t;
#endif
#ifndef RTE_TYPE_GearPosition_t
#define RTE_TYPE_GearPosition_t
typedef VAR(unsigned char, TYPEDEF) GearPosition_t;
#endif
#ifndef RTE_TYPE_EngineStatus_t
#define RTE_TYPE_EngineStatus_t
typedef VAR(unsigned char, TYPEDEF) EngineStatus_t;
#endif
#ifndef RTE_TYPE_CustomInput_t
#define RTE_TYPE_CustomInput_t
typedef struct
{
  VAR(boolean, TYPEDEF) ESPOFFStatus;
  VAR(boolean, TYPEDEF) AEBAvailable;
  VAR(boolean, TYPEDEF) AEBActive;
  VAR(boolean, TYPEDEF) AVHValid;
  VAR(boolean, TYPEDEF) AVHActive;
  VAR(boolean, TYPEDEF) BrakeForceExist;
  VAR(boolean, TYPEDEF) CDPActive;
  VAR(boolean, TYPEDEF) CDDActive;
  VAR(boolean, TYPEDEF) VLCActive;
  VAR(boolean, TYPEDEF) CrsCntrlSwStModSwAct;
  VAR(HDCSysStat_t, TYPEDEF) HDCSysStat;
  VAR(boolean, TYPEDEF) TJASwitch;
  VAR(boolean, TYPEDEF) AutoFollowSwitch;
  VAR(boolean, TYPEDEF) Button_Set_DecelSwitch;
  VAR(boolean, TYPEDEF) Button_Resume_AccelSwitch;
  VAR(ACCFailureMode_t, TYPEDEF) ACCFailureMode;
  VAR(GearPosition_t, TYPEDEF) GearPosition;
  VAR(unsigned char, TYPEDEF) ACC_Headway_set_ini;
  VAR(unsigned char, TYPEDEF) ACC_default_set_speed;
  VAR(EngineStatus_t, TYPEDEF) EngineStatus;
  VAR(boolean, TYPEDEF) CDDAvail;
  VAR(boolean, TYPEDEF) VLCAvail;
  VAR(unsigned char, TYPEDEF) PowerBatteryFail;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(float, TYPEDEF) fSteeringWheelAngle;
  VAR(unsigned char, TYPEDEF) ADC_SetSpeed;
  VAR(boolean, TYPEDEF) ADC_Availability;
  VAR(boolean, TYPEDEF) IACC_Activation;
  VAR(boolean, TYPEDEF) LCF_lane_not_clear;
} CustomInput_t;
#endif
#ifndef RTE_TYPE_CustomLongCtrlOutput_t
#define RTE_TYPE_CustomLongCtrlOutput_t
typedef struct
{
  VAR(boolean, TYPEDEF) Resp_ActvACC_DMC;
  VAR(lodmc_act_type_t, TYPEDEF) ACC_Req_actuator;
  VAR(boolean, TYPEDEF) b_UnintendEgoAccel;
  VAR(unsigned char, TYPEDEF) reserved1;
} CustomLongCtrlOutput_t;
#endif
#ifndef RTE_TYPE_DisplayDistanceLevel_t
#define RTE_TYPE_DisplayDistanceLevel_t
typedef VAR(unsigned char, TYPEDEF) DisplayDistanceLevel_t;
#endif
#ifndef RTE_TYPE_shutdownMode_t
#define RTE_TYPE_shutdownMode_t
typedef VAR(unsigned char, TYPEDEF) shutdownMode_t;
#endif
#ifndef RTE_TYPE_SpeedUnitEnum_t
#define RTE_TYPE_SpeedUnitEnum_t
typedef VAR(unsigned char, TYPEDEF) SpeedUnitEnum_t;
#endif
#ifndef RTE_TYPE_CustomOutput_t
#define RTE_TYPE_CustomOutput_t
typedef struct
{
  VAR(boolean, TYPEDEF) SoftStopRequest;
  VAR(ACCStatus_Radar_t, TYPEDEF) ACCStatus_Radar;
  VAR(CruiseControlMode_t, TYPEDEF) CruiseControlMode;
  VAR(ACCTextMessage_t, TYPEDEF) ACCTextMessage;
  VAR(ACCExitMsgReq_t, TYPEDEF) ACCExitMsgReq;
  VAR(unsigned int, TYPEDEF) InhibitReason_CC_INHIBIT;
  VAR(unsigned int, TYPEDEF) InhibitReason_No_Ramp;
  VAR(unsigned int, TYPEDEF) InhibitReason_Rapid_Ramp;
  VAR(unsigned int, TYPEDEF) InhibitReason_Ramp;
  VAR(unsigned int, TYPEDEF) InhibitReason_Inhibit_Engagement;
  VAR(unsigned int, TYPEDEF) InhibitReason_Soft_Off_Condition;
  VAR(unsigned int, TYPEDEF) ACC_Info;
  VAR(DisplayDistanceLevel_t, TYPEDEF) DisplayDistanceLevel;
  VAR(unsigned int, TYPEDEF) InhibitReason_No_Ramp_ext_cond;
  VAR(boolean, TYPEDEF) b_DriverActivatedACC_Flag;
  VAR(boolean, TYPEDEF) MRM_EPBrequest;
  VAR(ACC_LngTakeOverReq_t, TYPEDEF) ACC_LngTakeOverReq;
  VAR(boolean, TYPEDEF) ACC_Voiceinfo;
  VAR(ACC_IACCHWATextInfoForDriver_t, TYPEDEF) ACC_IACCHWATextInfoForDriver;
  VAR(shutdownMode_t, TYPEDEF) shutdownMode;
  VAR(ACCTextMessageBD10_t, TYPEDEF) ACCTextMessageBD10;
  VAR(SpeedUnitEnum_t, TYPEDEF) SpeedUnit;
  VAR(boolean, TYPEDEF) ACCStatus_OnOff;
} CustomOutput_t;
#endif
#ifndef RTE_TYPE_DAS_failure_information_t
#define RTE_TYPE_DAS_failure_information_t
typedef VAR(unsigned char, TYPEDEF) DAS_failure_information_t;
#endif
#ifndef RTE_TYPE_DAS_status_t
#define RTE_TYPE_DAS_status_t
typedef VAR(unsigned char, TYPEDEF) DAS_status_t;
#endif
#ifndef RTE_TYPE_DAWRawInputs_t
#define RTE_TYPE_DAWRawInputs_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) u16_SAS_Angle;
  VAR(unsigned short, TYPEDEF) u16_Mdps_StrColTq;
  VAR(unsigned short, TYPEDEF) u16_CF_Clu_Vanz;
  VAR(unsigned char, TYPEDEF) CF_Clu_SPEED_UNIT;
  VAR(unsigned short, TYPEDEF) u16_CYL_PRES;
  VAR(unsigned char, TYPEDEF) u8_PV_AV_CAN;
  VAR(unsigned char, TYPEDEF) u8_ACCMode;
  VAR(unsigned char, TYPEDEF) CF_Gway_TurnSigLh;
  VAR(unsigned char, TYPEDEF) CF_Gway_TurnSigRh;
  VAR(unsigned char, TYPEDEF) u8_CF_Gway_HazardSw;
  VAR(unsigned char, TYPEDEF) u8_CF_Gway_DrvSeatBeltSw;
  VAR(unsigned char, TYPEDEF) u8_CF_Gway_DrvDrSw;
  VAR(unsigned char, TYPEDEF) u8_CF_Clu_AAModeNValueSet;
  VAR(unsigned char, TYPEDEF) u8_CF_Clu_USMReset;
  VAR(unsigned short, TYPEDEF) u16_LONG_ACCEL;
  VAR(unsigned char, TYPEDEF) u8_CF_Clu_AALastBreakTime;
  VAR(boolean, TYPEDEF) SWFailure;
} DAWRawInputs_t;
#endif
#ifndef RTE_TYPE_DC_status_information_t
#define RTE_TYPE_DC_status_information_t
typedef VAR(unsigned char, TYPEDEF) DC_status_information_t;
#endif
#ifndef RTE_TYPE_FCTStateSig_t
#define RTE_TYPE_FCTStateSig_t
typedef VAR(unsigned char, TYPEDEF) FCTStateSig_t;
#endif
#ifndef RTE_TYPE_eDriverOverride_t
#define RTE_TYPE_eDriverOverride_t
typedef VAR(unsigned char, TYPEDEF) eDriverOverride_t;
#endif
#ifndef RTE_TYPE_sDriverInput_t
#define RTE_TYPE_sDriverInput_t
typedef struct
{
  VAR(eDriverOverride_t, TYPEDEF) eDriverOverride;
} sDriverInput_t;
#endif
#ifndef RTE_TYPE_DIMInputCustom_t
#define RTE_TYPE_DIMInputCustom_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(FCTStateSig_t, TYPEDEF) eSpeedLimitActive;
  VAR(sDriverInput_t, TYPEDEF) sDriverInput;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
} DIMInputCustom_t;
#endif
#ifndef RTE_TYPE_DIMInputSignalState_t
#define RTE_TYPE_DIMInputSignalState_t
typedef VAR(unsigned char, TYPEDEF) DIMInputSignalState_t;
#endif
#ifndef RTE_TYPE_eTurnIndicator_t
#define RTE_TYPE_eTurnIndicator_t
typedef VAR(unsigned char, TYPEDEF) eTurnIndicator_t;
#endif
#ifndef RTE_TYPE_ePowerTrainEngaged_t
#define RTE_TYPE_ePowerTrainEngaged_t
typedef VAR(unsigned char, TYPEDEF) ePowerTrainEngaged_t;
#endif
#ifndef RTE_TYPE_DIMInputGeneric_t
#define RTE_TYPE_DIMInputGeneric_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(float, TYPEDEF) fSteeringWheelAngle;
  VAR(float, TYPEDEF) fSteeringWheelAngleGrad;
  VAR(boolean, TYPEDEF) bACCActive;
  VAR(eDriverSetting_t, TYPEDEF) eDriverSetting;
  VAR(DIMInputSignalState_t, TYPEDEF) eSteeringWheelAngleStat;
  VAR(DIMInputSignalState_t, TYPEDEF) eSteeringWheelAngleGradStat;
  VAR(float, TYPEDEF) fAccelPedalPos;
  VAR(float, TYPEDEF) fAccelPedalGrad;
  VAR(DIMInputSignalState_t, TYPEDEF) eAccelPadelStat;
  VAR(DIMInputSignalState_t, TYPEDEF) eAccelPadelGradStat;
  VAR(eTurnIndicator_t, TYPEDEF) eTurnIndicator;
  VAR(FCTStateSig_t, TYPEDEF) eDriverBraking;
  VAR(ePowerTrainEngaged_t, TYPEDEF) ePowerTrainEngaged;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
  VAR(unsigned char, TYPEDEF) reserved3;
} DIMInputGeneric_t;
#endif
#ifndef RTE_TYPE_DIMOutMonState_t
#define RTE_TYPE_DIMOutMonState_t
typedef VAR(unsigned char, TYPEDEF) DIMOutMonState_t;
#endif
#ifndef RTE_TYPE_eDriverAttentionState_t
#define RTE_TYPE_eDriverAttentionState_t
typedef VAR(unsigned char, TYPEDEF) eDriverAttentionState_t;
#endif
#ifndef RTE_TYPE_eDriverFeedbackState_t
#define RTE_TYPE_eDriverFeedbackState_t
typedef VAR(unsigned char, TYPEDEF) eDriverFeedbackState_t;
#endif
#ifndef RTE_TYPE_eDriverActivityState_t
#define RTE_TYPE_eDriverActivityState_t
typedef VAR(unsigned char, TYPEDEF) eDriverActivityState_t;
#endif
#ifndef RTE_TYPE_DIMOutputCustom_t
#define RTE_TYPE_DIMOutputCustom_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(DIMOutMonState_t, TYPEDEF) eDriverMonitoringState;
  VAR(eDriverAttentionState_t, TYPEDEF) eDriverAttentionState;
  VAR(signed char, TYPEDEF) iLaneChangeProbability;
  VAR(eDriverFeedbackState_t, TYPEDEF) eDriverFeedbackState;
  VAR(eDriverActivityState_t, TYPEDEF) eDriverActivityState;
  VAR(a_reserve_array_t, TYPEDEF) array_reserved;
} DIMOutputCustom_t;
#endif
#ifndef RTE_TYPE_DM_alert_level_t
#define RTE_TYPE_DM_alert_level_t
typedef VAR(unsigned char, TYPEDEF) DM_alert_level_t;
#endif
#ifndef RTE_TYPE_DM_status_t
#define RTE_TYPE_DM_status_t
typedef VAR(unsigned char, TYPEDEF) DM_status_t;
#endif
#ifndef RTE_TYPE_eActualRangeMaxQual_t
#define RTE_TYPE_eActualRangeMaxQual_t
typedef VAR(unsigned char, TYPEDEF) eActualRangeMaxQual_t;
#endif
#ifndef RTE_TYPE_Damping_t
#define RTE_TYPE_Damping_t
typedef struct
{
  VAR(float, TYPEDEF) fSysDampRangeMax;
  VAR(float, TYPEDEF) fSysDampRangeMaxConf;
  VAR(float, TYPEDEF) fActualRangeMax;
  VAR(eActualRangeMaxQual_t, TYPEDEF) eActualRangeMaxQual;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
  VAR(unsigned char, TYPEDEF) reserved3;
  VAR(float, TYPEDEF) fExtDstrbRangeMax;
  VAR(float, TYPEDEF) fExtDstrbRangeMaxConf;
} Damping_t;
#endif
#ifndef RTE_TYPE_DcgState_t
#define RTE_TYPE_DcgState_t
typedef VAR(unsigned char, TYPEDEF) DcgState_t;
#endif
#ifndef RTE_TYPE_DeactivateSpeed
#define RTE_TYPE_DeactivateSpeed
typedef VAR(float, TYPEDEF) DeactivateSpeed;
#endif
#ifndef RTE_TYPE_DeactivateSpeedHigh
#define RTE_TYPE_DeactivateSpeedHigh
typedef VAR(float, TYPEDEF) DeactivateSpeedHigh;
#endif
#ifndef RTE_TYPE_VehGuiCtrl_FTireVel_mps_array_t
#define RTE_TYPE_VehGuiCtrl_FTireVel_mps_array_t
typedef VAR(float, TYPEDEF) VehGuiCtrl_FTireVel_mps_array_t[7];
#endif
#ifndef RTE_TYPE_VehGuiCtrl_DeadTime_s_array_t
#define RTE_TYPE_VehGuiCtrl_DeadTime_s_array_t
typedef VAR(float, TYPEDEF) VehGuiCtrl_DeadTime_s_array_t[7];
#endif
#ifndef RTE_TYPE_DeadTimeCalc_t
#define RTE_TYPE_DeadTimeCalc_t
typedef struct
{
  VAR(VehGuiCtrl_FTireVel_mps_array_t, TYPEDEF) VehGuiCtrl_FTireVel_mps;
  VAR(VehGuiCtrl_DeadTime_s_array_t, TYPEDEF) VehGuiCtrl_DeadTime_s;
} DeadTimeCalc_t;
#endif
#ifndef RTE_TYPE_Degradation_Status_t
#define RTE_TYPE_Degradation_Status_t
typedef VAR(unsigned char, TYPEDEF) Degradation_Status_t;
#endif
#ifndef RTE_TYPE_DesiredTraj_t
#define RTE_TYPE_DesiredTraj_t
typedef struct
{
  VAR(float, TYPEDEF) TrajDistY_m;
  VAR(float, TYPEDEF) TrajHeading_rad;
  VAR(float, TYPEDEF) TrajHeadingInclPreview_rad;
} DesiredTraj_t;
#endif
#ifndef RTE_TYPE_uNameSubType_array_t
#define RTE_TYPE_uNameSubType_array_t
typedef VAR(unsigned char, TYPEDEF) uNameSubType_array_t[8];
#endif
#ifndef RTE_TYPE_DetectorSubType_t
#define RTE_TYPE_DetectorSubType_t
typedef struct
{
  VAR(uNameSubType_array_t, TYPEDEF) uNameSubType;
} DetectorSubType_t;
#endif
#ifndef RTE_TYPE_DetectorSubType_array_t
#define RTE_TYPE_DetectorSubType_array_t
typedef VAR(DetectorSubType_t, TYPEDEF) DetectorSubType_array_t[8];
#endif
#ifndef RTE_TYPE_uName_array_t
#define RTE_TYPE_uName_array_t
typedef VAR(unsigned char, TYPEDEF) uName_array_t[24];
#endif
#ifndef RTE_TYPE_uRelErrorAnchorXStdDevCurve_array_t
#define RTE_TYPE_uRelErrorAnchorXStdDevCurve_array_t
typedef VAR(unsigned char, TYPEDEF) uRelErrorAnchorXStdDevCurve_array_t[10];
#endif
#ifndef RTE_TYPE_uRelErrorAnchorYStdDevCurve_array_t
#define RTE_TYPE_uRelErrorAnchorYStdDevCurve_array_t
typedef VAR(unsigned char, TYPEDEF) uRelErrorAnchorYStdDevCurve_array_t[10];
#endif
#ifndef RTE_TYPE_uRelErrorSizeStdDevCurve_array_t
#define RTE_TYPE_uRelErrorSizeStdDevCurve_array_t
typedef VAR(unsigned char, TYPEDEF) uRelErrorSizeStdDevCurve_array_t[10];
#endif
#ifndef RTE_TYPE_VodcaDominantDirection_t
#define RTE_TYPE_VodcaDominantDirection_t
typedef VAR(unsigned char, TYPEDEF) VodcaDominantDirection_t;
#endif
#ifndef RTE_TYPE_Detector_t
#define RTE_TYPE_Detector_t
typedef struct
{
  VAR(uName_array_t, TYPEDEF) uName;
  VAR(unsigned int, TYPEDEF) uVersion;
  VAR(unsigned int, TYPEDEF) uDate;
  VAR(float, TYPEDEF) fScaleFactorStepSize;
  VAR(short, TYPEDEF) sMinHypSizeDomDirection;
  VAR(short, TYPEDEF) sMaxHypSizeDomDirection;
  VAR(float, TYPEDEF) fNumCellsHypDomDir;
  VAR(float, TYPEDEF) fFixToFloatScaleFactorStdDev;
  VAR(float, TYPEDEF) fRelErrorAnchorXMean;
  VAR(uRelErrorAnchorXStdDevCurve_array_t, TYPEDEF) uRelErrorAnchorXStdDevCurve;
  VAR(float, TYPEDEF) fRelErrorAnchorYMean;
  VAR(uRelErrorAnchorYStdDevCurve_array_t, TYPEDEF) uRelErrorAnchorYStdDevCurve;
  VAR(float, TYPEDEF) fRelErrorSizeDomDirMean;
  VAR(uRelErrorSizeStdDevCurve_array_t, TYPEDEF) uRelErrorSizeStdDevCurve;
  VAR(float, TYPEDEF) fGreedyNMSOverlap;
  VAR(unsigned char, TYPEDEF) uId;
  VAR(VodcaDominantDirection_t, TYPEDEF) eDominantDirection;
  VAR(DetectorSubType_array_t, TYPEDEF) DetectorSubType;
} Detector_t;
#endif
#ifndef RTE_TYPE_Detector_array_t
#define RTE_TYPE_Detector_array_t
typedef VAR(Detector_t, TYPEDEF) Detector_array_t[64];
#endif
#ifndef RTE_TYPE_DevDataTyp64
#define RTE_TYPE_DevDataTyp64
typedef struct
{
  VAR(uint8_t, TYPEDEF) Byte0;
  VAR(uint8_t, TYPEDEF) Byte1;
  VAR(uint8_t, TYPEDEF) Byte2;
  VAR(uint8_t, TYPEDEF) Byte3;
  VAR(uint8_t, TYPEDEF) Byte4;
  VAR(uint8_t, TYPEDEF) Byte5;
  VAR(uint8_t, TYPEDEF) Byte6;
  VAR(uint8_t, TYPEDEF) Byte7;
} DevDataTyp64;
#endif
#ifndef RTE_TYPE_DiagReq_t
#define RTE_TYPE_DiagReq_t
typedef VAR(unsigned int, TYPEDEF) DiagReq_t;
#endif
#ifndef RTE_TYPE_RTE_HLAF_DimmingLevel
#define RTE_TYPE_RTE_HLAF_DimmingLevel
typedef VAR(unsigned char, TYPEDEF) RTE_HLAF_DimmingLevel;
#endif
#ifndef RTE_TYPE_DimmingArea_array_t
#define RTE_TYPE_DimmingArea_array_t
typedef VAR(RTE_HLAF_DimmingLevel, TYPEDEF) DimmingArea_array_t[5];
#endif
#ifndef RTE_TYPE_DimmingDetection
#define RTE_TYPE_DimmingDetection
typedef VAR(DimmingDetection_t, TYPEDEF) DimmingDetection;
#endif
#ifndef RTE_TYPE_DisparityElement_t
#define RTE_TYPE_DisparityElement_t
typedef VAR(unsigned short, TYPEDEF) DisparityElement_t;
#endif
#ifndef RTE_TYPE_DisplayOutputSignalState_t
#define RTE_TYPE_DisplayOutputSignalState_t
typedef VAR(unsigned char, TYPEDEF) DisplayOutputSignalState_t;
#endif
#ifndef RTE_TYPE_DistCameraToHoodX
#define RTE_TYPE_DistCameraToHoodX
typedef VAR(float, TYPEDEF) DistCameraToHoodX;
#endif
#ifndef RTE_TYPE_DistCameraToHoodY
#define RTE_TYPE_DistCameraToHoodY
typedef VAR(float, TYPEDEF) DistCameraToHoodY;
#endif
#ifndef RTE_TYPE_DistX
#define RTE_TYPE_DistX
typedef VAR(float, TYPEDEF) DistX;
#endif
#ifndef RTE_TYPE_DistY
#define RTE_TYPE_DistY
typedef VAR(float, TYPEDEF) DistY;
#endif
#ifndef RTE_TYPE_DriveMode_t_e
#define RTE_TYPE_DriveMode_t_e
typedef VAR(unsigned char, TYPEDEF) DriveMode_t_e;
#endif
#ifndef RTE_TYPE_DrvAttWarnQualifier_nu_t
#define RTE_TYPE_DrvAttWarnQualifier_nu_t
typedef VAR(unsigned char, TYPEDEF) DrvAttWarnQualifier_nu_t;
#endif
#ifndef RTE_TYPE_VDYDrvAxle_t
#define RTE_TYPE_VDYDrvAxle_t
typedef VAR(unsigned char, TYPEDEF) VDYDrvAxle_t;
#endif
#ifndef RTE_TYPE_DrvAxle
#define RTE_TYPE_DrvAxle
typedef VAR(VDYDrvAxle_t, TYPEDEF) DrvAxle;
#endif
#ifndef RTE_TYPE_DrvIntCurveVehDyn_t
#define RTE_TYPE_DrvIntCurveVehDyn_t
typedef struct
{
  VAR(float, TYPEDEF) Curve;
  VAR(SignalHeader_t, TYPEDEF) CurveTimestamp;
  VAR(float, TYPEDEF) Variance;
  VAR(float, TYPEDEF) Gradient;
} DrvIntCurveVehDyn_t;
#endif
#ifndef RTE_TYPE_DrvIntCurve_t
#define RTE_TYPE_DrvIntCurve_t
typedef struct
{
  VAR(fCurve_t, TYPEDEF) Curve;
} DrvIntCurve_t;
#endif
#ifndef RTE_TYPE_DrvrBrkTqAtWhlsReqdRec1
#define RTE_TYPE_DrvrBrkTqAtWhlsReqdRec1
typedef struct
{
  VAR(sint16_t, TYPEDEF) DrvrBrkTqAtWhlsReqd;
  VAR(GenQf_t, TYPEDEF) DrvrBrkTqAtWhlsReqdQf;
  VAR(uint8_t, TYPEDEF) DrvrBrkTqAtWhlsReqdChks;
  VAR(uint8_t, TYPEDEF) DrvrBrkTqAtWhlsReqdCntr;
} DrvrBrkTqAtWhlsReqdRec1;
#endif
#ifndef RTE_TYPE_UpTipAut_t
#define RTE_TYPE_UpTipAut_t
typedef VAR(boolean, TYPEDEF) UpTipAut_t;
#endif
#ifndef RTE_TYPE_PosnAut_t
#define RTE_TYPE_PosnAut_t
typedef VAR(boolean, TYPEDEF) PosnAut_t;
#endif
#ifndef RTE_TYPE_DwnTipAut_t
#define RTE_TYPE_DwnTipAut_t
typedef VAR(boolean, TYPEDEF) DwnTipAut_t;
#endif
#ifndef RTE_TYPE_DrvrGearShiftDirReq2Safe1
#define RTE_TYPE_DrvrGearShiftDirReq2Safe1
typedef struct
{
  VAR(UpTipAut_t, TYPEDEF) UpTipAut;
  VAR(PosnAut_t, TYPEDEF) PosnAut;
  VAR(DwnTipAut_t, TYPEDEF) DwnTipAut;
  VAR(uint8_t, TYPEDEF) Cntr;
  VAR(uint8_t, TYPEDEF) Chks;
} DrvrGearShiftDirReq2Safe1;
#endif
#ifndef RTE_TYPE_DrvrPrsnt1
#define RTE_TYPE_DrvrPrsnt1
typedef struct
{
  VAR(uint8_t, TYPEDEF) DrvrPrsnt;
  VAR(uint8_t, TYPEDEF) DrvrPrsntQf;
  VAR(uint8_t, TYPEDEF) DrvrPrsntChks;
  VAR(uint8_t, TYPEDEF) DrvrPrsntCntr;
} DrvrPrsnt1;
#endif
#ifndef RTE_TYPE_Flg_t
#define RTE_TYPE_Flg_t
typedef VAR(boolean, TYPEDEF) Flg_t;
#endif
#ifndef RTE_TYPE_DtEngdStRec
#define RTE_TYPE_DtEngdStRec
typedef struct
{
  VAR(Flg_t, TYPEDEF) DtEngdFrnt;
  VAR(Flg_t, TYPEDEF) DtNotEngdFrnt;
  VAR(Flg_t, TYPEDEF) DtEngdRe;
  VAR(Flg_t, TYPEDEF) DtNotEngdRe;
} DtEngdStRec;
#endif
#ifndef RTE_TYPE_DynConfidence
#define RTE_TYPE_DynConfidence
typedef VAR(unsigned char, TYPEDEF) DynConfidence;
#endif
#ifndef RTE_TYPE_HLA_RadarObjDynamicProperty
#define RTE_TYPE_HLA_RadarObjDynamicProperty
typedef VAR(unsigned char, TYPEDEF) HLA_RadarObjDynamicProperty;
#endif
#ifndef RTE_TYPE_DynamicProperty
#define RTE_TYPE_DynamicProperty
typedef VAR(HLA_RadarObjDynamicProperty, TYPEDEF) DynamicProperty;
#endif
#ifndef RTE_TYPE_EM_t_GenEbaInhibit
#define RTE_TYPE_EM_t_GenEbaInhibit
typedef VAR(unsigned short, TYPEDEF) EM_t_GenEbaInhibit;
#endif
#ifndef RTE_TYPE_EM_t_GenEbaHypCat
#define RTE_TYPE_EM_t_GenEbaHypCat
typedef VAR(unsigned char, TYPEDEF) EM_t_GenEbaHypCat;
#endif
#ifndef RTE_TYPE_EM_t_GenEbaQualifier
#define RTE_TYPE_EM_t_GenEbaQualifier
typedef VAR(unsigned char, TYPEDEF) EM_t_GenEbaQualifier;
#endif
#ifndef RTE_TYPE_EM_t_GenEbaObjMovState
#define RTE_TYPE_EM_t_GenEbaObjMovState
typedef VAR(unsigned char, TYPEDEF) EM_t_GenEbaObjMovState;
#endif
#ifndef RTE_TYPE_EBAPresel_t
#define RTE_TYPE_EBAPresel_t
typedef struct
{
  VAR(float, TYPEDEF) fEbaQuality;
  VAR(EM_t_GenEbaInhibit, TYPEDEF) eEbaInhibitionMask;
  VAR(EM_t_GenEbaHypCat, TYPEDEF) eEbaHypCat;
  VAR(boolean, TYPEDEF) bCrossingPedEbaPresel;
  VAR(EM_t_GenEbaQualifier, TYPEDEF) eEbaQualifierEnable;
  VAR(EM_t_GenEbaQualifier, TYPEDEF) eEbaQualifierKeep;
  VAR(EM_t_GenEbaObjMovState, TYPEDEF) eEBAObjMovStateCurr;
  VAR(EM_t_GenEbaObjMovState, TYPEDEF) eEBAObjMovStatePrev;
} EBAPresel_t;
#endif
#ifndef RTE_TYPE_EBA_Active_Condition_Custom_t
#define RTE_TYPE_EBA_Active_Condition_Custom_t
typedef VAR(unsigned char, TYPEDEF) EBA_Active_Condition_Custom_t;
#endif
#ifndef RTE_TYPE_EMB0_t_SensorSource
#define RTE_TYPE_EMB0_t_SensorSource
typedef VAR(unsigned char, TYPEDEF) EMB0_t_SensorSource;
#endif
#ifndef RTE_TYPE_EMB0_t_Service
#define RTE_TYPE_EMB0_t_Service
typedef VAR(unsigned char, TYPEDEF) EMB0_t_Service;
#endif
#ifndef RTE_TYPE_eRefpointLocation_t
#define RTE_TYPE_eRefpointLocation_t
typedef VAR(unsigned char, TYPEDEF) eRefpointLocation_t;
#endif
#ifndef RTE_TYPE_EM_t_CamObjKinematicsSubset
#define RTE_TYPE_EM_t_CamObjKinematicsSubset
typedef struct
{
  VAR(float, TYPEDEF) fYaw;
  VAR(float, TYPEDEF) fYawStd;
  VAR(float, TYPEDEF) fVrelX;
  VAR(float, TYPEDEF) fVrelY;
  VAR(float, TYPEDEF) fVrelXStd;
  VAR(float, TYPEDEF) fVrelYStd;
  VAR(eRefpointLocation_t, TYPEDEF) eRefpointLocation;
  VAR(unsigned char, TYPEDEF) dummy_00;
  VAR(unsigned char, TYPEDEF) dummy_01;
  VAR(unsigned char, TYPEDEF) dummy_03;
} EM_t_CamObjKinematicsSubset;
#endif
#ifndef RTE_TYPE_EM_t_CamObjGeometrySubset
#define RTE_TYPE_EM_t_CamObjGeometrySubset
typedef struct
{
  VAR(float, TYPEDEF) fHeight;
  VAR(float, TYPEDEF) fLength;
  VAR(float, TYPEDEF) fWidth;
  VAR(float, TYPEDEF) fOffsetToGround;
} EM_t_CamObjGeometrySubset;
#endif
#ifndef RTE_TYPE_EM_t_CamObjStatusBrakeLight
#define RTE_TYPE_EM_t_CamObjStatusBrakeLight
typedef VAR(unsigned char, TYPEDEF) EM_t_CamObjStatusBrakeLight;
#endif
#ifndef RTE_TYPE_EM_t_CamObjStatusTurnIndicator
#define RTE_TYPE_EM_t_CamObjStatusTurnIndicator
typedef VAR(unsigned char, TYPEDEF) EM_t_CamObjStatusTurnIndicator;
#endif
#ifndef RTE_TYPE_EM_t_CamObjLaneChange
#define RTE_TYPE_EM_t_CamObjLaneChange
typedef VAR(unsigned char, TYPEDEF) EM_t_CamObjLaneChange;
#endif
#ifndef RTE_TYPE_EM_t_CamObjAttributesSubset
#define RTE_TYPE_EM_t_CamObjAttributesSubset
typedef struct
{
  VAR(EM_t_CamObjStatusBrakeLight, TYPEDEF) eStatusBrakeLight;
  VAR(percentage_t, TYPEDEF) uiBrakeLightConfidence;
  VAR(EM_t_CamObjStatusTurnIndicator, TYPEDEF) eStatusTurnIndicator;
  VAR(percentage_t, TYPEDEF) uiTurnIndicatorConfidence;
  VAR(EM_t_CamObjAssociatedLane, TYPEDEF) eAssociatedLane;
  VAR(percentage_t, TYPEDEF) uiAssociatedLaneConfidence;
  VAR(EM_t_CamObjLaneChange, TYPEDEF) eLaneChangeManeuver;
  VAR(percentage_t, TYPEDEF) percentageOwnDrivingLane;
  VAR(percentage_t, TYPEDEF) percentageSideDrivingLaneLeft;
  VAR(percentage_t, TYPEDEF) percentageSideDrivingLaneRight;
  VAR(unsigned char, TYPEDEF) dummy_04;
  VAR(unsigned char, TYPEDEF) dummy_05;
} EM_t_CamObjAttributesSubset;
#endif
#ifndef RTE_TYPE_EM_t_CamObjectSubset
#define RTE_TYPE_EM_t_CamObjectSubset
typedef struct
{
  VAR(EM_t_CamObjKinematicsSubset, TYPEDEF) Kinematic;
  VAR(EM_t_CamObjGeometrySubset, TYPEDEF) Geometry;
  VAR(EM_t_CamObjAttributesSubset, TYPEDEF) Attributes;
} EM_t_CamObjectSubset;
#endif
#ifndef RTE_TYPE_EM_t_GenObjKinematicsSubset
#define RTE_TYPE_EM_t_GenObjKinematicsSubset
typedef struct
{
  VAR(float, TYPEDEF) fDistX;
  VAR(float, TYPEDEF) fDistXStd;
  VAR(float, TYPEDEF) fDistY;
  VAR(float, TYPEDEF) fDistYStd;
  VAR(float, TYPEDEF) fVabsX;
  VAR(float, TYPEDEF) fVabsXStd;
  VAR(float, TYPEDEF) fVabsY;
  VAR(float, TYPEDEF) fVabsYStd;
  VAR(float, TYPEDEF) fAabsX;
  VAR(float, TYPEDEF) fAabsXStd;
  VAR(float, TYPEDEF) fAabsY;
  VAR(float, TYPEDEF) fAabsYStd;
} EM_t_GenObjKinematicsSubset;
#endif
#ifndef RTE_TYPE_EM_t_GenObjShapePointState
#define RTE_TYPE_EM_t_GenObjShapePointState
typedef VAR(unsigned char, TYPEDEF) EM_t_GenObjShapePointState;
#endif
#ifndef RTE_TYPE_EM_t_GenObjSPSArray_t
#define RTE_TYPE_EM_t_GenObjSPSArray_t
typedef VAR(EM_t_GenObjShapePointState, TYPEDEF) EM_t_GenObjSPSArray_t[4];
#endif
#ifndef RTE_TYPE_EM_t_GenObjShapePointCoord
#define RTE_TYPE_EM_t_GenObjShapePointCoord
typedef struct
{
  VAR(float, TYPEDEF) fPosX;
  VAR(float, TYPEDEF) fPosY;
  VAR(unsigned short, TYPEDEF) uiPosXStd;
  VAR(unsigned short, TYPEDEF) uiPosYStd;
} EM_t_GenObjShapePointCoord;
#endif
#ifndef RTE_TYPE_EM_t_GenObjSPCArray_t
#define RTE_TYPE_EM_t_GenObjSPCArray_t
typedef VAR(EM_t_GenObjShapePointCoord, TYPEDEF) EM_t_GenObjSPCArray_t[4];
#endif
#ifndef RTE_TYPE_EM_t_GenObjGeometry
#define RTE_TYPE_EM_t_GenObjGeometry
typedef struct
{
  VAR(EM_t_GenObjSPSArray_t, TYPEDEF) aShapePointStates;
  VAR(EM_t_GenObjSPCArray_t, TYPEDEF) aShapePointCoordinates;
} EM_t_GenObjGeometry;
#endif
#ifndef RTE_TYPE_EM_t_GenObjOcclusionState
#define RTE_TYPE_EM_t_GenObjOcclusionState
typedef VAR(unsigned char, TYPEDEF) EM_t_GenObjOcclusionState;
#endif
#ifndef RTE_TYPE_EM_t_GenObjAttributesSubset
#define RTE_TYPE_EM_t_GenObjAttributesSubset
typedef struct
{
  VAR(EM_t_GenObjDynamicProperty, TYPEDEF) eDynamicProperty;
  VAR(unsigned char, TYPEDEF) uiDynConfidence;
  VAR(EM_t_GenObjClassification, TYPEDEF) eClassification;
  VAR(unsigned char, TYPEDEF) uiClassConfidence;
  VAR(EM_t_GenObjOcclusionState, TYPEDEF) eObjectOcclusion;
  VAR(unsigned char, TYPEDEF) dummy_06;
  VAR(unsigned char, TYPEDEF) dummy_07;
  VAR(unsigned char, TYPEDEF) dummy_08;
} EM_t_GenObjAttributesSubset;
#endif
#ifndef RTE_TYPE_EM_t_GenObjGeneralsSubset
#define RTE_TYPE_EM_t_GenObjGeneralsSubset
typedef struct
{
  VAR(AlgoCycleCounter_t, TYPEDEF) uiLifeCycles;
  VAR(EM_t_GenObjMaintenanceState, TYPEDEF) eMaintenanceState;
  VAR(unsigned char, TYPEDEF) uiID;
  VAR(EM_t_GenObjSensorSource, TYPEDEF) eSensorSource;
} EM_t_GenObjGeneralsSubset;
#endif
#ifndef RTE_TYPE_EM_t_GenObjQualifiersSubset
#define RTE_TYPE_EM_t_GenObjQualifiersSubset
typedef struct
{
  VAR(unsigned char, TYPEDEF) uiProbabilityOfExistence;
  VAR(unsigned char, TYPEDEF) uiAccObjQuality;
  VAR(unsigned char, TYPEDEF) uiEbaObjQuality;
  VAR(EM_t_GenEbaInhibit, TYPEDEF) eEbaInhibitionMask;
} EM_t_GenObjQualifiersSubset;
#endif
#ifndef RTE_TYPE_EM_t_GenObjectSubset
#define RTE_TYPE_EM_t_GenObjectSubset
typedef struct
{
  VAR(EM_t_GenObjKinematicsSubset, TYPEDEF) Kinematic;
  VAR(EM_t_GenObjGeometry, TYPEDEF) Geometry;
  VAR(EM_t_GenObjAttributesSubset, TYPEDEF) Attributes;
  VAR(EM_t_GenObjGeneralsSubset, TYPEDEF) General;
  VAR(EM_t_GenObjQualifiersSubset, TYPEDEF) Qualifiers;
} EM_t_GenObjectSubset;
#endif
#ifndef RTE_TYPE_EM_t_BaseCamInput
#define RTE_TYPE_EM_t_BaseCamInput
typedef struct
{
  VAR(EM_t_CamObjectSubset, TYPEDEF) CamObject;
  VAR(EM_t_GenObjectSubset, TYPEDEF) GenObject;
} EM_t_BaseCamInput;
#endif
#ifndef RTE_TYPE_EMBase_t_CamObjInputArray
#define RTE_TYPE_EMBase_t_CamObjInputArray
typedef VAR(EM_t_BaseCamInput, TYPEDEF) EMBase_t_CamObjInputArray[12];
#endif
#ifndef RTE_TYPE_EMBase_t_CamSensorState
#define RTE_TYPE_EMBase_t_CamSensorState
typedef VAR(unsigned char, TYPEDEF) EMBase_t_CamSensorState;
#endif
#ifndef RTE_TYPE_a_cosAzAng_array_t
#define RTE_TYPE_a_cosAzAng_array_t
typedef VAR(float, TYPEDEF) a_cosAzAng_array_t[2];
#endif
#ifndef RTE_TYPE_a_sinAzAng_array_t
#define RTE_TYPE_a_sinAzAng_array_t
typedef VAR(float, TYPEDEF) a_sinAzAng_array_t[2];
#endif
#ifndef RTE_TYPE_a_RCS_array_t
#define RTE_TYPE_a_RCS_array_t
typedef VAR(short, TYPEDEF) a_RCS_array_t[2];
#endif
#ifndef RTE_TYPE_a_MovingProb_array_t
#define RTE_TYPE_a_MovingProb_array_t
typedef VAR(unsigned char, TYPEDEF) a_MovingProb_array_t[2];
#endif
#ifndef RTE_TYPE_uEMDet_AzAngValid_t
#define RTE_TYPE_uEMDet_AzAngValid_t
typedef VAR(unsigned char, TYPEDEF) uEMDet_AzAngValid_t;
#endif
#ifndef RTE_TYPE_uEMDet_Qualifier_t
#define RTE_TYPE_uEMDet_Qualifier_t
typedef VAR(unsigned char, TYPEDEF) uEMDet_Qualifier_t;
#endif
#ifndef RTE_TYPE_EM_t_detection
#define RTE_TYPE_EM_t_detection
typedef struct
{
  VAR(a_cosAzAng_array_t, TYPEDEF) a_cosAzAng;
  VAR(a_sinAzAng_array_t, TYPEDEF) a_sinAzAng;
  VAR(a_RCS_array_t, TYPEDEF) a_RCS;
  VAR(a_MovingProb_array_t, TYPEDEF) a_MovingProb;
  VAR(short, TYPEDEF) s_RSPCluIdx;
  VAR(uEMDet_AzAngValid_t, TYPEDEF) u_AzHypValid;
  VAR(uEMDet_Qualifier_t, TYPEDEF) u_Qualifier;
  VAR(unsigned char, TYPEDEF) u_Dummy0;
  VAR(unsigned char, TYPEDEF) u_Dummy1;
} EM_t_detection;
#endif
#ifndef RTE_TYPE_EMDetectionArray_array_t
#define RTE_TYPE_EMDetectionArray_array_t
typedef VAR(EM_t_detection, TYPEDEF) EMDetectionArray_array_t[600];
#endif
#ifndef RTE_TYPE_EMT0_t_CamDetectionMode
#define RTE_TYPE_EMT0_t_CamDetectionMode
typedef VAR(unsigned char, TYPEDEF) EMT0_t_CamDetectionMode;
#endif
#ifndef RTE_TYPE_EMT0_t_CamObjAssociatedLane
#define RTE_TYPE_EMT0_t_CamObjAssociatedLane
typedef VAR(unsigned char, TYPEDEF) EMT0_t_CamObjAssociatedLane;
#endif
#ifndef RTE_TYPE_EMT0_t_CamSensorState
#define RTE_TYPE_EMT0_t_CamSensorState
typedef VAR(unsigned char, TYPEDEF) EMT0_t_CamSensorState;
#endif
#ifndef RTE_TYPE_EMT0_t_MCamObjDynProp
#define RTE_TYPE_EMT0_t_MCamObjDynProp
typedef VAR(unsigned char, TYPEDEF) EMT0_t_MCamObjDynProp;
#endif
#ifndef RTE_TYPE_EMT0_t_MCamObjClass
#define RTE_TYPE_EMT0_t_MCamObjClass
typedef VAR(unsigned char, TYPEDEF) EMT0_t_MCamObjClass;
#endif
#ifndef RTE_TYPE_EMT0_t_ObjFlashLightStat
#define RTE_TYPE_EMT0_t_ObjFlashLightStat
typedef VAR(unsigned char, TYPEDEF) EMT0_t_ObjFlashLightStat;
#endif
#ifndef RTE_TYPE_EMT0_t_ObjectRecognitionInfo
#define RTE_TYPE_EMT0_t_ObjectRecognitionInfo
typedef struct
{
  VAR(float, TYPEDEF) f_DistX;
  VAR(float, TYPEDEF) f_DistY;
  VAR(float, TYPEDEF) f_VabsX;
  VAR(float, TYPEDEF) f_VabsY;
  VAR(EMT0_t_MCamObjDynProp, TYPEDEF) e_DynamicProperty;
  VAR(EMT0_t_MCamObjClass, TYPEDEF) e_Classification;
  VAR(unsigned char, TYPEDEF) ui_Quality;
  VAR(unsigned char, TYPEDEF) ui_ID;
  VAR(EMT0_t_ObjFlashLightStat, TYPEDEF) e_StatusFlashLight;
  VAR(Accuracy_t, TYPEDEF) ui_Accuracy;
  VAR(EMT0_t_CamObjAssociatedLane, TYPEDEF) eAssociatedLane;
  VAR(unsigned char, TYPEDEF) uiAssignedLaneLeftQuota;
  VAR(unsigned char, TYPEDEF) uiAssignedLaneRightQuota;
  VAR(unsigned char, TYPEDEF) ui_Reserved1;
  VAR(unsigned char, TYPEDEF) ui_Reserved2;
  VAR(unsigned char, TYPEDEF) ui_Reserved3;
} EMT0_t_ObjectRecognitionInfo;
#endif
#ifndef RTE_TYPE_EMT0_t_MCamObjArray
#define RTE_TYPE_EMT0_t_MCamObjArray
typedef VAR(EMT0_t_ObjectRecognitionInfo, TYPEDEF) EMT0_t_MCamObjArray[12];
#endif
#ifndef RTE_TYPE_EMT0_t_ObjectListHeader
#define RTE_TYPE_EMT0_t_ObjectListHeader
typedef struct
{
  VAR(float, TYPEDEF) f_CamObjAge;
  VAR(EMT0_t_CamSensorState, TYPEDEF) e_CamSensorState;
  VAR(EMT0_t_CamDetectionMode, TYPEDEF) e_CamDetectionMode;
  VAR(unsigned char, TYPEDEF) ui_CamNumObjects;
  VAR(unsigned char, TYPEDEF) b_ValidCRC;
  VAR(unsigned char, TYPEDEF) ui_MsgCounter;
  VAR(unsigned char, TYPEDEF) ui_Reserved1;
  VAR(unsigned char, TYPEDEF) ui_Reserved2;
  VAR(unsigned char, TYPEDEF) ui_Reserved3;
} EMT0_t_ObjectListHeader;
#endif
#ifndef RTE_TYPE_EMT0_t_ObjectList_MCAM
#define RTE_TYPE_EMT0_t_ObjectList_MCAM
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(EMT0_t_ObjectListHeader, TYPEDEF) objectListHeader;
  VAR(EMT0_t_MCamObjArray, TYPEDEF) a_ObjRecognitionInfo;
} EMT0_t_ObjectList_MCAM;
#endif
#ifndef RTE_TYPE_EM_t_Cust_MatchType
#define RTE_TYPE_EM_t_Cust_MatchType
typedef VAR(unsigned char, TYPEDEF) EM_t_Cust_MatchType;
#endif
#ifndef RTE_TYPE_ucConfidence_t
#define RTE_TYPE_ucConfidence_t
typedef VAR(unsigned char, TYPEDEF) ucConfidence_t;
#endif
#ifndef RTE_TYPE_EM_t_Cust_MatchingList
#define RTE_TYPE_EM_t_Cust_MatchingList
typedef struct
{
  VAR(unsigned char, TYPEDEF) u_RadarObjID;
  VAR(EM_t_Cust_MatchType, TYPEDEF) MatchType;
  VAR(ucConfidence_t, TYPEDEF) u_MatchConfidence;
  VAR(unsigned char, TYPEDEF) u_VideoMatchID;
} EM_t_Cust_MatchingList;
#endif
#ifndef RTE_TYPE_EM_Cust_MatchingList_array_t
#define RTE_TYPE_EM_Cust_MatchingList_array_t
typedef VAR(EM_t_Cust_MatchingList, TYPEDEF) EM_Cust_MatchingList_array_t[10];
#endif
#ifndef RTE_TYPE_ImageTrackingData_t
#define RTE_TYPE_ImageTrackingData_t
typedef struct
{
  VAR(boolean, TYPEDEF) bTrackRequest;
  VAR(float, TYPEDEF) fTopLeftXpx;
  VAR(float, TYPEDEF) fTopLeftYpx;
  VAR(float, TYPEDEF) fBottomRightXpx;
  VAR(float, TYPEDEF) fBottomRightYpx;
  VAR(float, TYPEDEF) fStdDevXpx;
  VAR(float, TYPEDEF) fStdDevYpx;
  VAR(float, TYPEDEF) fStdDevHeightpx;
  VAR(float, TYPEDEF) fDistX;
  VAR(float, TYPEDEF) fDistY;
  VAR(float, TYPEDEF) fVelAbsX;
  VAR(float, TYPEDEF) fVelAbsY;
} ImageTrackingData_t;
#endif
#ifndef RTE_TYPE_PEDObjectData_t
#define RTE_TYPE_PEDObjectData_t
typedef struct
{
  VAR(boolean, TYPEDEF) bIsValid;
  VAR(unsigned char, TYPEDEF) uPriority;
  VAR(ImageTrackingData_t, TYPEDEF) ImageTrackingData;
} PEDObjectData_t;
#endif
#ifndef RTE_TYPE_PEDObjectData_array_t
#define RTE_TYPE_PEDObjectData_array_t
typedef VAR(PEDObjectData_t, TYPEDEF) PEDObjectData_array_t[40];
#endif
#ifndef RTE_TYPE_EM_PED_Output_t
#define RTE_TYPE_EM_PED_Output_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSignalHeader;
  VAR(PEDObjectData_array_t, TYPEDEF) PEDObjectData;
} EM_PED_Output_t;
#endif
#ifndef RTE_TYPE_VCLObjectData_t
#define RTE_TYPE_VCLObjectData_t
typedef struct
{
  VAR(boolean, TYPEDEF) bIsValid;
  VAR(int, TYPEDEF) VCLObjID;
} VCLObjectData_t;
#endif
#ifndef RTE_TYPE_VCLObjectData_array_t
#define RTE_TYPE_VCLObjectData_array_t
typedef VAR(VCLObjectData_t, TYPEDEF) VCLObjectData_array_t[40];
#endif
#ifndef RTE_TYPE_VCLDistMeas_t
#define RTE_TYPE_VCLDistMeas_t
typedef struct
{
  VAR(int, TYPEDEF) iDistMeasID;
  VAR(float, TYPEDEF) fDist;
  VAR(float, TYPEDEF) fDistVar;
  VAR(float, TYPEDEF) fMeasQuality;
} VCLDistMeas_t;
#endif
#ifndef RTE_TYPE_VCLDistMeas_array_t
#define RTE_TYPE_VCLDistMeas_array_t
typedef VAR(VCLDistMeas_t, TYPEDEF) VCLDistMeas_array_t[40];
#endif
#ifndef RTE_TYPE_VCLDistMeasList_t
#define RTE_TYPE_VCLDistMeasList_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) NrOfValidMeasurements;
  VAR(VCLDistMeas_array_t, TYPEDEF) VCLDistMeas;
} VCLDistMeasList_t;
#endif
#ifndef RTE_TYPE_EM_VCL_Output_t
#define RTE_TYPE_EM_VCL_Output_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSignalHeader;
  VAR(VCLObjectData_array_t, TYPEDEF) VCLObjectData;
  VAR(VCLDistMeasList_t, TYPEDEF) VCLDistMeasList;
} EM_VCL_Output_t;
#endif
#ifndef RTE_TYPE_EM_t_ARS_Kinematic
#define RTE_TYPE_EM_t_ARS_Kinematic
typedef struct
{
  VAR(float, TYPEDEF) fMaxAccelY;
} EM_t_ARS_Kinematic;
#endif
#ifndef RTE_TYPE_EM_t_ARS_Geometry
#define RTE_TYPE_EM_t_ARS_Geometry
typedef struct
{
  VAR(float, TYPEDEF) fWidth;
  VAR(float, TYPEDEF) fLength;
  VAR(float, TYPEDEF) fOrientation;
  VAR(float, TYPEDEF) fOrientationStd;
} EM_t_ARS_Geometry;
#endif
#ifndef RTE_TYPE_EM_t_ARS_DynamicProperty
#define RTE_TYPE_EM_t_ARS_DynamicProperty
typedef VAR(unsigned char, TYPEDEF) EM_t_ARS_DynamicProperty;
#endif
#ifndef RTE_TYPE_EM_t_ARS_AbsMovingState
#define RTE_TYPE_EM_t_ARS_AbsMovingState
typedef VAR(unsigned char, TYPEDEF) EM_t_ARS_AbsMovingState;
#endif
#ifndef RTE_TYPE_EM_t_ARS_DynamicSubProperty
#define RTE_TYPE_EM_t_ARS_DynamicSubProperty
typedef VAR(unsigned char, TYPEDEF) EM_t_ARS_DynamicSubProperty;
#endif
#ifndef RTE_TYPE_EM_t_ARS_MotionAttributes
#define RTE_TYPE_EM_t_ARS_MotionAttributes
typedef struct
{
  VAR(EM_t_ARS_DynamicProperty, TYPEDEF) eDynamicProperty;
  VAR(ucConfidence_t, TYPEDEF) uiStoppedConfidence;
  VAR(EM_t_ARS_AbsMovingState, TYPEDEF) eAbsMovingState;
  VAR(EM_t_ARS_DynamicSubProperty, TYPEDEF) eDynamicSubProperty;
} EM_t_ARS_MotionAttributes;
#endif
#ifndef RTE_TYPE_EM_t_ARS_Classification
#define RTE_TYPE_EM_t_ARS_Classification
typedef VAR(unsigned char, TYPEDEF) EM_t_ARS_Classification;
#endif
#ifndef RTE_TYPE_TraceID_t
#define RTE_TYPE_TraceID_t
typedef VAR(unsigned char, TYPEDEF) TraceID_t;
#endif
#ifndef RTE_TYPE_EM_t_ARS_Attributes
#define RTE_TYPE_EM_t_ARS_Attributes
typedef struct
{
  VAR(EM_t_ARS_Classification, TYPEDEF) eClassification;
  VAR(ucConfidence_t, TYPEDEF) uiClassConfidence;
  VAR(unsigned char, TYPEDEF) ui8Dummy;
  VAR(TraceID_t, TYPEDEF) uiReferenceToTrace;
} EM_t_ARS_Attributes;
#endif
#ifndef RTE_TYPE_EM_t_ARS_MeasuredSources
#define RTE_TYPE_EM_t_ARS_MeasuredSources
typedef VAR(unsigned char, TYPEDEF) EM_t_ARS_MeasuredSources;
#endif
#ifndef RTE_TYPE_EM_t_ObjRelationsClass
#define RTE_TYPE_EM_t_ObjRelationsClass
typedef VAR(unsigned char, TYPEDEF) EM_t_ObjRelationsClass;
#endif
#ifndef RTE_TYPE_EM_t_FOVOverlapFar
#define RTE_TYPE_EM_t_FOVOverlapFar
typedef VAR(unsigned char, TYPEDEF) EM_t_FOVOverlapFar;
#endif
#ifndef RTE_TYPE_EM_t_ARS_SensorSpecific
#define RTE_TYPE_EM_t_ARS_SensorSpecific
typedef struct
{
  VAR(float, TYPEDEF) fRCS;
  VAR(float, TYPEDEF) fCurrTgtRCSNear;
  VAR(float, TYPEDEF) fCurrTgtRCSFar;
  VAR(EM_t_ARS_MeasuredSources, TYPEDEF) ucMeasuredSources;
  VAR(EM_t_ObjRelationsClass, TYPEDEF) eObjRelationsClass;
  VAR(EM_t_FOVOverlapFar, TYPEDEF) eFOVOverlapFar;
  VAR(boolean, TYPEDEF) bPedMicroDoppler;
  VAR(boolean, TYPEDEF) bNearObjInBeam;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
  VAR(unsigned char, TYPEDEF) reserved3;
} EM_t_ARS_SensorSpecific;
#endif
#ifndef RTE_TYPE_EM_t_ARS_Legacy
#define RTE_TYPE_EM_t_ARS_Legacy
typedef struct
{
  VAR(float, TYPEDEF) fAngle;
  VAR(float, TYPEDEF) fLastTargetDistY;
  VAR(float, TYPEDEF) fLastTargetDistX;
} EM_t_ARS_Legacy;
#endif
#ifndef RTE_TYPE_EM_t_ARSObject
#define RTE_TYPE_EM_t_ARSObject
typedef struct
{
  VAR(EM_t_ARS_Kinematic, TYPEDEF) Kinematic;
  VAR(EM_t_ARS_Geometry, TYPEDEF) Geometry;
  VAR(EM_t_ARS_MotionAttributes, TYPEDEF) MotionAttributes;
  VAR(EM_t_ARS_Attributes, TYPEDEF) Attributes;
  VAR(EM_t_ARS_SensorSpecific, TYPEDEF) SensorSpecific;
  VAR(EM_t_ARS_Legacy, TYPEDEF) Legacy;
} EM_t_ARSObject;
#endif
#ifndef RTE_TYPE_EM_t_ARSObjectArray
#define RTE_TYPE_EM_t_ARSObjectArray
typedef VAR(EM_t_ARSObject, TYPEDEF) EM_t_ARSObjectArray[40];
#endif
#ifndef RTE_TYPE_EM_t_ARSObjectList
#define RTE_TYPE_EM_t_ARSObjectList
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(EM_t_ARSObjectArray, TYPEDEF) aObject;
} EM_t_ARSObjectList;
#endif
#ifndef RTE_TYPE_EM_t_AmbigState
#define RTE_TYPE_EM_t_AmbigState
typedef VAR(unsigned char, TYPEDEF) EM_t_AmbigState;
#endif
#ifndef RTE_TYPE_EM_t_BaseCamObjectListHeader
#define RTE_TYPE_EM_t_BaseCamObjectListHeader
typedef struct
{
  VAR(float, TYPEDEF) f_CamObjListDelay;
  VAR(unsigned int, TYPEDEF) ui_GlobalTimeStamp_s;
  VAR(unsigned int, TYPEDEF) ui_GlobalTimeStamp_us;
  VAR(unsigned int, TYPEDEF) ui_AliveCounter;
  VAR(unsigned int, TYPEDEF) ui_CamVersionNumber;
  VAR(float, TYPEDEF) f_CamMountPosXrel;
  VAR(float, TYPEDEF) f_CamMountPosY;
  VAR(float, TYPEDEF) f_CamMountPosZ;
  VAR(EMBase_t_CamSensorState, TYPEDEF) e_CamSensorState;
  VAR(unsigned char, TYPEDEF) ui_CamNumObjects;
  VAR(unsigned char, TYPEDEF) ui_SyncRelative;
  VAR(unsigned char, TYPEDEF) ui_CamObstacleDetected;
} EM_t_BaseCamObjectListHeader;
#endif
#ifndef RTE_TYPE_EM_t_BaseObjectList_CAM
#define RTE_TYPE_EM_t_BaseObjectList_CAM
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(EM_t_BaseCamObjectListHeader, TYPEDEF) objectListHeader;
  VAR(EMBase_t_CamObjInputArray, TYPEDEF) aObject;
} EM_t_BaseObjectList_CAM;
#endif
#ifndef RTE_TYPE_EM_t_CamObjActiveFlag
#define RTE_TYPE_EM_t_CamObjActiveFlag
typedef VAR(unsigned char, TYPEDEF) EM_t_CamObjActiveFlag;
#endif
#ifndef RTE_TYPE_EM_t_CamObjAttributes
#define RTE_TYPE_EM_t_CamObjAttributes
typedef struct
{
  VAR(EM_t_CamObjStatusBrakeLight, TYPEDEF) eStatusBrakeLight;
  VAR(percentage_t, TYPEDEF) uiBrakeLightConfidence;
  VAR(EM_t_CamObjStatusTurnIndicator, TYPEDEF) eStatusTurnIndicator;
  VAR(percentage_t, TYPEDEF) uiTurnIndicatorConfidence;
  VAR(EM_t_CamObjAssociatedLane, TYPEDEF) eAssociatedLane;
  VAR(percentage_t, TYPEDEF) uiAssociatedLaneConfidence;
  VAR(EM_t_CamObjLaneChange, TYPEDEF) eLaneChangeManeuver;
  VAR(percentage_t, TYPEDEF) percentageOwnDrivingLane;
  VAR(percentage_t, TYPEDEF) percentageSideDrivingLaneLeft;
  VAR(percentage_t, TYPEDEF) percentageSideDrivingLaneRight;
} EM_t_CamObjAttributes;
#endif
#ifndef RTE_TYPE_EM_t_CamObjClassification
#define RTE_TYPE_EM_t_CamObjClassification
typedef struct
{
  VAR(percentage_t, TYPEDEF) probabilityPedestrian;
  VAR(percentage_t, TYPEDEF) probabilityCyclist;
  VAR(percentage_t, TYPEDEF) probabilityMotorbike;
  VAR(percentage_t, TYPEDEF) probabilityCar;
  VAR(percentage_t, TYPEDEF) probabilityTruck;
  VAR(percentage_t, TYPEDEF) probabilityOtherVehicle;
  VAR(percentage_t, TYPEDEF) probabilityRoadBoundry;
  VAR(percentage_t, TYPEDEF) probabilityUnknown;
  VAR(EM_t_CamObjActiveFlag, TYPEDEF) eActiveFlags;
} EM_t_CamObjClassification;
#endif
#ifndef RTE_TYPE_EM_t_CamObjGeometry
#define RTE_TYPE_EM_t_CamObjGeometry
typedef struct
{
  VAR(float, TYPEDEF) fHeight;
  VAR(float, TYPEDEF) fHeightStd;
  VAR(float, TYPEDEF) fOffsetToGround;
  VAR(float, TYPEDEF) fOffsetToGroundStd;
  VAR(float, TYPEDEF) fLength;
  VAR(float, TYPEDEF) fWidth;
} EM_t_CamObjGeometry;
#endif
#ifndef RTE_TYPE_EM_t_CamObjKinematics
#define RTE_TYPE_EM_t_CamObjKinematics
typedef struct
{
  VAR(float, TYPEDEF) fDistZ;
  VAR(float, TYPEDEF) fDistZStd;
  VAR(float, TYPEDEF) fYaw;
  VAR(float, TYPEDEF) fYawStd;
  VAR(float, TYPEDEF) fYawRate;
  VAR(float, TYPEDEF) fYawRateStd;
  VAR(float, TYPEDEF) fRefpointDistX;
  VAR(float, TYPEDEF) fRefpointDistY;
  VAR(float, TYPEDEF) fRefpointDistXStd;
  VAR(float, TYPEDEF) fRefpointDistYStd;
  VAR(eRefpointLocation_t, TYPEDEF) eRefpointLocation;
} EM_t_CamObjKinematics;
#endif
#ifndef RTE_TYPE_EM_t_CamObjListQualifiers
#define RTE_TYPE_EM_t_CamObjListQualifiers
typedef struct
{
  VAR(unsigned char, TYPEDEF) uiVisibilityRange;
  VAR(unsigned char, TYPEDEF) uiServiceDegradation;
  VAR(unsigned int, TYPEDEF) uiQualityFlags;
} EM_t_CamObjListQualifiers;
#endif
#ifndef RTE_TYPE_EM_t_CamObject
#define RTE_TYPE_EM_t_CamObject
typedef struct
{
  VAR(EM_t_CamObjKinematics, TYPEDEF) Kinematic;
  VAR(EM_t_CamObjGeometry, TYPEDEF) Geometry;
  VAR(EM_t_CamObjClassification, TYPEDEF) Classification;
  VAR(EM_t_CamObjAttributes, TYPEDEF) Attributes;
} EM_t_CamObject;
#endif
#ifndef RTE_TYPE_EM_t_CamObjectArray
#define RTE_TYPE_EM_t_CamObjectArray
typedef VAR(EM_t_CamObject, TYPEDEF) EM_t_CamObjectArray[20];
#endif
#ifndef RTE_TYPE_EM_t_CamObjectList
#define RTE_TYPE_EM_t_CamObjectList
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(EM_t_CamObjListQualifiers, TYPEDEF) Qualifiers;
  VAR(EM_t_CamObjectArray, TYPEDEF) aObject;
} EM_t_CamObjectList;
#endif
#ifndef RTE_TYPE_EM_t_DynamicProperty
#define RTE_TYPE_EM_t_DynamicProperty
typedef VAR(unsigned char, TYPEDEF) EM_t_DynamicProperty;
#endif
#ifndef RTE_TYPE_u_RoadSide_t
#define RTE_TYPE_u_RoadSide_t
typedef VAR(unsigned char, TYPEDEF) u_RoadSide_t;
#endif
#ifndef RTE_TYPE_EM_t_InvalidReason
#define RTE_TYPE_EM_t_InvalidReason
typedef VAR(unsigned char, TYPEDEF) EM_t_InvalidReason;
#endif
#ifndef RTE_TYPE_EM_t_Cluster
#define RTE_TYPE_EM_t_Cluster
typedef struct
{
  VAR(float, TYPEDEF) f_DistX;
  VAR(float, TYPEDEF) f_DistY;
  VAR(float, TYPEDEF) f_VrelX;
  VAR(float, TYPEDEF) f_VrelY;
  VAR(float, TYPEDEF) f_DistXVar;
  VAR(float, TYPEDEF) f_DistYVar;
  VAR(float, TYPEDEF) f_VrelXVar;
  VAR(float, TYPEDEF) f_VrelYVar;
  VAR(float, TYPEDEF) f_RCS;
  VAR(float, TYPEDEF) f_Pdh0;
  VAR(short, TYPEDEF) s_RSPCluIdx;
  VAR(EM_t_DynamicProperty, TYPEDEF) u_DynProp;
  VAR(EM_t_AmbigState, TYPEDEF) u_AmbigState;
  VAR(unsigned char, TYPEDEF) s_RSPAzAngIdx;
  VAR(u_RoadSide_t, TYPEDEF) u_RoadSide;
  VAR(EM_t_InvalidReason, TYPEDEF) u_InvalidReason;
  VAR(signed char, TYPEDEF) DopplerAmbIndex;
  VAR(unsigned char, TYPEDEF) u_ElevAngUnsignedSine;
  VAR(signed char, TYPEDEF) s_ElevCplRatioPhase;
  VAR(unsigned char, TYPEDEF) AssocObjID;
  VAR(unsigned char, TYPEDEF) u_Dummy;
} EM_t_Cluster;
#endif
#ifndef RTE_TYPE_a_Clusters_array_t
#define RTE_TYPE_a_Clusters_array_t
typedef VAR(EM_t_Cluster, TYPEDEF) a_Clusters_array_t[1];
#endif
#ifndef RTE_TYPE_EM_t_ClusterListFar
#define RTE_TYPE_EM_t_ClusterListFar
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(AlgoDataTimeStamp_t, TYPEDEF) u_TimeStamp;
  VAR(unsigned int, TYPEDEF) u_NofClusters;
  VAR(a_Clusters_array_t, TYPEDEF) a_Clusters;
} EM_t_ClusterListFar;
#endif
#ifndef RTE_TYPE_a_Clusters_array_t_0
#define RTE_TYPE_a_Clusters_array_t_0
typedef VAR(EM_t_Cluster, TYPEDEF) a_Clusters_array_t_0[666];
#endif
#ifndef RTE_TYPE_EM_t_ClusterListNear
#define RTE_TYPE_EM_t_ClusterListNear
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(AlgoDataTimeStamp_t, TYPEDEF) u_TimeStamp;
  VAR(unsigned int, TYPEDEF) u_NofClusters;
  VAR(a_Clusters_array_t_0, TYPEDEF) a_Clusters;
} EM_t_ClusterListNear;
#endif
#ifndef RTE_TYPE_EM_t_ClusterListValid
#define RTE_TYPE_EM_t_ClusterListValid
typedef VAR(unsigned char, TYPEDEF) EM_t_ClusterListValid;
#endif
#ifndef RTE_TYPE_EM_t_Cust_CamAvailStatus
#define RTE_TYPE_EM_t_Cust_CamAvailStatus
typedef VAR(unsigned char, TYPEDEF) EM_t_Cust_CamAvailStatus;
#endif
#ifndef RTE_TYPE_EM_t_Cust_FusionStatus
#define RTE_TYPE_EM_t_Cust_FusionStatus
typedef VAR(unsigned char, TYPEDEF) EM_t_Cust_FusionStatus;
#endif
#ifndef RTE_TYPE_EM_t_Cust_CamStatus
#define RTE_TYPE_EM_t_Cust_CamStatus
typedef struct
{
  VAR(unsigned short, TYPEDEF) u_LastTime;
  VAR(unsigned short, TYPEDEF) u_DebugValue;
  VAR(unsigned char, TYPEDEF) u_DebugValueSelect;
  VAR(unsigned char, TYPEDEF) u_EMCounter8;
  VAR(unsigned char, TYPEDEF) u_FusionAlive;
  VAR(unsigned char, TYPEDEF) u_InputStatus;
  VAR(EM_t_Cust_FusionStatus, TYPEDEF) u_ObjectStatus;
  VAR(EM_t_Cust_FusionStatus, TYPEDEF) u_LaneStatus;
  VAR(EM_t_Cust_CamAvailStatus, TYPEDEF) u_CameraAvailable;
  VAR(unsigned char, TYPEDEF) u_CameraError;
  VAR(unsigned char, TYPEDEF) u_ErrorUpdateCounter;
  VAR(unsigned char, TYPEDEF) u_Res_1;
  VAR(unsigned char, TYPEDEF) u_Res_2;
  VAR(unsigned char, TYPEDEF) u_Res_3;
} EM_t_Cust_CamStatus;
#endif
#ifndef RTE_TYPE_EM_t_Cust_ObjectDataArray
#define RTE_TYPE_EM_t_Cust_ObjectDataArray
typedef VAR(EM_t_Cust_ObjectData, TYPEDEF) EM_t_Cust_ObjectDataArray[40];
#endif
#ifndef RTE_TYPE_EM_t_CustomerProjectDef
#define RTE_TYPE_EM_t_CustomerProjectDef
typedef VAR(unsigned char, TYPEDEF) EM_t_CustomerProjectDef;
#endif
#ifndef RTE_TYPE_EM_t_EAB_Feature
#define RTE_TYPE_EM_t_EAB_Feature
typedef struct
{
  VAR(sint16_t, TYPEDEF) xPos;
  VAR(sint16_t, TYPEDEF) yPos;
  VAR(sint16_t, TYPEDEF) height;
  VAR(sint16_t, TYPEDEF) lateralWidth;
  VAR(unsigned char, TYPEDEF) occProb;
  VAR(boolean, TYPEDEF) isValid;
} EM_t_EAB_Feature;
#endif
#ifndef RTE_TYPE_EM_t_EAB_FeatureList_0
#define RTE_TYPE_EM_t_EAB_FeatureList_0
typedef VAR(EM_t_EAB_Feature, TYPEDEF) EM_t_EAB_FeatureList_0[200];
#endif
#ifndef RTE_TYPE_EM_t_EAB_FeatureList
#define RTE_TYPE_EM_t_EAB_FeatureList
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(EM_t_EAB_FeatureList_0, TYPEDEF) aEabFeatures;
} EM_t_EAB_FeatureList;
#endif
#ifndef RTE_TYPE_EM_t_FusionObjSensConfArray
#define RTE_TYPE_EM_t_FusionObjSensConfArray
typedef VAR(unsigned char, TYPEDEF) EM_t_FusionObjSensConfArray[1];
#endif
#ifndef RTE_TYPE_EM_t_FusionObjSensIDArray
#define RTE_TYPE_EM_t_FusionObjSensIDArray
typedef VAR(unsigned char, TYPEDEF) EM_t_FusionObjSensIDArray[1];
#endif
#ifndef RTE_TYPE_EM_t_FusionObjSensProbArray
#define RTE_TYPE_EM_t_FusionObjSensProbArray
typedef VAR(unsigned char, TYPEDEF) EM_t_FusionObjSensProbArray[1];
#endif
#ifndef RTE_TYPE_EM_t_GenFusionCamFctFlags
#define RTE_TYPE_EM_t_GenFusionCamFctFlags
typedef VAR(unsigned char, TYPEDEF) EM_t_GenFusionCamFctFlags;
#endif
#ifndef RTE_TYPE_EM_t_GenFusionCamData
#define RTE_TYPE_EM_t_GenFusionCamData
typedef struct
{
  VAR(EM_t_GenObjClassification, TYPEDEF) eSensorClass;
  VAR(EM_t_CamObjStatusBrakeLight, TYPEDEF) eStatusBrakeLight;
  VAR(percentage_t, TYPEDEF) uiBrakeLightConfidence;
  VAR(EM_t_CamObjStatusTurnIndicator, TYPEDEF) eStatusTurnIndicator;
  VAR(percentage_t, TYPEDEF) uiTurnIndicatorConfidence;
  VAR(EM_t_CamObjAssociatedLane, TYPEDEF) eAssociatedLane;
  VAR(percentage_t, TYPEDEF) uiAssociatedLaneConfidence;
  VAR(EM_t_CamObjLaneChange, TYPEDEF) eLaneChangeManeuver;
  VAR(percentage_t, TYPEDEF) percentageOwnDrivingLane;
  VAR(percentage_t, TYPEDEF) percentageSideDrivingLaneLeft;
  VAR(percentage_t, TYPEDEF) percentageSideDrivingLaneRight;
  VAR(EM_t_GenFusionCamFctFlags, TYPEDEF) eFunctionalFlag;
} EM_t_GenFusionCamData;
#endif
#ifndef RTE_TYPE_EM_t_FusionObject
#define RTE_TYPE_EM_t_FusionObject
typedef struct
{
  VAR(EM_t_FusionObjSensConfArray, TYPEDEF) uiSensorConfirmation;
  VAR(EM_t_FusionObjSensIDArray, TYPEDEF) uiSensorObjID;
  VAR(EM_t_FusionObjSensProbArray, TYPEDEF) uiSensorObjProb;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(EM_t_GenFusionCamData, TYPEDEF) CamData;
} EM_t_FusionObject;
#endif
#ifndef RTE_TYPE_EM_t_FusionObjArray
#define RTE_TYPE_EM_t_FusionObjArray
typedef VAR(EM_t_FusionObject, TYPEDEF) EM_t_FusionObjArray[40];
#endif
#ifndef RTE_TYPE_EM_t_FusionSensorState
#define RTE_TYPE_EM_t_FusionSensorState
typedef VAR(unsigned char, TYPEDEF) EM_t_FusionSensorState;
#endif
#ifndef RTE_TYPE_EM_t_FusionObjListHeader
#define RTE_TYPE_EM_t_FusionObjListHeader
typedef struct
{
  VAR(EM_t_FusionSensorState, TYPEDEF) eSensorState;
  VAR(EM_t_GenObjSensorSource, TYPEDEF) eObjListSource;
  VAR(EM_t_GenObjSensorSource, TYPEDEF) eObjListDegraded;
  VAR(unsigned char, TYPEDEF) reserved1;
} EM_t_FusionObjListHeader;
#endif
#ifndef RTE_TYPE_EM_t_FusionObjectList
#define RTE_TYPE_EM_t_FusionObjectList
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(EM_t_FusionObjListHeader, TYPEDEF) HeaderObjList;
  VAR(EM_t_FusionObjArray, TYPEDEF) aObject;
} EM_t_FusionObjectList;
#endif
#ifndef RTE_TYPE_EM_t_FusionOutput_Custom
#define RTE_TYPE_EM_t_FusionOutput_Custom
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(EM_t_CustomerProjectDef, TYPEDEF) project;
  VAR(EM_Cust_MatchingList_array_t, TYPEDEF) EM_Cust_MatchingList;
  VAR(EM_t_Cust_CamStatus, TYPEDEF) EM_Cust_CamStatus;
} EM_t_FusionOutput_Custom;
#endif
#ifndef RTE_TYPE_EM_t_FusionSensorIndices
#define RTE_TYPE_EM_t_FusionSensorIndices
typedef VAR(unsigned char, TYPEDEF) EM_t_FusionSensorIndices;
#endif
#ifndef RTE_TYPE_EM_t_FusionStateGlobal
#define RTE_TYPE_EM_t_FusionStateGlobal
typedef VAR(unsigned char, TYPEDEF) EM_t_FusionStateGlobal;
#endif
#ifndef RTE_TYPE_EM_t_GGS_DynProbability
#define RTE_TYPE_EM_t_GGS_DynProbability
typedef struct
{
  VAR(percentage_t, TYPEDEF) ui8GroundProbability;
  VAR(percentage_t, TYPEDEF) ui8StaticProbability;
  VAR(percentage_t, TYPEDEF) ui8MovingProbability;
} EM_t_GGS_DynProbability;
#endif
#ifndef RTE_TYPE_EM_t_GSS_DynamicFlag
#define RTE_TYPE_EM_t_GSS_DynamicFlag
typedef VAR(unsigned char, TYPEDEF) EM_t_GSS_DynamicFlag;
#endif
#ifndef RTE_TYPE_EM_t_GSS_DynamicLabel
#define RTE_TYPE_EM_t_GSS_DynamicLabel
typedef VAR(unsigned char, TYPEDEF) EM_t_GSS_DynamicLabel;
#endif
#ifndef RTE_TYPE_EM_t_GSS_DynamicLabelMap
#define RTE_TYPE_EM_t_GSS_DynamicLabelMap
typedef VAR(EM_t_GSS_DynamicLabel, TYPEDEF) EM_t_GSS_DynamicLabelMap[10240];
#endif
#ifndef RTE_TYPE_ImageDataFormat_t
#define RTE_TYPE_ImageDataFormat_t
typedef VAR(unsigned char, TYPEDEF) ImageDataFormat_t;
#endif
#ifndef RTE_TYPE_ParameterID_t
#define RTE_TYPE_ParameterID_t
typedef VAR(unsigned short, TYPEDEF) ParameterID_t;
#endif
#ifndef RTE_TYPE_ImageHeader_t
#define RTE_TYPE_ImageHeader_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) uiBitsPerChannel;
  VAR(unsigned short, TYPEDEF) iPixelBytes;
  VAR(unsigned int, TYPEDEF) iRowBytes;
  VAR(unsigned int, TYPEDEF) iSizeBytes;
  VAR(unsigned short, TYPEDEF) uiWidth;
  VAR(unsigned short, TYPEDEF) uiHeight;
  VAR(signed char, TYPEDEF) iScaleX;
  VAR(signed char, TYPEDEF) iScaleY;
  VAR(ImageDataFormat_t, TYPEDEF) eDataFormat;
  VAR(ParameterID_t, TYPEDEF) uiParameterId;
  VAR(unsigned int, TYPEDEF) uiFingerprint;
} ImageHeader_t;
#endif
#ifndef RTE_TYPE_EM_t_GSS_DynamicProbabilityMap
#define RTE_TYPE_EM_t_GSS_DynamicProbabilityMap
typedef VAR(EM_t_GGS_DynProbability, TYPEDEF) EM_t_GSS_DynamicProbabilityMap[10240];
#endif
#ifndef RTE_TYPE_EM_t_GSS_DynamicMap
#define RTE_TYPE_EM_t_GSS_DynamicMap
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(ImageHeader_t, TYPEDEF) sImgHeader;
  VAR(unsigned int, TYPEDEF) ui32NumberOfDynamicPixels;
  VAR(unsigned int, TYPEDEF) ui32NumberOfGroundPixels;
  VAR(unsigned int, TYPEDEF) ui32NumberOfStaticPixels;
  VAR(EM_t_GSS_DynamicLabelMap, TYPEDEF) aDynLabelMap;
  VAR(EM_t_GSS_DynamicProbabilityMap, TYPEDEF) aDynProbabilityMap;
} EM_t_GSS_DynamicMap;
#endif
#ifndef RTE_TYPE_Mat3x3_t
#define RTE_TYPE_Mat3x3_t
typedef struct
{
  VAR(float, TYPEDEF) fA00;
  VAR(float, TYPEDEF) fA10;
  VAR(float, TYPEDEF) fA20;
  VAR(float, TYPEDEF) fA01;
  VAR(float, TYPEDEF) fA11;
  VAR(float, TYPEDEF) fA21;
  VAR(float, TYPEDEF) fA02;
  VAR(float, TYPEDEF) fA12;
  VAR(float, TYPEDEF) fA22;
} Mat3x3_t;
#endif
#ifndef RTE_TYPE_EM_t_GSS_FlowSegmentTTC
#define RTE_TYPE_EM_t_GSS_FlowSegmentTTC
typedef VAR(float, TYPEDEF) EM_t_GSS_FlowSegmentTTC[3];
#endif
#ifndef RTE_TYPE_EM_t_GSS_FlowSegmentOrientation
#define RTE_TYPE_EM_t_GSS_FlowSegmentOrientation
typedef VAR(unsigned char, TYPEDEF) EM_t_GSS_FlowSegmentOrientation;
#endif
#ifndef RTE_TYPE_EM_t_GSS_FlowSegment
#define RTE_TYPE_EM_t_GSS_FlowSegment
typedef struct
{
  VAR(Mat3x3_t, TYPEDEF) sHOpt;
  VAR(EM_t_GSS_FlowSegmentTTC, TYPEDEF) aTTCOpt;
  VAR(EM_t_GSS_FlowSegmentOrientation, TYPEDEF) eOrientation;
  VAR(EM_t_GSS_DynamicFlag, TYPEDEF) eDynProp;
  VAR(boolean, TYPEDEF) bIsValid;
} EM_t_GSS_FlowSegment;
#endif
#ifndef RTE_TYPE_EM_t_GSS_FlowSegmentIdMap
#define RTE_TYPE_EM_t_GSS_FlowSegmentIdMap
typedef VAR(unsigned char, TYPEDEF) EM_t_GSS_FlowSegmentIdMap[10240];
#endif
#ifndef RTE_TYPE_EM_t_GSS_FlowSegmentList
#define RTE_TYPE_EM_t_GSS_FlowSegmentList
typedef VAR(EM_t_GSS_FlowSegment, TYPEDEF) EM_t_GSS_FlowSegmentList[64];
#endif
#ifndef RTE_TYPE_EM_t_GSS_FlowTrackFlowSegmentIdList
#define RTE_TYPE_EM_t_GSS_FlowTrackFlowSegmentIdList
typedef VAR(unsigned char, TYPEDEF) EM_t_GSS_FlowTrackFlowSegmentIdList[1000];
#endif
#ifndef RTE_TYPE_EM_t_GSS_Segmentation
#define RTE_TYPE_EM_t_GSS_Segmentation
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(EM_t_GSS_FlowSegmentList, TYPEDEF) aFlowSegments;
  VAR(EM_t_GSS_FlowTrackFlowSegmentIdList, TYPEDEF) aSegmentIdPerFlowTrack;
  VAR(ImageHeader_t, TYPEDEF) sSegmentIdMapHeader;
  VAR(EM_t_GSS_FlowSegmentIdMap, TYPEDEF) aSegmentIdMap;
} EM_t_GSS_Segmentation;
#endif
#ifndef RTE_TYPE_EM_t_GenEbaObjClass
#define RTE_TYPE_EM_t_GenEbaObjClass
typedef VAR(unsigned char, TYPEDEF) EM_t_GenEbaObjClass;
#endif
#ifndef RTE_TYPE_EM_t_GenLmkKinematics
#define RTE_TYPE_EM_t_GenLmkKinematics
typedef struct
{
  VAR(float, TYPEDEF) fDistX;
  VAR(float, TYPEDEF) fDistXStd;
  VAR(float, TYPEDEF) fDistY;
  VAR(float, TYPEDEF) fDistYStd;
  VAR(float, TYPEDEF) fDistZ;
  VAR(float, TYPEDEF) fDistZStd;
} EM_t_GenLmkKinematics;
#endif
#ifndef RTE_TYPE_EM_t_GenLmkGeometry
#define RTE_TYPE_EM_t_GenLmkGeometry
typedef struct
{
  VAR(float, TYPEDEF) fWidth;
  VAR(float, TYPEDEF) fWidthStd;
  VAR(float, TYPEDEF) fHeight;
  VAR(float, TYPEDEF) fHeightStd;
} EM_t_GenLmkGeometry;
#endif
#ifndef RTE_TYPE_EM_t_GenLmkClassification
#define RTE_TYPE_EM_t_GenLmkClassification
typedef VAR(unsigned char, TYPEDEF) EM_t_GenLmkClassification;
#endif
#ifndef RTE_TYPE_EM_t_GenLmkOcclusionState
#define RTE_TYPE_EM_t_GenLmkOcclusionState
typedef VAR(unsigned char, TYPEDEF) EM_t_GenLmkOcclusionState;
#endif
#ifndef RTE_TYPE_EM_t_GenLmkClassAttributes
#define RTE_TYPE_EM_t_GenLmkClassAttributes
typedef struct
{
  VAR(percentage_t, TYPEDEF) probabilityTrafficLight;
} EM_t_GenLmkClassAttributes;
#endif
#ifndef RTE_TYPE_EM_t_GenLmkTlColor
#define RTE_TYPE_EM_t_GenLmkTlColor
typedef VAR(unsigned char, TYPEDEF) EM_t_GenLmkTlColor;
#endif
#ifndef RTE_TYPE_EM_t_GenLmkTlMode
#define RTE_TYPE_EM_t_GenLmkTlMode
typedef VAR(unsigned char, TYPEDEF) EM_t_GenLmkTlMode;
#endif
#ifndef RTE_TYPE_EM_t_GenLmkTlSubClass
#define RTE_TYPE_EM_t_GenLmkTlSubClass
typedef VAR(unsigned short, TYPEDEF) EM_t_GenLmkTlSubClass;
#endif
#ifndef RTE_TYPE_EM_t_GenLmkTlSubClassMode
#define RTE_TYPE_EM_t_GenLmkTlSubClassMode
typedef VAR(unsigned short, TYPEDEF) EM_t_GenLmkTlSubClassMode;
#endif
#ifndef RTE_TYPE_EM_t_GenLmkTlAttributes
#define RTE_TYPE_EM_t_GenLmkTlAttributes
typedef struct
{
  VAR(EM_t_GenLmkTlColor, TYPEDEF) eColor;
  VAR(EM_t_GenLmkTlMode, TYPEDEF) eMode;
  VAR(EM_t_GenLmkTlSubClass, TYPEDEF) eSubClass;
  VAR(EM_t_GenLmkTlSubClassMode, TYPEDEF) eSubClassMode;
} EM_t_GenLmkTlAttributes;
#endif
#ifndef RTE_TYPE_EM_t_GenLmkAttributes
#define RTE_TYPE_EM_t_GenLmkAttributes
typedef struct
{
  VAR(EM_t_GenLmkClassification, TYPEDEF) eClassification;
  VAR(unsigned char, TYPEDEF) uiClassConfidence;
  VAR(EM_t_GenLmkOcclusionState, TYPEDEF) eOcclusion;
  VAR(EM_t_GenLmkClassAttributes, TYPEDEF) Classification;
  VAR(EM_t_GenLmkTlAttributes, TYPEDEF) TrafficLight;
} EM_t_GenLmkAttributes;
#endif
#ifndef RTE_TYPE_EM_t_GenLmkMaintenanceState
#define RTE_TYPE_EM_t_GenLmkMaintenanceState
typedef VAR(unsigned char, TYPEDEF) EM_t_GenLmkMaintenanceState;
#endif
#ifndef RTE_TYPE_EM_t_GenLmkVisibilityState
#define RTE_TYPE_EM_t_GenLmkVisibilityState
typedef VAR(unsigned char, TYPEDEF) EM_t_GenLmkVisibilityState;
#endif
#ifndef RTE_TYPE_EM_t_GenLmkSplitMergeState
#define RTE_TYPE_EM_t_GenLmkSplitMergeState
typedef VAR(unsigned char, TYPEDEF) EM_t_GenLmkSplitMergeState;
#endif
#ifndef RTE_TYPE_EM_t_GenLmkSensorSource
#define RTE_TYPE_EM_t_GenLmkSensorSource
typedef VAR(unsigned short, TYPEDEF) EM_t_GenLmkSensorSource;
#endif
#ifndef RTE_TYPE_EM_t_GenLmkGenerals
#define RTE_TYPE_EM_t_GenLmkGenerals
typedef struct
{
  VAR(float, TYPEDEF) fLifeTime;
  VAR(AlgoCycleCounter_t, TYPEDEF) uiLifeCycles;
  VAR(AlgoDataTimeStamp_t, TYPEDEF) uiLastMeasuredTimeStamp;
  VAR(AlgoCycleCounter_t, TYPEDEF) uiLastMeasuredCycle;
  VAR(unsigned char, TYPEDEF) uiProbabilityOfExistence;
  VAR(EM_t_GenLmkMaintenanceState, TYPEDEF) eMaintenanceState;
  VAR(EM_t_GenLmkVisibilityState, TYPEDEF) eVisibilityState;
  VAR(unsigned char, TYPEDEF) uiID;
  VAR(EM_t_GenLmkSplitMergeState, TYPEDEF) eSplitMergeState;
  VAR(unsigned char, TYPEDEF) uiMergeID;
  VAR(unsigned char, TYPEDEF) uiSplitID;
  VAR(EM_t_GenLmkSensorSource, TYPEDEF) eSensorSource;
} EM_t_GenLmkGenerals;
#endif
#ifndef RTE_TYPE_EM_t_GenLandmark
#define RTE_TYPE_EM_t_GenLandmark
typedef struct
{
  VAR(EM_t_GenLmkKinematics, TYPEDEF) Kinematic;
  VAR(EM_t_GenLmkGeometry, TYPEDEF) Geometry;
  VAR(EM_t_GenLmkAttributes, TYPEDEF) Attributes;
  VAR(EM_t_GenLmkGenerals, TYPEDEF) General;
} EM_t_GenLandmark;
#endif
#ifndef RTE_TYPE_EM_t_GenLmkSortedIdxArray
#define RTE_TYPE_EM_t_GenLmkSortedIdxArray
typedef VAR(unsigned char, TYPEDEF) EM_t_GenLmkSortedIdxArray[10];
#endif
#ifndef RTE_TYPE_EM_t_GenLmkListHeader
#define RTE_TYPE_EM_t_GenLmkListHeader
typedef struct
{
  VAR(unsigned char, TYPEDEF) iNumOfUsedLandmarks;
  VAR(EM_t_GenLmkSortedIdxArray, TYPEDEF) iSortedLandmarkList;
} EM_t_GenLmkListHeader;
#endif
#ifndef RTE_TYPE_EM_t_GenLmkArray
#define RTE_TYPE_EM_t_GenLmkArray
typedef VAR(EM_t_GenLandmark, TYPEDEF) EM_t_GenLmkArray[10];
#endif
#ifndef RTE_TYPE_EM_t_GenLandmarkList
#define RTE_TYPE_EM_t_GenLandmarkList
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(EM_t_GenLmkListHeader, TYPEDEF) HeaderLmkList;
  VAR(EM_t_GenLmkArray, TYPEDEF) aLandmark;
} EM_t_GenLandmarkList;
#endif
#ifndef RTE_TYPE_EM_t_GenObjKinematics
#define RTE_TYPE_EM_t_GenObjKinematics
typedef struct
{
  VAR(float, TYPEDEF) fDistX;
  VAR(float, TYPEDEF) fDistXStd;
  VAR(float, TYPEDEF) fDistY;
  VAR(float, TYPEDEF) fDistYStd;
  VAR(float, TYPEDEF) fVrelX;
  VAR(float, TYPEDEF) fVrelXStd;
  VAR(float, TYPEDEF) fVrelY;
  VAR(float, TYPEDEF) fVrelYStd;
  VAR(float, TYPEDEF) fArelX;
  VAR(float, TYPEDEF) fArelXStd;
  VAR(float, TYPEDEF) fArelY;
  VAR(float, TYPEDEF) fArelYStd;
  VAR(float, TYPEDEF) fVabsX;
  VAR(float, TYPEDEF) fVabsXStd;
  VAR(float, TYPEDEF) fVabsY;
  VAR(float, TYPEDEF) fVabsYStd;
  VAR(float, TYPEDEF) fAabsX;
  VAR(float, TYPEDEF) fAabsXStd;
  VAR(float, TYPEDEF) fAabsY;
  VAR(float, TYPEDEF) fAabsYStd;
} EM_t_GenObjKinematics;
#endif
#ifndef RTE_TYPE_EM_t_GenObjAttributes
#define RTE_TYPE_EM_t_GenObjAttributes
typedef struct
{
  VAR(EM_t_GenObjDynamicProperty, TYPEDEF) eDynamicProperty;
  VAR(unsigned char, TYPEDEF) uiDynConfidence;
  VAR(EM_t_GenObjClassification, TYPEDEF) eClassification;
  VAR(unsigned char, TYPEDEF) uiClassConfidence;
  VAR(EM_t_GenObjOcclusionState, TYPEDEF) eObjectOcclusion;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
} EM_t_GenObjAttributes;
#endif
#ifndef RTE_TYPE_EM_t_GenObjSplitMergeState
#define RTE_TYPE_EM_t_GenObjSplitMergeState
typedef VAR(unsigned char, TYPEDEF) EM_t_GenObjSplitMergeState;
#endif
#ifndef RTE_TYPE_EM_t_GenObjGenerals
#define RTE_TYPE_EM_t_GenObjGenerals
typedef struct
{
  VAR(float, TYPEDEF) fLifeTime;
  VAR(AlgoDataTimeStamp_t, TYPEDEF) uiLastMeasuredTimeStamp;
  VAR(AlgoCycleCounter_t, TYPEDEF) uiLifeCycles;
  VAR(AlgoCycleCounter_t, TYPEDEF) uiLastMeasuredCycle;
  VAR(EM_t_GenObjMaintenanceState, TYPEDEF) eMaintenanceState;
  VAR(unsigned char, TYPEDEF) uiID;
  VAR(unsigned char, TYPEDEF) uiChildID;
  VAR(signed char, TYPEDEF) iGlobalID;
  VAR(EM_t_GenObjSplitMergeState, TYPEDEF) eSplitMergeState;
  VAR(unsigned char, TYPEDEF) uiMergeID;
  VAR(unsigned char, TYPEDEF) uiSplitID;
  VAR(EM_t_GenObjSensorSource, TYPEDEF) eSensorSource;
} EM_t_GenObjGenerals;
#endif
#ifndef RTE_TYPE_EM_t_GenObjQualifiers
#define RTE_TYPE_EM_t_GenObjQualifiers
typedef struct
{
  VAR(unsigned char, TYPEDEF) uiProbabilityOfExistence;
  VAR(unsigned char, TYPEDEF) uiAccObjQuality;
  VAR(unsigned char, TYPEDEF) ucFPSSenQuality;
  VAR(unsigned char, TYPEDEF) ucFPSFunQuality;
  VAR(unsigned char, TYPEDEF) uiEbaObjQuality;
  VAR(EM_t_GenEbaHypCat, TYPEDEF) eEbaHypCat;
  VAR(EM_t_GenEbaInhibit, TYPEDEF) eEbaInhibitionMask;
  VAR(EM_t_GenEbaObjClass, TYPEDEF) eEbaObjClass;
  VAR(EM_t_GenEbaQualifier, TYPEDEF) eEbaQualifierEnable;
  VAR(EM_t_GenEbaQualifier, TYPEDEF) eEbaQualifierKeep;
  VAR(EM_t_GenEbaObjMovState, TYPEDEF) eEbaObjMovStateCurr;
  VAR(EM_t_GenEbaObjMovState, TYPEDEF) eEbaObjMovStatePrev;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
} EM_t_GenObjQualifiers;
#endif
#ifndef RTE_TYPE_EM_t_GenObject
#define RTE_TYPE_EM_t_GenObject
typedef struct
{
  VAR(EM_t_GenObjKinematics, TYPEDEF) Kinematic;
  VAR(EM_t_GenObjGeometry, TYPEDEF) Geometry;
  VAR(EM_t_GenObjAttributes, TYPEDEF) Attributes;
  VAR(EM_t_GenObjGenerals, TYPEDEF) General;
  VAR(EM_t_GenObjQualifiers, TYPEDEF) Qualifiers;
} EM_t_GenObject;
#endif
#ifndef RTE_TYPE_EM_t_GenObjArray
#define RTE_TYPE_EM_t_GenObjArray
typedef VAR(EM_t_GenObject, TYPEDEF) EM_t_GenObjArray[25];
#endif
#ifndef RTE_TYPE_EM_t_GenObjSortedIdxArray
#define RTE_TYPE_EM_t_GenObjSortedIdxArray
typedef VAR(signed char, TYPEDEF) EM_t_GenObjSortedIdxArray[25];
#endif
#ifndef RTE_TYPE_EM_t_GenObjListHeader
#define RTE_TYPE_EM_t_GenObjListHeader
typedef struct
{
  VAR(ObjNumber_t, TYPEDEF) iNumOfUsedObjects;
  VAR(EM_t_GenObjSortedIdxArray, TYPEDEF) iSortedObjectList;
  VAR(EM_t_GenObjSensorSource, TYPEDEF) eObjListSource;
  VAR(unsigned char, TYPEDEF) reserved1;
} EM_t_GenObjListHeader;
#endif
#ifndef RTE_TYPE_EM_t_GenObjectList
#define RTE_TYPE_EM_t_GenObjectList
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(EM_t_GenObjListHeader, TYPEDEF) HeaderObjList;
  VAR(EM_t_GenObjArray, TYPEDEF) aObject;
} EM_t_GenObjectList;
#endif
#ifndef RTE_TYPE_EM_t_GenObject_bk
#define RTE_TYPE_EM_t_GenObject_bk
typedef struct
{
  VAR(EM_t_GenObjKinematics, TYPEDEF) Kinematic;
  VAR(EM_t_GenObjGeometry, TYPEDEF) Geometry;
  VAR(EM_t_GenObjAttributes, TYPEDEF) Attributes;
  VAR(EM_t_GenObjGenerals, TYPEDEF) General;
  VAR(EM_t_GenObjQualifiers, TYPEDEF) Qualifiers;
} EM_t_GenObject_bk;
#endif
#ifndef RTE_TYPE_EM_t_ObjectList_Custom
#define RTE_TYPE_EM_t_ObjectList_Custom
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(EM_t_FusionStateGlobal, TYPEDEF) eFusionStatusGlob;
  VAR(EM_t_CustomerProjectDef, TYPEDEF) project;
  VAR(CustObjects_array_t, TYPEDEF) CustObjects;
} EM_t_ObjectList_Custom;
#endif
#ifndef RTE_TYPE_EM_t_PositionInBeam
#define RTE_TYPE_EM_t_PositionInBeam
typedef VAR(unsigned char, TYPEDEF) EM_t_PositionInBeam;
#endif
#ifndef RTE_TYPE_EM_t_RTBRecognition
#define RTE_TYPE_EM_t_RTBRecognition
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(float, TYPEDEF) f_ProbRTBRecog;
  VAR(float, TYPEDEF) f_InfluenceFactor;
  VAR(float, TYPEDEF) f_ThresholdNullV;
  VAR(unsigned int, TYPEDEF) u_NofStatClusters;
  VAR(unsigned int, TYPEDEF) u_NofAllClusters;
} EM_t_RTBRecognition;
#endif
#ifndef RTE_TYPE_EM_t_detectionsNear
#define RTE_TYPE_EM_t_detectionsNear
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(unsigned int, TYPEDEF) u_NofDetections;
  VAR(EMDetectionArray_array_t, TYPEDEF) EMDetectionArray;
} EM_t_detectionsNear;
#endif
#ifndef RTE_TYPE_a_ElevAngUnsignedSine_array_t
#define RTE_TYPE_a_ElevAngUnsignedSine_array_t
typedef VAR(unsigned char, TYPEDEF) a_ElevAngUnsignedSine_array_t[2];
#endif
#ifndef RTE_TYPE_a_ElevCplRatioPhase_array_t
#define RTE_TYPE_a_ElevCplRatioPhase_array_t
typedef VAR(signed char, TYPEDEF) a_ElevCplRatioPhase_array_t[2];
#endif
#ifndef RTE_TYPE_EM_t_elevAttributes
#define RTE_TYPE_EM_t_elevAttributes
typedef struct
{
  VAR(a_ElevAngUnsignedSine_array_t, TYPEDEF) a_ElevAngUnsignedSine;
  VAR(a_ElevCplRatioPhase_array_t, TYPEDEF) a_ElevCplRatioPhase;
} EM_t_elevAttributes;
#endif
#ifndef RTE_TYPE_elevAttributeArray_array_t
#define RTE_TYPE_elevAttributeArray_array_t
typedef VAR(EM_t_elevAttributes, TYPEDEF) elevAttributeArray_array_t[600];
#endif
#ifndef RTE_TYPE_EM_t_elevAttributesNear
#define RTE_TYPE_EM_t_elevAttributesNear
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(elevAttributeArray_array_t, TYPEDEF) elevAttributeArray;
} EM_t_elevAttributesNear;
#endif
#ifndef RTE_TYPE_E_FCTIF_ALDWStatus_t
#define RTE_TYPE_E_FCTIF_ALDWStatus_t
typedef VAR(unsigned char, TYPEDEF) E_FCTIF_ALDWStatus_t;
#endif
#ifndef RTE_TYPE_E_FCTIF_ALDWWarnSuppStat_t
#define RTE_TYPE_E_FCTIF_ALDWWarnSuppStat_t
typedef VAR(unsigned char, TYPEDEF) E_FCTIF_ALDWWarnSuppStat_t;
#endif
#ifndef RTE_TYPE_E_FCTIF_ALDWWrnRq_t
#define RTE_TYPE_E_FCTIF_ALDWWrnRq_t
typedef VAR(unsigned char, TYPEDEF) E_FCTIF_ALDWWrnRq_t;
#endif
#ifndef RTE_TYPE_EcmRtePoint2DFloat32_t
#define RTE_TYPE_EcmRtePoint2DFloat32_t
typedef struct
{
  VAR(float, TYPEDEF) x;
  VAR(float, TYPEDEF) y;
} EcmRtePoint2DFloat32_t;
#endif
#ifndef RTE_TYPE_EcmRteAlgoMarkerAttr_t
#define RTE_TYPE_EcmRteAlgoMarkerAttr_t
typedef struct
{
  VAR(EcmRtePoint2DFloat32_t, TYPEDEF) Pos;
  VAR(float, TYPEDEF) Dev;
} EcmRteAlgoMarkerAttr_t;
#endif
#ifndef RTE_TYPE_PointList_array_t
#define RTE_TYPE_PointList_array_t
typedef VAR(EcmRteAlgoMarkerAttr_t, TYPEDEF) PointList_array_t[40];
#endif
#ifndef RTE_TYPE_EcmRteAlgoPointList_t
#define RTE_TYPE_EcmRteAlgoPointList_t
typedef struct
{
  VAR(PointList_array_t, TYPEDEF) PointList;
  VAR(unsigned int, TYPEDEF) NoOfPoints;
} EcmRteAlgoPointList_t;
#endif
#ifndef RTE_TYPE_EcmRteAlgoHis_t
#define RTE_TYPE_EcmRteAlgoHis_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(EcmRteAlgoPointList_t, TYPEDEF) InterimPointList;
  VAR(EcmRteAlgoPointList_t, TYPEDEF) SecondMax;
} EcmRteAlgoHis_t;
#endif
#ifndef RTE_TYPE_EcmRteBoxCoordinates_t
#define RTE_TYPE_EcmRteBoxCoordinates_t
typedef struct
{
  VAR(EcmRtePoint2DFloat32_t, TYPEDEF) P1;
  VAR(EcmRtePoint2DFloat32_t, TYPEDEF) P2;
} EcmRteBoxCoordinates_t;
#endif
#ifndef RTE_TYPE_EcmRteCurMarker_t
#define RTE_TYPE_EcmRteCurMarker_t
typedef VAR(unsigned char, TYPEDEF) EcmRteCurMarker_t;
#endif
#ifndef RTE_TYPE_PatPosRecognitionReqFromDiag_t
#define RTE_TYPE_PatPosRecognitionReqFromDiag_t
typedef VAR(unsigned char, TYPEDEF) PatPosRecognitionReqFromDiag_t;
#endif
#ifndef RTE_TYPE_PatPosFromDiag_t
#define RTE_TYPE_PatPosFromDiag_t
typedef struct
{
  VAR(float, TYPEDEF) f32_Z;
  VAR(float, TYPEDEF) f32_Y;
  VAR(float, TYPEDEF) f32_X;
} PatPosFromDiag_t;
#endif
#ifndef RTE_TYPE_SensorSocketFromDiag_t
#define RTE_TYPE_SensorSocketFromDiag_t
typedef struct
{
  VAR(float, TYPEDEF) f32_X;
  VAR(float, TYPEDEF) f32_Y;
  VAR(float, TYPEDEF) f32_Z;
  VAR(unsigned int, TYPEDEF) ui32_Quality;
} SensorSocketFromDiag_t;
#endif
#ifndef RTE_TYPE_SensorSocketAngleOffsetFromDiag_t
#define RTE_TYPE_SensorSocketAngleOffsetFromDiag_t
typedef struct
{
  VAR(float, TYPEDEF) f32_Pitch;
  VAR(float, TYPEDEF) f32_Roll;
  VAR(float, TYPEDEF) f32_Yaw;
} SensorSocketAngleOffsetFromDiag_t;
#endif
#ifndef RTE_TYPE_EcmRteDiagInput_t
#define RTE_TYPE_EcmRteDiagInput_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(PatPosRecognitionReqFromDiag_t, TYPEDEF) PatPosRecognitionReqFromDiag;
  VAR(float, TYPEDEF) fDistanceTarget2CenterFromDiag;
  VAR(PatPosFromDiag_t, TYPEDEF) PatPosFromDiag;
  VAR(SensorSocketFromDiag_t, TYPEDEF) SensorSocketFromDiag;
  VAR(SensorSocketAngleOffsetFromDiag_t, TYPEDEF) SensorSocketAngleOffsetFromDiag;
} EcmRteDiagInput_t;
#endif
#ifndef RTE_TYPE_EcmRteEnvData_t
#define RTE_TYPE_EcmRteEnvData_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) ui32_Brightness;
  VAR(unsigned int, TYPEDEF) ui32_Contrast;
  VAR(unsigned int, TYPEDEF) ui32_RecPatternMarker;
  VAR(float, TYPEDEF) f32_VehLevFL;
  VAR(float, TYPEDEF) f32_VehLevFR;
  VAR(float, TYPEDEF) f32_VehLevRL;
  VAR(float, TYPEDEF) f32_VehLevRR;
  VAR(float, TYPEDEF) f32_CarbodyFL;
  VAR(float, TYPEDEF) f32_CarbodyFR;
  VAR(float, TYPEDEF) f32_CarbodyRL;
  VAR(float, TYPEDEF) f32_CarbodyRR;
} EcmRteEnvData_t;
#endif
#ifndef RTE_TYPE_EcmRteFieldOfView_t
#define RTE_TYPE_EcmRteFieldOfView_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) ui32_FoVUL_X;
  VAR(unsigned int, TYPEDEF) ui32_FoVUL_Y;
  VAR(unsigned int, TYPEDEF) ui32_FoVUR_X;
  VAR(unsigned int, TYPEDEF) ui32_FoVUR_Y;
  VAR(unsigned int, TYPEDEF) ui32_FoVLL_X;
  VAR(unsigned int, TYPEDEF) ui32_FoVLL_Y;
  VAR(unsigned int, TYPEDEF) ui32_FoVLR_X;
  VAR(unsigned int, TYPEDEF) ui32_FoVLR_Y;
} EcmRteFieldOfView_t;
#endif
#ifndef RTE_TYPE_EcmRteEnvFoVData_t
#define RTE_TYPE_EcmRteEnvFoVData_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(EcmRteFieldOfView_t, TYPEDEF) EcmRteFieldOfView;
  VAR(EcmRteEnvData_t, TYPEDEF) EcmRteEnvData;
} EcmRteEnvFoVData_t;
#endif
#ifndef RTE_TYPE_EcmRteError_t
#define RTE_TYPE_EcmRteError_t
typedef VAR(unsigned int, TYPEDEF) EcmRteError_t;
#endif
#ifndef RTE_TYPE_Mat3x4_t
#define RTE_TYPE_Mat3x4_t
typedef struct
{
  VAR(float, TYPEDEF) fA00;
  VAR(float, TYPEDEF) fA10;
  VAR(float, TYPEDEF) fA20;
  VAR(float, TYPEDEF) fA01;
  VAR(float, TYPEDEF) fA11;
  VAR(float, TYPEDEF) fA21;
  VAR(float, TYPEDEF) fA02;
  VAR(float, TYPEDEF) fA12;
  VAR(float, TYPEDEF) fA22;
  VAR(float, TYPEDEF) fA03;
  VAR(float, TYPEDEF) fA13;
  VAR(float, TYPEDEF) fA23;
} Mat3x4_t;
#endif
#ifndef RTE_TYPE_PoseParameters_t
#define RTE_TYPE_PoseParameters_t
typedef struct
{
  VAR(float, TYPEDEF) fRoll;
  VAR(float, TYPEDEF) fPitch;
  VAR(float, TYPEDEF) fYaw;
  VAR(float, TYPEDEF) fRollSigma;
  VAR(float, TYPEDEF) fPitchSigma;
  VAR(float, TYPEDEF) fYawSigma;
  VAR(unsigned char, TYPEDEF) uiRollQuality;
  VAR(unsigned char, TYPEDEF) uiPitchQuality;
  VAR(unsigned char, TYPEDEF) uiYawQuality;
  VAR(unsigned char, TYPEDEF) uiTotalAngleQuality;
  VAR(float, TYPEDEF) fTx;
  VAR(float, TYPEDEF) fTy;
  VAR(float, TYPEDEF) fTz;
  VAR(float, TYPEDEF) fTxSigma;
  VAR(float, TYPEDEF) fTySigma;
  VAR(float, TYPEDEF) fTzSigma;
  VAR(unsigned char, TYPEDEF) uiTxQuality;
  VAR(unsigned char, TYPEDEF) uiTyQuality;
  VAR(unsigned char, TYPEDEF) uiTzQuality;
  VAR(unsigned char, TYPEDEF) uiTotalTranslQuality;
  VAR(Mat3x4_t, TYPEDEF) sTransform;
} PoseParameters_t;
#endif
#ifndef RTE_TYPE_PatPosRecognitionComplete_t
#define RTE_TYPE_PatPosRecognitionComplete_t
typedef VAR(unsigned char, TYPEDEF) PatPosRecognitionComplete_t;
#endif
#ifndef RTE_TYPE_Vector2_f32_t
#define RTE_TYPE_Vector2_f32_t
typedef struct
{
  VAR(float, TYPEDEF) fXDist;
  VAR(float, TYPEDEF) fYDist;
} Vector2_f32_t;
#endif
#ifndef RTE_TYPE_EcmRteTargetExtraction_t
#define RTE_TYPE_EcmRteTargetExtraction_t
typedef struct
{
  VAR(Vector2_f32_t, TYPEDEF) MiddleCircle;
  VAR(Vector2_f32_t, TYPEDEF) LeftCircle;
  VAR(Vector2_f32_t, TYPEDEF) RightCircle;
} EcmRteTargetExtraction_t;
#endif
#ifndef RTE_TYPE_EcmRteOutput_t
#define RTE_TYPE_EcmRteOutput_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(PoseParameters_t, TYPEDEF) SensorPosition;
  VAR(EcmRteError_t, TYPEDEF) eError;
  VAR(PatPosRecognitionComplete_t, TYPEDEF) PatPosRecognitionComplete;
  VAR(float, TYPEDEF) fOdometer;
  VAR(float, TYPEDEF) fReprojectionError;
  VAR(EcmRteTargetExtraction_t, TYPEDEF) EcmRteTargetExtraction;
} EcmRteOutput_t;
#endif
#ifndef RTE_TYPE_EcmRtePatPos_t
#define RTE_TYPE_EcmRtePatPos_t
typedef VAR(unsigned char, TYPEDEF) EcmRtePatPos_t;
#endif
#ifndef RTE_TYPE_EcmRtePoint2DSI16_t
#define RTE_TYPE_EcmRtePoint2DSI16_t
typedef struct
{
  VAR(short, TYPEDEF) x;
  VAR(short, TYPEDEF) y;
} EcmRtePoint2DSI16_t;
#endif
#ifndef RTE_TYPE_EcmRteProcRoiState_t
#define RTE_TYPE_EcmRteProcRoiState_t
typedef VAR(unsigned char, TYPEDEF) EcmRteProcRoiState_t;
#endif
#ifndef RTE_TYPE_aTemperature_array_t
#define RTE_TYPE_aTemperature_array_t
typedef VAR(float, TYPEDEF) aTemperature_array_t[10];
#endif
#ifndef RTE_TYPE_EcuState_t
#define RTE_TYPE_EcuState_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(aTemperature_array_t, TYPEDEF) aTemperature;
  VAR(unsigned short, TYPEDEF) uiTemperatureValidEntryCount;
} EcuState_t;
#endif
#ifndef RTE_TYPE_eCamObstacleDetected_t
#define RTE_TYPE_eCamObstacleDetected_t
typedef VAR(unsigned char, TYPEDEF) eCamObstacleDetected_t;
#endif
#ifndef RTE_TYPE_EmClearanceDetection_t
#define RTE_TYPE_EmClearanceDetection_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(eCamObstacleDetected_t, TYPEDEF) eCamObstacleDetected;
  VAR(unsigned char, TYPEDEF) uiTargetID;
  VAR(unsigned char, TYPEDEF) uiIntruderID;
} EmClearanceDetection_t;
#endif
#ifndef RTE_TYPE_eCycleMode_t
#define RTE_TYPE_eCycleMode_t
typedef VAR(unsigned char, TYPEDEF) eCycleMode_t;
#endif
#ifndef RTE_TYPE_fTime_t
#define RTE_TYPE_fTime_t
typedef VAR(float, TYPEDEF) fTime_t;
#endif
#ifndef RTE_TYPE_EmFctCycleMode_t
#define RTE_TYPE_EmFctCycleMode_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(eCycleMode_t, TYPEDEF) eCycleMode;
  VAR(a_reserve_array_t, TYPEDEF) a_reserved;
  VAR(fTime_t, TYPEDEF) fEmFctCycleTime;
} EmFctCycleMode_t;
#endif
#ifndef RTE_TYPE_eTrafficOrientation_t
#define RTE_TYPE_eTrafficOrientation_t
typedef VAR(unsigned char, TYPEDEF) eTrafficOrientation_t;
#endif
#ifndef RTE_TYPE_EmNvmState_t
#define RTE_TYPE_EmNvmState_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) StateTrafficOrientation;
  VAR(unsigned int, TYPEDEF) StateStationaryApproachDisabled;
} EmNvmState_t;
#endif
#ifndef RTE_TYPE_EmNvmIn_t
#define RTE_TYPE_EmNvmIn_t
typedef struct
{
  VAR(eTrafficOrientation_t, TYPEDEF) TrafficOrientation;
  VAR(boolean, TYPEDEF) b_StationaryApproachesDisabled;
  VAR(EmNvmState_t, TYPEDEF) NVMInState;
} EmNvmIn_t;
#endif
#ifndef RTE_TYPE_EmNvmOut_t
#define RTE_TYPE_EmNvmOut_t
typedef struct
{
  VAR(eTrafficOrientation_t, TYPEDEF) TrafficOrientation;
  VAR(EmNvmState_t, TYPEDEF) NvmOutState;
} EmNvmOut_t;
#endif
#ifndef RTE_TYPE_EmNvm_t
#define RTE_TYPE_EmNvm_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(EmNvmIn_t, TYPEDEF) EmNvmIn;
  VAR(EmNvmOut_t, TYPEDEF) EmNvmOut;
} EmNvm_t;
#endif
#ifndef RTE_TYPE_EmoAcceleration_t
#define RTE_TYPE_EmoAcceleration_t
typedef struct
{
  VAR(float, TYPEDEF) fQroll;
  VAR(float, TYPEDEF) fQpitch;
  VAR(float, TYPEDEF) fQyaw;
  VAR(float, TYPEDEF) fQrollSigma;
  VAR(float, TYPEDEF) fQpitchSigma;
  VAR(float, TYPEDEF) fQyawSigma;
  VAR(float, TYPEDEF) fAx;
  VAR(float, TYPEDEF) fAy;
  VAR(float, TYPEDEF) fAz;
  VAR(float, TYPEDEF) fAxSigma;
  VAR(float, TYPEDEF) fAySigma;
  VAR(float, TYPEDEF) fAzSigma;
} EmoAcceleration_t;
#endif
#ifndef RTE_TYPE_EmoAvailability_t
#define RTE_TYPE_EmoAvailability_t
typedef VAR(unsigned char, TYPEDEF) EmoAvailability_t;
#endif
#ifndef RTE_TYPE_aEssentialMatrix_array_t
#define RTE_TYPE_aEssentialMatrix_array_t
typedef VAR(float, TYPEDEF) aEssentialMatrix_array_t[9];
#endif
#ifndef RTE_TYPE_EmoCamToCam_t
#define RTE_TYPE_EmoCamToCam_t
typedef struct
{
  VAR(PoseParameters_t, TYPEDEF) sRotTrans;
  VAR(aEssentialMatrix_array_t, TYPEDEF) aEssentialMatrix;
  VAR(float, TYPEDEF) fDeltaT;
} EmoCamToCam_t;
#endif
#ifndef RTE_TYPE_EmoToEthernet_t
#define RTE_TYPE_EmoToEthernet_t
typedef struct
{
  VAR(EmoAvailability_t, TYPEDEF) eEmoAvailability;
  VAR(unsigned int, TYPEDEF) uiEmoTimeStamp;
  VAR(float, TYPEDEF) fEmoPitchToTheGround;
  VAR(float, TYPEDEF) fEmoRollToTheGround;
  VAR(float, TYPEDEF) fEmoHeightToTheGround;
  VAR(float, TYPEDEF) fEmoPitchToTheGroundSigma;
  VAR(float, TYPEDEF) fEmoRollToTheGroundSigma;
  VAR(float, TYPEDEF) fEmoHeightToTheGroundSigma;
  VAR(float, TYPEDEF) fEmoAccumulatedYaw;
  VAR(float, TYPEDEF) fEmoAccumulatedDist;
  VAR(float, TYPEDEF) fEmoVehWroll;
  VAR(float, TYPEDEF) fEmoVehWpitch;
  VAR(float, TYPEDEF) fEmoVehWyaw;
  VAR(float, TYPEDEF) fEmoVehWrollSigma;
  VAR(float, TYPEDEF) fEmoVehWpitchSigma;
  VAR(float, TYPEDEF) fEmoVehWyawSigma;
  VAR(float, TYPEDEF) fEmoVehVx;
  VAR(float, TYPEDEF) fEmoVehVy;
  VAR(float, TYPEDEF) fEmoVehVz;
  VAR(float, TYPEDEF) fEmoVehVxSigma;
  VAR(float, TYPEDEF) fEmoVehVySigma;
  VAR(float, TYPEDEF) fEmoVehVzSigma;
} EmoToEthernet_t;
#endif
#ifndef RTE_TYPE_EmoToDiagnotic_t
#define RTE_TYPE_EmoToDiagnotic_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) STATUS_MAC;
  VAR(float, TYPEDEF) PITCH_MAC;
  VAR(float, TYPEDEF) YAW_MAC;
  VAR(float, TYPEDEF) ROLL_MAC;
  VAR(float, TYPEDEF) PITCH_MAC_QUAL;
  VAR(float, TYPEDEF) YAW_MAC_QUAL;
  VAR(float, TYPEDEF) ROLL_MAC_QUAL;
  VAR(unsigned char, TYPEDEF) ERROR_CODE_MAC;
  VAR(unsigned short, TYPEDEF) MAC_FIRST_DIST;
} EmoToDiagnotic_t;
#endif
#ifndef RTE_TYPE_EmoExport_t
#define RTE_TYPE_EmoExport_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(EmoToEthernet_t, TYPEDEF) EmoToEthernet;
  VAR(EmoToDiagnotic_t, TYPEDEF) EmoToDiagnotic;
} EmoExport_t;
#endif
#ifndef RTE_TYPE_EmoVanishingPoint_t
#define RTE_TYPE_EmoVanishingPoint_t
typedef struct
{
  VAR(float, TYPEDEF) fX;
  VAR(float, TYPEDEF) fY;
} EmoVanishingPoint_t;
#endif
#ifndef RTE_TYPE_EmoVanishingLine_t
#define RTE_TYPE_EmoVanishingLine_t
typedef struct
{
  VAR(float, TYPEDEF) fA1;
  VAR(float, TYPEDEF) fA2;
  VAR(float, TYPEDEF) fA3;
} EmoVanishingLine_t;
#endif
#ifndef RTE_TYPE_uiStatus_t
#define RTE_TYPE_uiStatus_t
typedef VAR(unsigned char, TYPEDEF) uiStatus_t;
#endif
#ifndef RTE_TYPE_EmoOnlineCalibration_t
#define RTE_TYPE_EmoOnlineCalibration_t
typedef struct
{
  VAR(float, TYPEDEF) fDeltaRoll;
  VAR(float, TYPEDEF) fDeltaPitch;
  VAR(float, TYPEDEF) fDeltaYaw;
  VAR(float, TYPEDEF) fDeltaHeight;
  VAR(EmoVanishingPoint_t, TYPEDEF) sVanishPoint;
  VAR(EmoVanishingLine_t, TYPEDEF) sHorizonLine;
  VAR(float, TYPEDEF) fCaliOdometer;
  VAR(uiStatus_t, TYPEDEF) uiStatus;
  VAR(unsigned char, TYPEDEF) isRollCalibrated;
  VAR(unsigned char, TYPEDEF) isPitchCalibrated;
  VAR(unsigned char, TYPEDEF) isYawCalibrated;
  VAR(unsigned char, TYPEDEF) isHeightCalibrated;
} EmoOnlineCalibration_t;
#endif
#ifndef RTE_TYPE_eEmoInputSource_t
#define RTE_TYPE_eEmoInputSource_t
typedef VAR(unsigned char, TYPEDEF) eEmoInputSource_t;
#endif
#ifndef RTE_TYPE_EmoVelocity_t
#define RTE_TYPE_EmoVelocity_t
typedef struct
{
  VAR(float, TYPEDEF) fWroll;
  VAR(float, TYPEDEF) fWpitch;
  VAR(float, TYPEDEF) fWyaw;
  VAR(float, TYPEDEF) fWrollSigma;
  VAR(float, TYPEDEF) fWpitchSigma;
  VAR(float, TYPEDEF) fWyawSigma;
  VAR(float, TYPEDEF) fVx;
  VAR(float, TYPEDEF) fVy;
  VAR(float, TYPEDEF) fVz;
  VAR(float, TYPEDEF) fVxSigma;
  VAR(float, TYPEDEF) fVySigma;
  VAR(float, TYPEDEF) fVzSigma;
} EmoVelocity_t;
#endif
#ifndef RTE_TYPE_eEmoMotState_t
#define RTE_TYPE_eEmoMotState_t
typedef VAR(unsigned char, TYPEDEF) eEmoMotState_t;
#endif
#ifndef RTE_TYPE_EmoWorldToWorld_t
#define RTE_TYPE_EmoWorldToWorld_t
typedef struct
{
  VAR(PoseParameters_t, TYPEDEF) sRotTrans;
  VAR(EmoVelocity_t, TYPEDEF) EmoVelocity;
  VAR(EmoAcceleration_t, TYPEDEF) EmoAcceleration;
  VAR(eEmoMotState_t, TYPEDEF) eEmoMotState;
  VAR(float, TYPEDEF) fDeltaT;
  VAR(float, TYPEDEF) fAccumulatedYaw;
  VAR(float, TYPEDEF) fAccumulatedDist;
} EmoWorldToWorld_t;
#endif
#ifndef RTE_TYPE_EmoWorldToCamInstant_t
#define RTE_TYPE_EmoWorldToCamInstant_t
typedef struct
{
  VAR(PoseParameters_t, TYPEDEF) sPose;
  VAR(EmoVanishingPoint_t, TYPEDEF) sVanishPoint;
  VAR(EmoVanishingLine_t, TYPEDEF) sHorizonLine;
} EmoWorldToCamInstant_t;
#endif
#ifndef RTE_TYPE_EmoTimeMeas_t
#define RTE_TYPE_EmoTimeMeas_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiTimeMain;
  VAR(unsigned int, TYPEDEF) uiTimeMeasCam2CamPrepare;
  VAR(unsigned int, TYPEDEF) uiTimeMeasCam2CamLevenberg;
  VAR(unsigned int, TYPEDEF) uiTimeMeasSlamFeature1;
  VAR(unsigned int, TYPEDEF) uiTimeMeasSlamFeature2;
  VAR(unsigned int, TYPEDEF) uiTimeMeasSlamFeature3;
  VAR(unsigned int, TYPEDEF) uiTimeMeasGroundPlaneExtract;
  VAR(unsigned int, TYPEDEF) uiTimeKalmanPredict;
  VAR(unsigned int, TYPEDEF) uiTimeKalmanUpdateWithCam2Cam;
  VAR(unsigned int, TYPEDEF) uiTimeKalmanUpdateWithSlamFeature;
  VAR(unsigned int, TYPEDEF) uiTimeKalmanUpdateWithGroundPlane;
  VAR(unsigned int, TYPEDEF) uiTimeKalmanCycleUpdate;
  VAR(unsigned int, TYPEDEF) uiTimeKalmanRemoveSlamFeature;
  VAR(unsigned int, TYPEDEF) uiTimeKalmanAddSlamFeature;
  VAR(unsigned int, TYPEDEF) uiTimeFTRCDisparityUpdate;
  VAR(unsigned int, TYPEDEF) uiTimeAvailability;
} EmoTimeMeas_t;
#endif
#ifndef RTE_TYPE_EmoOutput_t
#define RTE_TYPE_EmoOutput_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(EmoAvailability_t, TYPEDEF) eEmoAvailability;
  VAR(eEmoInputSource_t, TYPEDEF) eEmoInputSource;
  VAR(unsigned int, TYPEDEF) uiNumUsableImageFeatures;
  VAR(unsigned int, TYPEDEF) uiNumUsedImageFeatures;
  VAR(float, TYPEDEF) fPercentageStationaryFlow;
  VAR(EmoWorldToWorld_t, TYPEDEF) EmoWorldToWorld;
  VAR(EmoWorldToCamInstant_t, TYPEDEF) EmoWorldToCamInstant;
  VAR(EmoCamToCam_t, TYPEDEF) EmoCamToCam;
  VAR(EmoOnlineCalibration_t, TYPEDEF) EmoOnlineCalibration;
  VAR(EmoTimeMeas_t, TYPEDEF) EmoTimeMeas;
} EmoOutput_t;
#endif
#ifndef RTE_TYPE_EngNSafe
#define RTE_TYPE_EngNSafe
typedef struct
{
  VAR(uint16_t, TYPEDEF) EngN;
  VAR(sint16_t, TYPEDEF) EngNGrdt;
  VAR(uint8_t, TYPEDEF) EngNChks;
  VAR(uint8_t, TYPEDEF) EngNCntr;
} EngNSafe;
#endif
#ifndef RTE_TYPE_EngT
#define RTE_TYPE_EngT
typedef struct
{
  VAR(uint8_t, TYPEDEF) EngT;
  VAR(uint8_t, TYPEDEF) EngTQf;
} EngT;
#endif
#ifndef RTE_TYPE_EpbLampReqType_t
#define RTE_TYPE_EpbLampReqType_t
typedef VAR(unsigned char, TYPEDEF) EpbLampReqType_t;
#endif
#ifndef RTE_TYPE_EpbLampReqRec
#define RTE_TYPE_EpbLampReqRec
typedef struct
{
  VAR(EpbLampReqType_t, TYPEDEF) EpbLampReq;
  VAR(uint8_t, TYPEDEF) EpbLampReqChks;
  VAR(uint8_t, TYPEDEF) EpbLampReqCntr;
} EpbLampReqRec;
#endif
#ifndef RTE_TYPE_EpbSts_t
#define RTE_TYPE_EpbSts_t
typedef VAR(unsigned char, TYPEDEF) EpbSts_t;
#endif
#ifndef RTE_TYPE_EpbStsRec1
#define RTE_TYPE_EpbStsRec1
typedef struct
{
  VAR(EpbSts_t, TYPEDEF) EpbSts;
  VAR(uint8_t, TYPEDEF) EpbStsChks;
  VAR(uint8_t, TYPEDEF) EpbStsCntr;
} EpbStsRec1;
#endif
#ifndef RTE_TYPE_Errors_t
#define RTE_TYPE_Errors_t
typedef struct
{
  VAR(float, TYPEDEF) CtrlErrDistY_m;
  VAR(float, TYPEDEF) CtrlErrHeadingAngle_rad;
} Errors_t;
#endif
#ifndef RTE_TYPE_EscSptModReqdByDrvrRec1
#define RTE_TYPE_EscSptModReqdByDrvrRec1
typedef struct
{
  VAR(boolean, TYPEDEF) EscSptModReqdByDrvr;
  VAR(uint8_t, TYPEDEF) Pen;
} EscSptModReqdByDrvrRec1;
#endif
#ifndef RTE_TYPE_EscSt_t
#define RTE_TYPE_EscSt_t
typedef VAR(unsigned char, TYPEDEF) EscSt_t;
#endif
#ifndef RTE_TYPE_EscStSafe1
#define RTE_TYPE_EscStSafe1
typedef struct
{
  VAR(EscSt_t, TYPEDEF) EscSt;
  VAR(uint8_t, TYPEDEF) EscStChks;
  VAR(uint8_t, TYPEDEF) EscStCntr;
} EscStSafe1;
#endif
#ifndef RTE_TYPE_EscWarnIndcnReq_t
#define RTE_TYPE_EscWarnIndcnReq_t
typedef VAR(unsigned char, TYPEDEF) EscWarnIndcnReq_t;
#endif
#ifndef RTE_TYPE_EscWarnIndcnReqRec1
#define RTE_TYPE_EscWarnIndcnReqRec1
typedef struct
{
  VAR(EscWarnIndcnReq_t, TYPEDEF) EscWarnIndcnReq;
  VAR(uint8_t, TYPEDEF) EscWarnIndcnReqChks;
  VAR(uint8_t, TYPEDEF) EscWarnIndcnReqCntr;
} EscWarnIndcnReqRec1;
#endif
#ifndef RTE_TYPE_EspPrefillActive
#define RTE_TYPE_EspPrefillActive
typedef VAR(unsigned char, TYPEDEF) EspPrefillActive;
#endif
#ifndef RTE_TYPE_LCF_Event_t
#define RTE_TYPE_LCF_Event_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) EventId_nu;
  VAR(unsigned short, TYPEDEF) EventLifetime_nu;
} LCF_Event_t;
#endif
#ifndef RTE_TYPE_EvntDtctnIucEvents_nu_array_t
#define RTE_TYPE_EvntDtctnIucEvents_nu_array_t
typedef VAR(LCF_Event_t, TYPEDEF) EvntDtctnIucEvents_nu_array_t[5];
#endif
#ifndef RTE_TYPE_EvntDtctnSenEvents_nu_array_t
#define RTE_TYPE_EvntDtctnSenEvents_nu_array_t
typedef VAR(LCF_Event_t, TYPEDEF) EvntDtctnSenEvents_nu_array_t[5];
#endif
#ifndef RTE_TYPE_EvntDtctnVehEvents_nu_array_t
#define RTE_TYPE_EvntDtctnVehEvents_nu_array_t
typedef VAR(LCF_Event_t, TYPEDEF) EvntDtctnVehEvents_nu_array_t[5];
#endif
#ifndef RTE_TYPE_ExistenceProb
#define RTE_TYPE_ExistenceProb
typedef VAR(unsigned char, TYPEDEF) ExistenceProb;
#endif
#ifndef RTE_TYPE_ExternalCamBlockageDetection_t
#define RTE_TYPE_ExternalCamBlockageDetection_t
typedef VAR(unsigned char, TYPEDEF) ExternalCamBlockageDetection_t;
#endif
#ifndef RTE_TYPE_FCA_status_t
#define RTE_TYPE_FCA_status_t
typedef VAR(unsigned char, TYPEDEF) FCA_status_t;
#endif
#ifndef RTE_TYPE_eLkaAldwMode_t
#define RTE_TYPE_eLkaAldwMode_t
typedef VAR(unsigned char, TYPEDEF) eLkaAldwMode_t;
#endif
#ifndef RTE_TYPE_eLDWSwitch_t
#define RTE_TYPE_eLDWSwitch_t
typedef VAR(unsigned char, TYPEDEF) eLDWSwitch_t;
#endif
#ifndef RTE_TYPE_eLDPSwitch_t
#define RTE_TYPE_eLDPSwitch_t
typedef VAR(unsigned char, TYPEDEF) eLDPSwitch_t;
#endif
#ifndef RTE_TYPE_eLKASwitch_t
#define RTE_TYPE_eLKASwitch_t
typedef VAR(unsigned char, TYPEDEF) eLKASwitch_t;
#endif
#ifndef RTE_TYPE_eLKSSensitivity_t
#define RTE_TYPE_eLKSSensitivity_t
typedef VAR(unsigned char, TYPEDEF) eLKSSensitivity_t;
#endif
#ifndef RTE_TYPE_eLKSTurnSignal_t
#define RTE_TYPE_eLKSTurnSignal_t
typedef VAR(unsigned char, TYPEDEF) eLKSTurnSignal_t;
#endif
#ifndef RTE_TYPE_FCTALDWInputGeneric_t
#define RTE_TYPE_FCTALDWInputGeneric_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(eLkaAldwMode_t, TYPEDEF) eLKAALDWMode;
  VAR(eLDWSwitch_t, TYPEDEF) eLDWSwitch;
  VAR(eLDPSwitch_t, TYPEDEF) eLDPSwitch;
  VAR(eLKASwitch_t, TYPEDEF) eLKASwitch;
  VAR(eLKSSensitivity_t, TYPEDEF) eLKSSensitivity;
  VAR(eLKSTurnSignal_t, TYPEDEF) eLKSTurnSignal;
  VAR(float, TYPEDEF) fDriverTorque;
  VAR(float, TYPEDEF) fPinionAngle;
  VAR(boolean, TYPEDEF) bHazardLight;
  VAR(boolean, TYPEDEF) bChasCtrlOn;
  VAR(boolean, TYPEDEF) bChasCtrlActive;
  VAR(boolean, TYPEDEF) bDriverHandsOff;
  VAR(boolean, TYPEDEF) bLDPIntActive;
  VAR(boolean, TYPEDEF) bEBASuppression;
} FCTALDWInputGeneric_t;
#endif
#ifndef RTE_TYPE_eLKSStatus_t
#define RTE_TYPE_eLKSStatus_t
typedef VAR(unsigned char, TYPEDEF) eLKSStatus_t;
#endif
#ifndef RTE_TYPE_eLKSOperationStatus_t
#define RTE_TYPE_eLKSOperationStatus_t
typedef VAR(unsigned short, TYPEDEF) eLKSOperationStatus_t;
#endif
#ifndef RTE_TYPE_eLKSSuppressionStatus_t
#define RTE_TYPE_eLKSSuppressionStatus_t
typedef VAR(unsigned short, TYPEDEF) eLKSSuppressionStatus_t;
#endif
#ifndef RTE_TYPE_eLKSCompleteStatus_t
#define RTE_TYPE_eLKSCompleteStatus_t
typedef VAR(unsigned short, TYPEDEF) eLKSCompleteStatus_t;
#endif
#ifndef RTE_TYPE_sLDW_t
#define RTE_TYPE_sLDW_t
typedef struct
{
  VAR(eLKSStatus_t, TYPEDEF) eLDWStatus;
  VAR(eLKSOperationStatus_t, TYPEDEF) sOperationStatus;
  VAR(eLKSSuppressionStatus_t, TYPEDEF) sLeftSuppressionStatus;
  VAR(eLKSCompleteStatus_t, TYPEDEF) sLeftCompleteStatus;
  VAR(eLKSSuppressionStatus_t, TYPEDEF) sRightSuppressionStatus;
  VAR(eLKSCompleteStatus_t, TYPEDEF) sRightCompleteStatus;
} sLDW_t;
#endif
#ifndef RTE_TYPE_sLDP_t
#define RTE_TYPE_sLDP_t
typedef struct
{
  VAR(eLKSStatus_t, TYPEDEF) eLDPStatus;
  VAR(eLKSOperationStatus_t, TYPEDEF) sOperationStatus;
  VAR(eLKSSuppressionStatus_t, TYPEDEF) sLeftSuppressionStatus;
  VAR(eLKSCompleteStatus_t, TYPEDEF) sLeftCompleteStatus;
  VAR(eLKSSuppressionStatus_t, TYPEDEF) sRightSuppressionStatus;
  VAR(eLKSCompleteStatus_t, TYPEDEF) sRightCompleteStatus;
  VAR(boolean, TYPEDEF) bDriverSteeringRequest;
} sLDP_t;
#endif
#ifndef RTE_TYPE_FCTALDWOutputGeneric_t
#define RTE_TYPE_FCTALDWOutputGeneric_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(E_FCTIF_ALDWStatus_t, TYPEDEF) ALDWStatus;
  VAR(E_FCTIF_ALDWWrnRq_t, TYPEDEF) ALDWWarnRq;
  VAR(E_FCTIF_ALDWWarnSuppStat_t, TYPEDEF) ALDWWarnSuppStat;
  VAR(sLDW_t, TYPEDEF) sLDW;
  VAR(sLDP_t, TYPEDEF) sLDP;
} FCTALDWOutputGeneric_t;
#endif
#ifndef RTE_TYPE_SYSDampState_t
#define RTE_TYPE_SYSDampState_t
typedef VAR(unsigned char, TYPEDEF) SYSDampState_t;
#endif
#ifndef RTE_TYPE_eGDBPDStates_t
#define RTE_TYPE_eGDBPDStates_t
typedef VAR(unsigned char, TYPEDEF) eGDBPDStates_t;
#endif
#ifndef RTE_TYPE_FCTBlockageDebugInfo_t
#define RTE_TYPE_FCTBlockageDebugInfo_t
typedef struct
{
  VAR(SYSDampState_t, TYPEDEF) eSPMBlockageState;
  VAR(eGDBPDStates_t, TYPEDEF) eSPMSelfTestState;
  VAR(unsigned short, TYPEDEF) ucEstiRange;
  VAR(ucConfidence_t, TYPEDEF) ucEstiRangeConf;
  VAR(unsigned char, TYPEDEF) ucEstiRangeProb;
  VAR(unsigned char, TYPEDEF) ucObjLossProb;
  VAR(ucConfidence_t, TYPEDEF) ucObjLossConf;
  VAR(unsigned char, TYPEDEF) ucOverallProb;
  VAR(ucConfidence_t, TYPEDEF) ucOverallConf;
  VAR(unsigned short, TYPEDEF) usRoadbeamTimeCnt;
  VAR(unsigned short, TYPEDEF) usTimeoutWayCnt;
  VAR(unsigned char, TYPEDEF) ucTimeoutTimeCnt;
  VAR(unsigned char, TYPEDEF) ucTimeoutBlkProb;
  VAR(ucConfidence_t, TYPEDEF) ucTimeoutBlkConf;
  VAR(unsigned short, TYPEDEF) usFullBlkTimer;
} FCTBlockageDebugInfo_t;
#endif
#ifndef RTE_TYPE_iBrkOutput_t
#define RTE_TYPE_iBrkOutput_t
typedef struct
{
  VAR(AnecLong_array_t, TYPEDEF) AnecLong;
  VAR(float, TYPEDEF) AllowedDistance;
} iBrkOutput_t;
#endif
#ifndef RTE_TYPE_FCTCDOutputCustom_t
#define RTE_TYPE_FCTCDOutputCustom_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(iBrkOutput_t, TYPEDEF) iBrkOutput;
} FCTCDOutputCustom_t;
#endif
#ifndef RTE_TYPE_FCT_OP_MODE_t
#define RTE_TYPE_FCT_OP_MODE_t
typedef VAR(unsigned char, TYPEDEF) FCT_OP_MODE_t;
#endif
#ifndef RTE_TYPE_FCTCtrlData_t
#define RTE_TYPE_FCTCtrlData_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(FCT_OP_MODE_t, TYPEDEF) OpMode;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
  VAR(float, TYPEDEF) fCycleTime;
} FCTCtrlData_t;
#endif
#ifndef RTE_TYPE_eLongControlStatus_t
#define RTE_TYPE_eLongControlStatus_t
typedef VAR(unsigned char, TYPEDEF) eLongControlStatus_t;
#endif
#ifndef RTE_TYPE_sLongControlStatus_t
#define RTE_TYPE_sLongControlStatus_t
typedef struct
{
  VAR(eLongControlStatus_t, TYPEDEF) eLongControlStatus;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
} sLongControlStatus_t;
#endif
#ifndef RTE_TYPE_FCTCustomInput_t
#define RTE_TYPE_FCTCustomInput_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(sLongControlStatus_t, TYPEDEF) sLongControlStatus;
  VAR(CodingPar_t, TYPEDEF) CodingPar;
  VAR(eTurnIndicator_t, TYPEDEF) eTurnIndicator;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
} FCTCustomInput_t;
#endif
#ifndef RTE_TYPE_SICustSelectInfo_t
#define RTE_TYPE_SICustSelectInfo_t
typedef struct
{
  VAR(float, TYPEDEF) fLongControlDistance;
  VAR(float, TYPEDEF) fSiAccPreselDist;
  VAR(float, TYPEDEF) fVisibilityRestriction;
  VAR(float, TYPEDEF) fRangeFactor;
  VAR(float, TYPEDEF) fSeekLaneWidth;
} SICustSelectInfo_t;
#endif
#ifndef RTE_TYPE_MultiObjHMIData_t
#define RTE_TYPE_MultiObjHMIData_t
typedef struct
{
  VAR(boolean, TYPEDEF) b_Detected;
  VAR(a_reserve_array_t, TYPEDEF) u_reserved;
  VAR(float, TYPEDEF) f_DistLong;
  VAR(float, TYPEDEF) f_DistLat;
  VAR(float, TYPEDEF) f_Vrel;
  VAR(float, TYPEDEF) f_LatDistToTraj;
  VAR(unsigned char, TYPEDEF) u_Quality;
  VAR(ObjNumber_t, TYPEDEF) s_ID;
  VAR(EM_t_GenObjClassification, TYPEDEF) e_Type;
  VAR(EM_t_GenObjDynamicProperty, TYPEDEF) e_DynProperty;
  VAR(eAssociatedLane_t, TYPEDEF) e_AssociatedLane;
} MultiObjHMIData_t;
#endif
#ifndef RTE_TYPE_MultiObjHMIData_array_t
#define RTE_TYPE_MultiObjHMIData_array_t
typedef VAR(MultiObjHMIData_t, TYPEDEF) MultiObjHMIData_array_t[6];
#endif
#ifndef RTE_TYPE_FCTCustomOutput_t
#define RTE_TYPE_FCTCustomOutput_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(SICustSelectInfo_t, TYPEDEF) AccSelectionInfo;
  VAR(CPCustOutPredTraj_t, TYPEDEF) PredictedTrajectory;
  VAR(FCTBlockageDebugInfo_t, TYPEDEF) BlockageInfo;
  VAR(CustObjData_array_t, TYPEDEF) CustObjData;
  VAR(MultiObjHMIData_array_t, TYPEDEF) MultiObjHMIData;
} FCTCustomOutput_t;
#endif
#ifndef RTE_TYPE_FCTLKSOutputLCD_t
#define RTE_TYPE_FCTLKSOutputLCD_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(float, TYPEDEF) fSteerTrq;
  VAR(boolean, TYPEDEF) bSteerTrqReq;
} FCTLKSOutputLCD_t;
#endif
#ifndef RTE_TYPE_FCTLKSOutputLCK_t
#define RTE_TYPE_FCTLKSOutputLCK_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(float, TYPEDEF) fRefSteerAng;
  VAR(boolean, TYPEDEF) bRefSteerAngReq;
} FCTLKSOutputLCK_t;
#endif
#ifndef RTE_TYPE_FCTSenAccOOI_t
#define RTE_TYPE_FCTSenAccOOI_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(AccOOINextLong_t, TYPEDEF) AccOOINextLong;
  VAR(AccOOI_t, TYPEDEF) AccOOIHiddenNextLong;
  VAR(AccOOI_t, TYPEDEF) AccOOINextLeft;
  VAR(AccOOI_t, TYPEDEF) AccOOINextRight;
  VAR(AccOOI_t, TYPEDEF) AccOOIHiddenNextLeft;
  VAR(AccOOI_t, TYPEDEF) AccOOIHiddenNextRight;
  VAR(boolean, TYPEDEF) bFrontObstacleDetected;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
} FCTSenAccOOI_t;
#endif
#ifndef RTE_TYPE_fDistance_t
#define RTE_TYPE_fDistance_t
typedef VAR(float, TYPEDEF) fDistance_t;
#endif
#ifndef RTE_TYPE_FCTSenErrorOut_t
#define RTE_TYPE_FCTSenErrorOut_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(AlgoErrorState_t, TYPEDEF) ObjectNotMeasured;
  VAR(AlgoErrorState_t, TYPEDEF) ObjectNotMeasTmp;
  VAR(AlgoErrorState_t, TYPEDEF) Blockage;
  VAR(AlgoErrorState_t, TYPEDEF) IncreaseBlockage;
  VAR(AlgoErrorState_t, TYPEDEF) DecreaseBlockage;
  VAR(unsigned char, TYPEDEF) uiNoOfObjLosses;
  VAR(AlgoErrorState_t, TYPEDEF) BelowMinPerfDist_AZ;
  VAR(AlgoErrorState_t, TYPEDEF) BelowMinPerfDist_VDY;
  VAR(AlgoErrorState_t, TYPEDEF) BelowMinPerfDist_EL;
  VAR(AlgoErrorState_t, TYPEDEF) InterferenceRange;
  VAR(AlgoErrorState_t, TYPEDEF) SRDDampingState;
  VAR(boolean, TYPEDEF) bObjSelectionActive;
  VAR(boolean, TYPEDEF) bCollisionAvoidActive;
  VAR(boolean, TYPEDEF) bRequestRoadBeam;
  VAR(AlgoSignalState_t, TYPEDEF) eSafetyDistStateEBA;
  VAR(fDistance_t, TYPEDEF) tSafetyDistanceEBA;
} FCTSenErrorOut_t;
#endif
#ifndef RTE_TYPE_FCTSubChainQualifier_t
#define RTE_TYPE_FCTSubChainQualifier_t
typedef VAR(unsigned char, TYPEDEF) FCTSubChainQualifier_t;
#endif
#ifndef RTE_TYPE_FCTVehCustomInput_t
#define RTE_TYPE_FCTVehCustomInput_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(boolean, TYPEDEF) bEPBactive;
  VAR(boolean, TYPEDEF) bESPactive;
  VAR(boolean, TYPEDEF) bJerkWarningavail;
  VAR(boolean, TYPEDEF) bPrefillavail;
  VAR(boolean, TYPEDEF) bPrebrakeavail;
  VAR(boolean, TYPEDEF) bFCWSwitchstatus;
  VAR(boolean, TYPEDEF) bAEBSwitchstatus;
  VAR(boolean, TYPEDEF) bHBAavail;
  VAR(boolean, TYPEDEF) bEngineactive;
} FCTVehCustomInput_t;
#endif
#ifndef RTE_TYPE_FCTVehErrorOut_t
#define RTE_TYPE_FCTVehErrorOut_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(AlgoErrorState_t, TYPEDEF) YawRateUnplausible;
  VAR(AlgoErrorState_t, TYPEDEF) VehicleSpeedUnplausible;
} FCTVehErrorOut_t;
#endif
#ifndef RTE_TYPE_aImageData_array_t_0
#define RTE_TYPE_aImageData_array_t_0
typedef VAR(unsigned char, TYPEDEF) aImageData_array_t_0[2028];
#endif
#ifndef RTE_TYPE_FFDImageU8Small_t
#define RTE_TYPE_FFDImageU8Small_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(ImageHeader_t, TYPEDEF) sImgHeader;
  VAR(aImageData_array_t_0, TYPEDEF) aImageData;
} FFDImageU8Small_t;
#endif
#ifndef RTE_TYPE_aImageData_array_t
#define RTE_TYPE_aImageData_array_t
typedef VAR(unsigned char, TYPEDEF) aImageData_array_t[2560];
#endif
#ifndef RTE_TYPE_FFDImageU8_t
#define RTE_TYPE_FFDImageU8_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(ImageHeader_t, TYPEDEF) sImgHeader;
  VAR(aImageData_array_t, TYPEDEF) aImageData;
} FFDImageU8_t;
#endif
#ifndef RTE_TYPE_FH_CommandBuffer_t
#define RTE_TYPE_FH_CommandBuffer_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_RequesterID;
  VAR(unsigned int, TYPEDEF) u_Command;
  VAR(unsigned int, TYPEDEF) u_FlashPointer;
  VAR(unsigned int, TYPEDEF) u_DataPointer;
  VAR(unsigned int, TYPEDEF) u_NumOfBlocks;
  VAR(unsigned int, TYPEDEF) u_Size;
} FH_CommandBuffer_t;
#endif
#ifndef RTE_TYPE_FH_ReplyBuffer_t
#define RTE_TYPE_FH_ReplyBuffer_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_RequesterID;
  VAR(unsigned int, TYPEDEF) u_Command;
  VAR(unsigned int, TYPEDEF) u_Reply;
  VAR(unsigned int, TYPEDEF) u_Payload;
} FH_ReplyBuffer_t;
#endif
#ifndef RTE_TYPE_FLSPCalIntrDistRight_t
#define RTE_TYPE_FLSPCalIntrDistRight_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(float, TYPEDEF) f32_InR_DistMonoK1;
  VAR(float, TYPEDEF) f32_InR_DistMonoK2;
} FLSPCalIntrDistRight_t;
#endif
#ifndef RTE_TYPE_FLSPImagerAnalogTest_t
#define RTE_TYPE_FLSPImagerAnalogTest_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(unsigned short, TYPEDEF) ui16_ATV3;
  VAR(unsigned short, TYPEDEF) ui16_ATV1;
  VAR(unsigned short, TYPEDEF) ui16_MEAN_ATV3_lin_norm;
  VAR(unsigned short, TYPEDEF) ui16_MEAN_ATV1_1x_lin_norm;
  VAR(unsigned short, TYPEDEF) ui16_MEAN_ATV1_2x_lin_norm;
  VAR(unsigned short, TYPEDEF) ui16_MEAN_ATV3_1xgain_ref;
  VAR(unsigned short, TYPEDEF) ui16_MEAN_ATV1_1xgain_ref;
  VAR(unsigned short, TYPEDEF) ui16_MEAN_ATV1_2xgain_ref;
} FLSPImagerAnalogTest_t;
#endif
#ifndef RTE_TYPE_FLSPImagerCharacteristicsRight_t
#define RTE_TYPE_FLSPImagerCharacteristicsRight_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(float, TYPEDEF) f32_DCG_Factor;
  VAR(unsigned short, TYPEDEF) ui16_T1_Production;
  VAR(unsigned short, TYPEDEF) ui16_Actual_T2_right;
  VAR(unsigned short, TYPEDEF) ui16_Actual_T3_right;
  VAR(unsigned short, TYPEDEF) ui16_ResponseCurveIndex;
  VAR(unsigned short, TYPEDEF) ui16_AnalogGainMinus40;
  VAR(unsigned short, TYPEDEF) ui16_AnalogGainPlus25;
  VAR(unsigned short, TYPEDEF) ui16_AnalogGainPlus85;
  VAR(unsigned short, TYPEDEF) ui16_AnalogGainPlus105;
  VAR(unsigned short, TYPEDEF) ui16_ConversionGainMinus40;
  VAR(unsigned short, TYPEDEF) ui16_ConversionGainPlus25;
  VAR(unsigned short, TYPEDEF) ui16_ConversionGainPlus85;
  VAR(unsigned short, TYPEDEF) ui16_ConversionGainPlus105;
  VAR(unsigned short, TYPEDEF) ui16_TemperatureImager;
  VAR(float, TYPEDEF) f32_Black_Level_DarkRows_Prod_T1_511_Right;
  VAR(float, TYPEDEF) f32_Black_Level_DarkRows_Prod_T1_016_Right;
} FLSPImagerCharacteristicsRight_t;
#endif
#ifndef RTE_TYPE_uSerialNumber_array_t
#define RTE_TYPE_uSerialNumber_array_t
typedef VAR(unsigned char, TYPEDEF) uSerialNumber_array_t[26];
#endif
#ifndef RTE_TYPE_uTraceNumber_array_t
#define RTE_TYPE_uTraceNumber_array_t
typedef VAR(unsigned char, TYPEDEF) uTraceNumber_array_t[14];
#endif
#ifndef RTE_TYPE_FLSPProductionData_t
#define RTE_TYPE_FLSPProductionData_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(uSerialNumber_array_t, TYPEDEF) uSerialNumber;
  VAR(uTraceNumber_array_t, TYPEDEF) uTraceNumber;
} FLSPProductionData_t;
#endif
#ifndef RTE_TYPE_FLSPProductionIntrinsic_t
#define RTE_TYPE_FLSPProductionIntrinsic_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(float, TYPEDEF) f32_FocalLength;
  VAR(float, TYPEDEF) f32_LensDistortion;
  VAR(float, TYPEDEF) f32_IntrinsicRoll;
  VAR(float, TYPEDEF) f32_IntrinsicPitch;
  VAR(float, TYPEDEF) f32_IntrinsicYaw;
  VAR(float, TYPEDEF) f32_HPrinAxis;
  VAR(float, TYPEDEF) f32_VPrinAxis;
  VAR(float, TYPEDEF) f32_RedGreenRatio;
  VAR(float, TYPEDEF) f32_BlueGreenRatio;
  VAR(float, TYPEDEF) f32_GreenRefRatio;
  VAR(float, TYPEDEF) f32_MTF_red;
  VAR(float, TYPEDEF) f32_MTF_green;
  VAR(float, TYPEDEF) f32_MTF_blue;
  VAR(float, TYPEDEF) f32_streylighttest;
  VAR(float, TYPEDEF) f32_LensTangentialDistortion;
} FLSPProductionIntrinsic_t;
#endif
#ifndef RTE_TYPE_s_Buffer_t
#define RTE_TYPE_s_Buffer_t
typedef struct
{
  VAR(float, TYPEDEF) f32_Brightness;
  VAR(float, TYPEDEF) f32_OverallMeanBrightness;
  VAR(float, TYPEDEF) f32_RedPixMean;
  VAR(float, TYPEDEF) f32_GreenPixMean;
  VAR(float, TYPEDEF) f32_BluePixMean;
} s_Buffer_t;
#endif
#ifndef RTE_TYPE_s_Buffer_array_t
#define RTE_TYPE_s_Buffer_array_t
typedef VAR(s_Buffer_t, TYPEDEF) s_Buffer_array_t[12];
#endif
#ifndef RTE_TYPE_FLSPResponseCurvePeriphery_t
#define RTE_TYPE_FLSPResponseCurvePeriphery_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(unsigned int, TYPEDEF) ui32_NumberOfImagerCharacteristicPoints;
  VAR(s_Buffer_array_t, TYPEDEF) s_Buffer;
} FLSPResponseCurvePeriphery_t;
#endif
#ifndef RTE_TYPE_FLSPStereoCalIntrinsics_t
#define RTE_TYPE_FLSPStereoCalIntrinsics_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(float, TYPEDEF) f32_InFocusX;
  VAR(float, TYPEDEF) f32_InFocusY;
  VAR(float, TYPEDEF) f32_InPrincipalPointXCoordinate;
  VAR(float, TYPEDEF) f32_InPrincipalPointYCoordinate;
  VAR(float, TYPEDEF) f32_RadialDistortionCoeff1;
  VAR(float, TYPEDEF) f32_RadialDistortionCoeff2;
  VAR(float, TYPEDEF) f32_RadialDistortionCoeff3;
  VAR(float, TYPEDEF) f32_RadialDistortionCoeff4;
  VAR(float, TYPEDEF) f32_RadialDistortionCoeff5;
  VAR(float, TYPEDEF) f32_RadialDistortionCoeff6;
  VAR(float, TYPEDEF) f32_RadialDistortionCoeff7;
  VAR(float, TYPEDEF) f32_RadialDistortionCoeff8;
  VAR(float, TYPEDEF) f32_RadialDistortionCoeff9;
  VAR(float, TYPEDEF) f32_RadialDistortionCoeff10;
  VAR(unsigned int, TYPEDEF) ui32_ActualNumberOfCoeffients;
} FLSPStereoCalIntrinsics_t;
#endif
#ifndef RTE_TYPE_FamoComponentDetailedResults_t
#define RTE_TYPE_FamoComponentDetailedResults_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) uiCompId;
  VAR(unsigned short, TYPEDEF) uiNrFailedRangeChecks;
  VAR(unsigned short, TYPEDEF) uiNrFailedGradientChecks;
  VAR(unsigned short, TYPEDEF) uiNrFailedIntraPlausibilityChecks;
  VAR(unsigned short, TYPEDEF) uiNrFailedInterPlausibilityChecks;
} FamoComponentDetailedResults_t;
#endif
#ifndef RTE_TYPE_Result_t
#define RTE_TYPE_Result_t
typedef VAR(unsigned int, TYPEDEF) Result_t;
#endif
#ifndef RTE_TYPE_dummy_alignTo4Byte_array_t
#define RTE_TYPE_dummy_alignTo4Byte_array_t
typedef VAR(unsigned char, TYPEDEF) dummy_alignTo4Byte_array_t[3];
#endif
#ifndef RTE_TYPE_aComponentResult_array_t
#define RTE_TYPE_aComponentResult_array_t
typedef VAR(FamoComponentDetailedResults_t, TYPEDEF) aComponentResult_array_t[20];
#endif
#ifndef RTE_TYPE_FamoOutput_t
#define RTE_TYPE_FamoOutput_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(Result_t, TYPEDEF) Result;
  VAR(unsigned char, TYPEDEF) uiNrArrayEntries;
  VAR(dummy_alignTo4Byte_array_t, TYPEDEF) dummy_alignTo4Byte;
  VAR(aComponentResult_array_t, TYPEDEF) aComponentResult;
} FamoOutput_t;
#endif
#ifndef RTE_TYPE_velocity_t
#define RTE_TYPE_velocity_t
typedef VAR(short, TYPEDEF) velocity_t;
#endif
#ifndef RTE_TYPE_FctVeh2SenInfo_t
#define RTE_TYPE_FctVeh2SenInfo_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(boolean, TYPEDEF) StandStill;
  VAR(boolean, TYPEDEF) OverrideAccel;
  VAR(velocity_t, TYPEDEF) CurLongCtrlVelocity;
  VAR(acceleration_t, TYPEDEF) CurLongCtrlAccel;
  VAR(acceleration_t, TYPEDEF) MaxAccelLimit;
  VAR(acceleration_t, TYPEDEF) MinAccelLimit;
  VAR(percentage_t, TYPEDEF) HeadwaySetting;
  VAR(percentage_t, TYPEDEF) ProbLaneChgLeft;
  VAR(percentage_t, TYPEDEF) ProbLaneChgRight;
  VAR(DriveMode_t_e, TYPEDEF) eDriveMode;
  VAR(boolean, TYPEDEF) AccOn;
  VAR(boolean, TYPEDEF) AccNotOff;
  VAR(boolean, TYPEDEF) DecelLimOverride;
  VAR(boolean, TYPEDEF) CtrlToRelevObj;
  VAR(boolean, TYPEDEF) ObjectEffective;
  VAR(unsigned char, TYPEDEF) reserved1;
} FctVeh2SenInfo_t;
#endif
#ifndef RTE_TYPE_TgtVehCtrlQualifier_nu_t
#define RTE_TYPE_TgtVehCtrlQualifier_nu_t
typedef VAR(unsigned char, TYPEDEF) TgtVehCtrlQualifier_nu_t;
#endif
#ifndef RTE_TYPE_Flags_t
#define RTE_TYPE_Flags_t
typedef struct
{
  VAR(TgtVehCtrlQualifier_nu_t, TYPEDEF) TgtVehCtrlQualifier_nu;
  VAR(boolean, TYPEDEF) TgtCrv_LimiterWarning_nu;
  VAR(unsigned char, TYPEDEF) TrjCtrQualifierService_nu;
  VAR(unsigned char, TYPEDEF) LaDmcQualifierService_nu;
  VAR(unsigned short, TYPEDEF) QuStatusTrajPlan_nu;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
} Flags_t;
#endif
#ifndef RTE_TYPE_FlowElement_t
#define RTE_TYPE_FlowElement_t
typedef VAR(unsigned short, TYPEDEF) FlowElement_t;
#endif
#ifndef RTE_TYPE_FlowImageCorrespondenceType_t
#define RTE_TYPE_FlowImageCorrespondenceType_t
typedef VAR(unsigned char, TYPEDEF) FlowImageCorrespondenceType_t;
#endif
#ifndef RTE_TYPE_FlowImage_t
#define RTE_TYPE_FlowImage_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(ImageHeader_t, TYPEDEF) sImgHeader;
  VAR(FlowImageCorrespondenceType_t, TYPEDEF) eCorrespondenceType;
  VAR(signed char, TYPEDEF) iFlowScaleX;
  VAR(signed char, TYPEDEF) iFlowScaleY;
  VAR(SignalHeader_t, TYPEDEF) sPrevImgSigHeader;
  VAR(FlowElement_t, TYPEDEF) pFlowData;
} FlowImage_t;
#endif
#ifndef RTE_TYPE_Flt32
#define RTE_TYPE_Flt32
typedef VAR(float, TYPEDEF) Flt32;
#endif
#ifndef RTE_TYPE_FltEgyCns_t
#define RTE_TYPE_FltEgyCns_t
typedef VAR(boolean, TYPEDEF) FltEgyCns_t;
#endif
#ifndef RTE_TYPE_FltSteerLockSts_t
#define RTE_TYPE_FltSteerLockSts_t
typedef VAR(unsigned char, TYPEDEF) FltSteerLockSts_t;
#endif
#ifndef RTE_TYPE_Fog
#define RTE_TYPE_Fog
typedef VAR(float, TYPEDEF) Fog;
#endif
#ifndef RTE_TYPE_FogDetection
#define RTE_TYPE_FogDetection
typedef VAR(RTE_HLA_FogDetection, TYPEDEF) FogDetection;
#endif
#ifndef RTE_TYPE_FrCrnrStiff
#define RTE_TYPE_FrCrnrStiff
typedef VAR(float, TYPEDEF) FrCrnrStiff;
#endif
#ifndef RTE_TYPE_FrameType_t
#define RTE_TYPE_FrameType_t
typedef VAR(unsigned char, TYPEDEF) FrameType_t;
#endif
#ifndef RTE_TYPE_FricEstimnFromVehDynRec1
#define RTE_TYPE_FricEstimnFromVehDynRec1
typedef struct
{
  VAR(uint8_t, TYPEDEF) FricEstimnFromVehDyn;
  VAR(uint8_t, TYPEDEF) FricEstimnFromVehDynQly;
} FricEstimnFromVehDynRec1;
#endif
#ifndef RTE_TYPE_FrontAxleRoadDist
#define RTE_TYPE_FrontAxleRoadDist
typedef VAR(float, TYPEDEF) FrontAxleRoadDist;
#endif
#ifndef RTE_TYPE_LCF_e_DangOcObj_t
#define RTE_TYPE_LCF_e_DangOcObj_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_DangOcObj_t;
#endif
#ifndef RTE_TYPE_LCF_e_QuDangOcObjDtct_t
#define RTE_TYPE_LCF_e_QuDangOcObjDtct_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_QuDangOcObjDtct_t;
#endif
#ifndef RTE_TYPE_FroopToLCF_t
#define RTE_TYPE_FroopToLCF_t
typedef struct
{
  VAR(LCF_e_DangOcObj_t, TYPEDEF) DangOcObjLe_nu;
  VAR(LCF_e_DangOcObj_t, TYPEDEF) DangOcObjRi_nu;
  VAR(LCF_e_QuDangOcObjDtct_t, TYPEDEF) QuDangOcObjDtct_nu;
  VAR(LCF_e_DangOcObj_t, TYPEDEF) ObjectStationaryLeft_nu;
  VAR(LCF_e_DangOcObj_t, TYPEDEF) ObjectStationaryRight_nu;
  VAR(LCF_e_DangOcObj_t, TYPEDEF) ObjectSensitiveLeft_nu;
  VAR(LCF_e_DangOcObj_t, TYPEDEF) ObjectSensitiveRight_nu;
  VAR(unsigned char, TYPEDEF) reserved1;
} FroopToLCF_t;
#endif
#ifndef RTE_TYPE_FtrcBufferIndexes_t
#define RTE_TYPE_FtrcBufferIndexes_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) u16IndexStartSlamFeature;
  VAR(unsigned short, TYPEDEF) u16IndexEndSlamFeature;
  VAR(unsigned short, TYPEDEF) u16IndexStartHLA;
  VAR(unsigned short, TYPEDEF) u16IndexEndHLA;
  VAR(unsigned short, TYPEDEF) u16IndexStartFlowTracks;
  VAR(unsigned short, TYPEDEF) u16IndexEndFlowTracks;
} FtrcBufferIndexes_t;
#endif
#ifndef RTE_TYPE_FtrcFeatureState_t
#define RTE_TYPE_FtrcFeatureState_t
typedef VAR(unsigned char, TYPEDEF) FtrcFeatureState_t;
#endif
#ifndef RTE_TYPE_FtrcInvDepth_t
#define RTE_TYPE_FtrcInvDepth_t
typedef VAR(short, TYPEDEF) FtrcInvDepth_t;
#endif
#ifndef RTE_TYPE_FtrcFeature_t
#define RTE_TYPE_FtrcFeature_t
typedef struct
{
  VAR(FtrcFeatureState_t, TYPEDEF) eState;
  VAR(unsigned char, TYPEDEF) uAge;
  VAR(unsigned char, TYPEDEF) uInlierCount;
  VAR(unsigned char, TYPEDEF) uSeedId;
  VAR(uint16_t, TYPEDEF) fpX;
  VAR(uint16_t, TYPEDEF) fpY;
  VAR(uint16_t, TYPEDEF) fpFlowDx;
  VAR(uint16_t, TYPEDEF) fpFlowDy;
  VAR(FtrcInvDepth_t, TYPEDEF) siInvZCam;
  VAR(FtrcInvDepth_t, TYPEDEF) siInvZCamPrecision;
  VAR(unsigned char, TYPEDEF) uIsFromEpipolarFlow;
} FtrcFeature_t;
#endif
#ifndef RTE_TYPE_FtrcFeatureArray_t
#define RTE_TYPE_FtrcFeatureArray_t
typedef VAR(FtrcFeature_t, TYPEDEF) FtrcFeatureArray_t[1000];
#endif
#ifndef RTE_TYPE_FtrcFeaturesPresentArray_t
#define RTE_TYPE_FtrcFeaturesPresentArray_t
typedef VAR(unsigned short, TYPEDEF) FtrcFeaturesPresentArray_t[2400];
#endif
#ifndef RTE_TYPE_FtrcFeatureList_t
#define RTE_TYPE_FtrcFeatureList_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(FtrcFeaturesPresentArray_t, TYPEDEF) aIndexValidFeatures;
  VAR(FtrcFeatureArray_t, TYPEDEF) aFeatures;
  VAR(FtrcBufferIndexes_t, TYPEDEF) sBufferIndexes;
} FtrcFeatureList_t;
#endif
#ifndef RTE_TYPE_FtrcFeatureRequestGrid_t
#define RTE_TYPE_FtrcFeatureRequestGrid_t
typedef VAR(unsigned char, TYPEDEF) FtrcFeatureRequestGrid_t[160];
#endif
#ifndef RTE_TYPE_FtrcKillFeatureArray_t
#define RTE_TYPE_FtrcKillFeatureArray_t
typedef VAR(boolean, TYPEDEF) FtrcKillFeatureArray_t[1000];
#endif
#ifndef RTE_TYPE_FtrcRefineFeatureArray_t
#define RTE_TYPE_FtrcRefineFeatureArray_t
typedef VAR(unsigned short, TYPEDEF) FtrcRefineFeatureArray_t[1000];
#endif
#ifndef RTE_TYPE_FtrcRequestGrid_t
#define RTE_TYPE_FtrcRequestGrid_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(FtrcFeatureRequestGrid_t, TYPEDEF) aRequestGrid;
} FtrcRequestGrid_t;
#endif
#ifndef RTE_TYPE_FtrcSeedingRoi_t
#define RTE_TYPE_FtrcSeedingRoi_t
typedef struct
{
  VAR(boolean, TYPEDEF) bValid;
  VAR(short, TYPEDEF) iLeft;
  VAR(short, TYPEDEF) iTop;
  VAR(short, TYPEDEF) iRight;
  VAR(short, TYPEDEF) iBottom;
} FtrcSeedingRoi_t;
#endif
#ifndef RTE_TYPE_FtrcSeedingRoiArray_t
#define RTE_TYPE_FtrcSeedingRoiArray_t
typedef VAR(FtrcSeedingRoi_t, TYPEDEF) FtrcSeedingRoiArray_t[40];
#endif
#ifndef RTE_TYPE_FtrcSeedKillList_t
#define RTE_TYPE_FtrcSeedKillList_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(FtrcSeedingRoiArray_t, TYPEDEF) aSeedingROI;
  VAR(FtrcKillFeatureArray_t, TYPEDEF) aKillFeature;
  VAR(FtrcRefineFeatureArray_t, TYPEDEF) aRefineFeatureIndexes;
} FtrcSeedKillList_t;
#endif
#ifndef RTE_TYPE_FuLvlValFromFuTbl_t
#define RTE_TYPE_FuLvlValFromFuTbl_t
typedef VAR(unsigned short, TYPEDEF) FuLvlValFromFuTbl_t;
#endif
#ifndef RTE_TYPE_FuLvlValWithQly
#define RTE_TYPE_FuLvlValWithQly
typedef struct
{
  VAR(FuLvlValFromFuTbl_t, TYPEDEF) FuLvlValFromFuTbl;
  VAR(GenQf_t, TYPEDEF) GenQF;
} FuLvlValWithQly;
#endif
#ifndef RTE_TYPE_FunctionDegradation_t
#define RTE_TYPE_FunctionDegradation_t
typedef struct
{
  VAR(boolean, TYPEDEF) b_NoEngagement;
  VAR(boolean, TYPEDEF) b_Disengagement;
  VAR(boolean, TYPEDEF) b_Deceleration;
} FunctionDegradation_t;
#endif
#ifndef RTE_TYPE_FusedRoadBorder_t
#define RTE_TYPE_FusedRoadBorder_t
typedef struct
{
  VAR(float, TYPEDEF) fDistRight;
  VAR(float, TYPEDEF) fDistRightStd;
  VAR(float, TYPEDEF) fDistLeft;
  VAR(float, TYPEDEF) fDistLeftStd;
  VAR(unsigned char, TYPEDEF) bStatusRight;
  VAR(unsigned char, TYPEDEF) bStatusLeft;
} FusedRoadBorder_t;
#endif
#ifndef RTE_TYPE_FusiErrorExtDirection_t
#define RTE_TYPE_FusiErrorExtDirection_t
typedef VAR(unsigned char, TYPEDEF) FusiErrorExtDirection_t;
#endif
#ifndef RTE_TYPE_FusiErrorExtType_t
#define RTE_TYPE_FusiErrorExtType_t
typedef VAR(unsigned char, TYPEDEF) FusiErrorExtType_t;
#endif
#ifndef RTE_TYPE_GB_t_e_DegradationReason
#define RTE_TYPE_GB_t_e_DegradationReason
typedef VAR(unsigned char, TYPEDEF) GB_t_e_DegradationReason;
#endif
#ifndef RTE_TYPE_GB_t_DegradationReason_t
#define RTE_TYPE_GB_t_DegradationReason_t
typedef struct
{
  VAR(GB_t_e_DegradationReason, TYPEDEF) ui8_DegradationReason;
} GB_t_DegradationReason_t;
#endif
#ifndef RTE_TYPE_GB_t_eFctId
#define RTE_TYPE_GB_t_eFctId
typedef VAR(unsigned char, TYPEDEF) GB_t_eFctId;
#endif
#ifndef RTE_TYPE_GB_t_FctBlockage_t
#define RTE_TYPE_GB_t_FctBlockage_t
typedef struct
{
  VAR(GB_t_eFctId, TYPEDEF) e_FctId;
  VAR(GB_t_eBlockageStatus, TYPEDEF) e_BlockageStatus;
  VAR(unsigned char, TYPEDEF) ui16_StatusConf;
} GB_t_FctBlockage_t;
#endif
#ifndef RTE_TYPE_GB_t_RadTileDefinition_t
#define RTE_TYPE_GB_t_RadTileDefinition_t
typedef struct
{
  VAR(short, TYPEDEF) si16_RadTileType;
  VAR(short, TYPEDEF) si16_RadTileIdx;
  VAR(unsigned short, TYPEDEF) ui16_D1;
  VAR(unsigned short, TYPEDEF) ui16_D2;
} GB_t_RadTileDefinition_t;
#endif
#ifndef RTE_TYPE_as_RadTilesDef_array_t
#define RTE_TYPE_as_RadTilesDef_array_t
typedef VAR(GB_t_RadTileDefinition_t, TYPEDEF) as_RadTilesDef_array_t[5];
#endif
#ifndef RTE_TYPE_GB_t_RadSegDefinition_t
#define RTE_TYPE_GB_t_RadSegDefinition_t
typedef struct
{
  VAR(short, TYPEDEF) si16_RadSegIdxX;
  VAR(short, TYPEDEF) si16_RadSegIdxY;
  VAR(float, TYPEDEF) f32_angle1;
  VAR(float, TYPEDEF) f32_angle2;
  VAR(as_RadTilesDef_array_t, TYPEDEF) as_RadTilesDef;
} GB_t_RadSegDefinition_t;
#endif
#ifndef RTE_TYPE_GB_t_TileDefinition_t
#define RTE_TYPE_GB_t_TileDefinition_t
typedef struct
{
  VAR(short, TYPEDEF) si16_TileIdxX;
  VAR(short, TYPEDEF) si16_TileIdxY;
  VAR(unsigned short, TYPEDEF) ui16_X1;
  VAR(unsigned short, TYPEDEF) ui16_X2;
  VAR(unsigned short, TYPEDEF) ui16_Y1;
  VAR(unsigned short, TYPEDEF) ui16_Y2;
} GB_t_TileDefinition_t;
#endif
#ifndef RTE_TYPE_RTE_HLAF_TTBStatus
#define RTE_TYPE_RTE_HLAF_TTBStatus
typedef VAR(unsigned char, TYPEDEF) RTE_HLAF_TTBStatus;
#endif
#ifndef RTE_TYPE_GFA
#define RTE_TYPE_GFA
typedef struct
{
  VAR(float, TYPEDEF) BndryLeft_Ang;
  VAR(float, TYPEDEF) BndryLeft_Dist;
  VAR(float, TYPEDEF) BndryLeft_Ang_Cam;
  VAR(RTE_HLAF_ObjStatus, TYPEDEF) BndryLeft_Status;
  VAR(unsigned char, TYPEDEF) BndryLeft_ObjId;
  VAR(RTE_HLAF_DistState, TYPEDEF) BndryLeft_DistState;
  VAR(RTE_HLA_DistReliability, TYPEDEF) BndryLeft_DistReliability;
  VAR(float, TYPEDEF) BndryRight_Ang;
  VAR(float, TYPEDEF) BndryRight_Dist;
  VAR(float, TYPEDEF) BndryRight_Ang_Cam;
  VAR(RTE_HLAF_ObjStatus, TYPEDEF) BndryRight_Status;
  VAR(unsigned char, TYPEDEF) BndryRight_ObjId;
  VAR(RTE_HLAF_DistState, TYPEDEF) BndryRight_DistState;
  VAR(RTE_HLA_DistReliability, TYPEDEF) BndryRight_DistReliability;
  VAR(float, TYPEDEF) BndryLower_Ang_Cam;
  VAR(RTE_HLAF_ObjStatus, TYPEDEF) BndryLower_Status;
  VAR(unsigned char, TYPEDEF) BndryLower_ObjId;
  VAR(RTE_HLAF_DistState, TYPEDEF) BndryLower_DistState;
  VAR(RTE_HLA_DistReliability, TYPEDEF) BndryLower_DistReliability;
  VAR(float, TYPEDEF) BndryUpper_Ang_Cam;
  VAR(RTE_HLAF_ObjStatus, TYPEDEF) BndryUpper_Status;
  VAR(unsigned char, TYPEDEF) BndryUpper_ObjId;
  VAR(RTE_HLAF_DistState, TYPEDEF) BndryUpper_DistState;
  VAR(RTE_HLA_DistReliability, TYPEDEF) BndryUpper_DistReliability;
  VAR(float, TYPEDEF) ClosestObj_Dist;
  VAR(float, TYPEDEF) ClosestObj_Ang;
  VAR(RTE_HLAF_ObjStatus, TYPEDEF) ClosestObj_Status;
  VAR(unsigned char, TYPEDEF) ClosestObj_ObjId;
  VAR(RTE_HLAF_DistState, TYPEDEF) ClosestObj_DistState;
  VAR(RTE_HLA_DistReliability, TYPEDEF) ClosestObj_DistReliability;
  VAR(float, TYPEDEF) MinLight_Dist;
  VAR(float, TYPEDEF) MinLight_Ang;
  VAR(RTE_HLAF_ObjStatus, TYPEDEF) MinLight_Status;
  VAR(unsigned char, TYPEDEF) MinLight_ObjId;
  VAR(RTE_HLAF_DistState, TYPEDEF) MinLight_DistState;
  VAR(float, TYPEDEF) ttb18Left;
  VAR(RTE_HLAF_TTBStatus, TYPEDEF) ttb18Left_Status;
  VAR(float, TYPEDEF) ttb18Right;
  VAR(RTE_HLAF_TTBStatus, TYPEDEF) ttb18Right_Status;
  VAR(unsigned char, TYPEDEF) ExistenceProb;
} GFA;
#endif
#ifndef RTE_TYPE_RTE_HLAF_SignalStatus
#define RTE_TYPE_RTE_HLAF_SignalStatus
typedef VAR(unsigned char, TYPEDEF) RTE_HLAF_SignalStatus;
#endif
#ifndef RTE_TYPE_GFAStatus
#define RTE_TYPE_GFAStatus
typedef VAR(RTE_HLAF_SignalStatus, TYPEDEF) GFAStatus;
#endif
#ifndef RTE_TYPE_RTE_HLAF_MatrixGFA_t
#define RTE_TYPE_RTE_HLAF_MatrixGFA_t
typedef struct
{
  VAR(float, TYPEDEF) BndryLeft_Ang;
  VAR(float, TYPEDEF) BndryLeft_Dist;
  VAR(float, TYPEDEF) BndryLeft_Ang_Cam;
  VAR(RTE_HLAF_ObjStatus, TYPEDEF) BndryLeft_Status;
  VAR(unsigned char, TYPEDEF) BndryLeft_ObjId;
  VAR(RTE_HLAF_DistState, TYPEDEF) BndryLeft_DistState;
  VAR(RTE_HLA_DistReliability, TYPEDEF) BndryLeft_DistReliability;
  VAR(float, TYPEDEF) BndryRight_Ang;
  VAR(float, TYPEDEF) BndryRight_Dist;
  VAR(float, TYPEDEF) BndryRight_Ang_Cam;
  VAR(RTE_HLAF_ObjStatus, TYPEDEF) BndryRight_Status;
  VAR(unsigned char, TYPEDEF) BndryRight_ObjId;
  VAR(RTE_HLAF_DistState, TYPEDEF) BndryRight_DistState;
  VAR(RTE_HLA_DistReliability, TYPEDEF) BndryRight_DistReliability;
  VAR(float, TYPEDEF) BndryLower_Ang_Cam;
  VAR(RTE_HLAF_ObjStatus, TYPEDEF) BndryLower_Status;
  VAR(unsigned char, TYPEDEF) BndryLower_ObjId;
  VAR(RTE_HLAF_DistState, TYPEDEF) BndryLower_DistState;
  VAR(RTE_HLA_DistReliability, TYPEDEF) BndryLower_DistReliability;
  VAR(float, TYPEDEF) BndryUpper_Ang_Cam;
  VAR(RTE_HLAF_ObjStatus, TYPEDEF) BndryUpper_Status;
  VAR(unsigned char, TYPEDEF) BndryUpper_ObjId;
  VAR(RTE_HLAF_DistState, TYPEDEF) BndryUpper_DistState;
  VAR(RTE_HLA_DistReliability, TYPEDEF) BndryUpper_DistReliability;
  VAR(float, TYPEDEF) ClosestObj_Dist;
  VAR(float, TYPEDEF) ClosestObj_Ang;
  VAR(RTE_HLAF_ObjStatus, TYPEDEF) ClosestObj_Status;
  VAR(unsigned char, TYPEDEF) ClosestObj_ObjId;
  VAR(RTE_HLAF_DistState, TYPEDEF) ClosestObj_DistState;
  VAR(RTE_HLA_DistReliability, TYPEDEF) ClosestObj_DistReliability;
  VAR(float, TYPEDEF) MinLight_Dist;
  VAR(float, TYPEDEF) MinLight_Ang;
  VAR(RTE_HLAF_ObjStatus, TYPEDEF) MinLight_Status;
  VAR(unsigned char, TYPEDEF) MinLight_ObjId;
  VAR(RTE_HLAF_DistState, TYPEDEF) MinLight_DistState;
  VAR(float, TYPEDEF) ttb18Left;
  VAR(RTE_HLAF_TTBStatus, TYPEDEF) ttb18Left_Status;
  VAR(float, TYPEDEF) ttb18Right;
  VAR(RTE_HLAF_TTBStatus, TYPEDEF) ttb18Right_Status;
  VAR(unsigned char, TYPEDEF) ExistenceProb;
} RTE_HLAF_MatrixGFA_t;
#endif
#ifndef RTE_TYPE_GFA_array_t
#define RTE_TYPE_GFA_array_t
typedef VAR(RTE_HLAF_MatrixGFA_t, TYPEDEF) GFA_array_t[5];
#endif
#ifndef RTE_TYPE_GasPedalPos
#define RTE_TYPE_GasPedalPos
typedef VAR(float, TYPEDEF) GasPedalPos;
#endif
#ifndef RTE_TYPE_Gradient
#define RTE_TYPE_Gradient
typedef VAR(float, TYPEDEF) Gradient;
#endif
#ifndef RTE_TYPE_aTsaRteGwwNvmReservedBytes
#define RTE_TYPE_aTsaRteGwwNvmReservedBytes
typedef VAR(unsigned char, TYPEDEF) aTsaRteGwwNvmReservedBytes[16];
#endif
#ifndef RTE_TYPE_GwwNvmState_t
#define RTE_TYPE_GwwNvmState_t
typedef struct
{
  VAR(aTsaRteGwwNvmReservedBytes, TYPEDEF) gwwReservedBytes;
} GwwNvmState_t;
#endif
#ifndef RTE_TYPE_eEBASignalState_t
#define RTE_TYPE_eEBASignalState_t
typedef VAR(unsigned char, TYPEDEF) eEBASignalState_t;
#endif
#ifndef RTE_TYPE_HEADCustVehOutput_t
#define RTE_TYPE_HEADCustVehOutput_t
typedef struct
{
  VAR(float, TYPEDEF) fX_Dist;
  VAR(float, TYPEDEF) fX_Vrel;
  VAR(float, TYPEDEF) fX_Arel;
  VAR(float, TYPEDEF) fY_Dist;
  VAR(float, TYPEDEF) fY_Vrel;
  VAR(float, TYPEDEF) fY_Arel;
  VAR(ObjNumber_t, TYPEDEF) ObjID;
  VAR(eEBASignalState_t, TYPEDEF) ObjStatus;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
  VAR(float, TYPEDEF) fSteerWheelSpeed;
} HEADCustVehOutput_t;
#endif
#ifndef RTE_TYPE_SCS_AEB_HBA_Resp_t
#define RTE_TYPE_SCS_AEB_HBA_Resp_t
typedef VAR(unsigned char, TYPEDEF) SCS_AEB_HBA_Resp_t;
#endif
#ifndef RTE_TYPE_HEADInputCustom_t
#define RTE_TYPE_HEADInputCustom_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(FCTSubChainQualifier_t, TYPEDEF) eQualifierBrakeChain;
  VAR(FCTSubChainQualifier_t, TYPEDEF) eQualifierWarnChain;
  VAR(FCTSubChainQualifier_t, TYPEDEF) eQualifierPrefill;
  VAR(FCTSubChainQualifier_t, TYPEDEF) eQualifierHBA;
  VAR(float, TYPEDEF) Mcylinder_Pressure;
  VAR(BCM_Status_t, TYPEDEF) eBCM_Status;
  VAR(SCS_AEB_HBA_Resp_t, TYPEDEF) SCS_HBA_resp;
  VAR(SCS_AEB_HBA_Resp_t, TYPEDEF) SCS_AEB_Jerk_resp;
  VAR(SCS_AEB_HBA_Resp_t, TYPEDEF) SCS_AEB_decel_resp;
  VAR(SCS_AEB_HBA_Resp_t, TYPEDEF) SCS_AEB_Prefill_resp;
  VAR(EBA_Active_Condition_Custom_t, TYPEDEF) EBA_Active_Condition_Custom_input;
  VAR(boolean, TYPEDEF) b_Airbag_Deployed_eba;
  VAR(unsigned char, TYPEDEF) reserved1;
} HEADInputCustom_t;
#endif
#ifndef RTE_TYPE_eFunctionSwitch_t
#define RTE_TYPE_eFunctionSwitch_t
typedef VAR(unsigned int, TYPEDEF) eFunctionSwitch_t;
#endif
#ifndef RTE_TYPE_eMainSwitch_t
#define RTE_TYPE_eMainSwitch_t
typedef VAR(unsigned char, TYPEDEF) eMainSwitch_t;
#endif
#ifndef RTE_TYPE_HEADInputGeneric_t
#define RTE_TYPE_HEADInputGeneric_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(eFunctionSwitch_t, TYPEDEF) eFunctionSwitch;
  VAR(eMainSwitch_t, TYPEDEF) eMainSwitch;
  VAR(eDriverSetting_t, TYPEDEF) eDriverSetting;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
} HEADInputGeneric_t;
#endif
#ifndef RTE_TYPE_HEADOutCustEDROutput_t
#define RTE_TYPE_HEADOutCustEDROutput_t
typedef VAR(HEADCustVehOutput_t, TYPEDEF) HEADOutCustEDROutput_t;
#endif
#ifndef RTE_TYPE_eEBARelObjQualifier_t
#define RTE_TYPE_eEBARelObjQualifier_t
typedef VAR(unsigned char, TYPEDEF) eEBARelObjQualifier_t;
#endif
#ifndef RTE_TYPE_HEADOutCustFCTData_t
#define RTE_TYPE_HEADOutCustFCTData_t
typedef struct
{
  VAR(float, TYPEDEF) fVelocityFactor;
  VAR(float, TYPEDEF) fSafeObjDistance;
  VAR(float, TYPEDEF) fObjLifeTimeHiQual;
  VAR(float, TYPEDEF) fObjTTC;
  VAR(float, TYPEDEF) fObjDistX;
  VAR(float, TYPEDEF) fCollisionAvoidAccel;
  VAR(ObjNumber_t, TYPEDEF) iObjRef;
  VAR(eEBARelObjQualifier_t, TYPEDEF) eObjRelQualifier;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
} HEADOutCustFCTData_t;
#endif
#ifndef RTE_TYPE_eFunctionQualifier_t
#define RTE_TYPE_eFunctionQualifier_t
typedef VAR(unsigned int, TYPEDEF) eFunctionQualifier_t;
#endif
#ifndef RTE_TYPE_HEADOutCustFCTQualifier_t
#define RTE_TYPE_HEADOutCustFCTQualifier_t
typedef struct
{
  VAR(eFunctionQualifier_t, TYPEDEF) ePedFunctionQualifier;
  VAR(eFunctionQualifier_t, TYPEDEF) eVehFunctionQualifier;
  VAR(eFunctionQualifier_t, TYPEDEF) eUnclassifiedFunctionQualifier;
  VAR(eFunctionQualifier_t, TYPEDEF) eCyclFunctionQualifier;
} HEADOutCustFCTQualifier_t;
#endif
#ifndef RTE_TYPE_eEBAFctChan_t
#define RTE_TYPE_eEBAFctChan_t
typedef VAR(unsigned char, TYPEDEF) eEBAFctChan_t;
#endif
#ifndef RTE_TYPE_HEADOutCustHBA_t
#define RTE_TYPE_HEADOutCustHBA_t
typedef struct
{
  VAR(float, TYPEDEF) fHBADecel;
  VAR(float, TYPEDEF) uiHBAFactor;
  VAR(unsigned char, TYPEDEF) uiHBALevel;
  VAR(unsigned char, TYPEDEF) uActiveHyp;
  VAR(unsigned char, TYPEDEF) reserved;
  VAR(eEBAFctChan_t, TYPEDEF) eFctChan;
} HEADOutCustHBA_t;
#endif
#ifndef RTE_TYPE_eWarnSens_t
#define RTE_TYPE_eWarnSens_t
typedef VAR(unsigned char, TYPEDEF) eWarnSens_t;
#endif
#ifndef RTE_TYPE_HEADOutCustHaptWaningType_t
#define RTE_TYPE_HEADOutCustHaptWaningType_t
typedef struct
{
  VAR(eEBASignalState_t, TYPEDEF) eSignal;
  VAR(eEBAFctChan_t, TYPEDEF) eFctChan;
  VAR(unsigned char, TYPEDEF) uActiveHyp;
  VAR(eWarnSens_t, TYPEDEF) eWarnSens;
} HEADOutCustHaptWaningType_t;
#endif
#ifndef RTE_TYPE_HEADOutCustHypReactions_t
#define RTE_TYPE_HEADOutCustHypReactions_t
typedef struct
{
  VAR(boolean, TYPEDEF) bEndWarningActive;
  VAR(boolean, TYPEDEF) bLatentPreWarningActive;
  VAR(boolean, TYPEDEF) bLatentAcuteWarningActive;
  VAR(boolean, TYPEDEF) bDynamicPreWarningActive;
  VAR(boolean, TYPEDEF) bDynamicAcuteWarningActive;
  VAR(boolean, TYPEDEF) bHBAActive;
  VAR(boolean, TYPEDEF) bPreFillActive;
  VAR(boolean, TYPEDEF) bPreBrakeActive;
} HEADOutCustHypReactions_t;
#endif
#ifndef RTE_TYPE_HEADOutCustPreCrash_t
#define RTE_TYPE_HEADOutCustPreCrash_t
typedef struct
{
  VAR(float, TYPEDEF) fPreCrashTTC;
  VAR(float, TYPEDEF) fPreCrashCV;
  VAR(boolean, TYPEDEF) bEMAActive;
  VAR(eEBAFctChan_t, TYPEDEF) eEBAFctChan;
  VAR(unsigned char, TYPEDEF) uActiveHyp;
  VAR(unsigned char, TYPEDEF) reserved;
} HEADOutCustPreCrash_t;
#endif
#ifndef RTE_TYPE_HEADOutCustPrebrake_t
#define RTE_TYPE_HEADOutCustPrebrake_t
typedef struct
{
  VAR(float, TYPEDEF) fPreBrakeDecel;
  VAR(boolean, TYPEDEF) bPreBrakeDecelEnabled;
  VAR(boolean, TYPEDEF) bPreBrakeStdstillRequest;
  VAR(boolean, TYPEDEF) bPreBrakeCamConfirmed;
  VAR(unsigned char, TYPEDEF) uPreBrakeLevel;
  VAR(boolean, TYPEDEF) bPreBrakeEmergency;
  VAR(unsigned char, TYPEDEF) uActiveHyp;
  VAR(eEBAFctChan_t, TYPEDEF) eFctChan;
  VAR(unsigned char, TYPEDEF) reserved;
} HEADOutCustPrebrake_t;
#endif
#ifndef RTE_TYPE_eGeneratorControl_t
#define RTE_TYPE_eGeneratorControl_t
typedef VAR(unsigned char, TYPEDEF) eGeneratorControl_t;
#endif
#ifndef RTE_TYPE_HEADOutCustPrefill_t
#define RTE_TYPE_HEADOutCustPrefill_t
typedef struct
{
  VAR(boolean, TYPEDEF) bPrefillActive;
  VAR(boolean, TYPEDEF) bPreRunActive;
  VAR(eGeneratorControl_t, TYPEDEF) eGeneratorControl;
  VAR(unsigned char, TYPEDEF) uActiveHyp;
  VAR(eEBAFctChan_t, TYPEDEF) eFctChan;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
  VAR(unsigned char, TYPEDEF) reserved3;
} HEADOutCustPrefill_t;
#endif
#ifndef RTE_TYPE_eThreatLvl_t
#define RTE_TYPE_eThreatLvl_t
typedef VAR(unsigned char, TYPEDEF) eThreatLvl_t;
#endif
#ifndef RTE_TYPE_HEADOutCustThreatLvl_t
#define RTE_TYPE_HEADOutCustThreatLvl_t
typedef struct
{
  VAR(eThreatLvl_t, TYPEDEF) threatLvl;
} HEADOutCustThreatLvl_t;
#endif
#ifndef RTE_TYPE_HEADOutCustWarningType_t
#define RTE_TYPE_HEADOutCustWarningType_t
typedef struct
{
  VAR(eEBASignalState_t, TYPEDEF) eSignal;
  VAR(eEBAFctChan_t, TYPEDEF) eFctChan;
  VAR(unsigned char, TYPEDEF) uActiveHyp;
  VAR(unsigned char, TYPEDEF) reserved;
} HEADOutCustWarningType_t;
#endif
#ifndef RTE_TYPE_HEADOutCustWarnings_t
#define RTE_TYPE_HEADOutCustWarnings_t
typedef struct
{
  VAR(HEADOutCustWarningType_t, TYPEDEF) sPreStaticWarning;
  VAR(HEADOutCustWarningType_t, TYPEDEF) sAcuteStaticWarning;
  VAR(HEADOutCustWarningType_t, TYPEDEF) sPreDynamicWarning;
  VAR(HEADOutCustWarningType_t, TYPEDEF) sAcuteDynamicWarning;
  VAR(HEADOutCustHaptWaningType_t, TYPEDEF) sAcuteDynamicHaptWarning;
} HEADOutCustWarnings_t;
#endif
#ifndef RTE_TYPE_rgHypReactions_array_t
#define RTE_TYPE_rgHypReactions_array_t
typedef VAR(HEADOutCustHypReactions_t, TYPEDEF) rgHypReactions_array_t[12];
#endif
#ifndef RTE_TYPE_HEADOutputCustom_t
#define RTE_TYPE_HEADOutputCustom_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(HEADOutCustHBA_t, TYPEDEF) sHBA;
  VAR(HEADOutCustPrefill_t, TYPEDEF) sPrefill;
  VAR(HEADOutCustPrebrake_t, TYPEDEF) sPreBrake;
  VAR(HEADOutCustWarnings_t, TYPEDEF) sWarnings;
  VAR(HEADOutCustPreCrash_t, TYPEDEF) sPreCrash;
  VAR(rgHypReactions_array_t, TYPEDEF) rgHypReactions;
  VAR(HEADOutCustFCTData_t, TYPEDEF) sFCTData;
  VAR(HEADOutCustFCTQualifier_t, TYPEDEF) sFCTQualifiers;
  VAR(HEADOutCustThreatLvl_t, TYPEDEF) sThreatlvl;
  VAR(boolean, TYPEDEF) bEndWarning;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
  VAR(HEADOutCustEDROutput_t, TYPEDEF) EDROutput;
} HEADOutputCustom_t;
#endif
#ifndef RTE_TYPE_HEADOutputGeneric_t
#define RTE_TYPE_HEADOutputGeneric_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
} HEADOutputGeneric_t;
#endif
#ifndef RTE_TYPE_a_HIL_time_array_t
#define RTE_TYPE_a_HIL_time_array_t
typedef VAR(unsigned char, TYPEDEF) a_HIL_time_array_t[8];
#endif
#ifndef RTE_TYPE_HIL_timesync_t
#define RTE_TYPE_HIL_timesync_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_EmbeddedTimestampL;
  VAR(unsigned int, TYPEDEF) u_EmbeddedTimestampH;
  VAR(unsigned int, TYPEDEF) u_SOCTimestampL;
  VAR(unsigned int, TYPEDEF) u_SOCTimestampH;
  VAR(unsigned int, TYPEDEF) u_FrameCounter;
  VAR(a_HIL_time_array_t, TYPEDEF) a_HIL_time;
} HIL_timesync_t;
#endif
#ifndef RTE_TYPE_HLA_BusInputSignals_GlareFreeArea_t
#define RTE_TYPE_HLA_BusInputSignals_GlareFreeArea_t
typedef struct
{
  VAR(float, TYPEDEF) cutOffAngleLeft;
  VAR(float, TYPEDEF) cutOffAngleRight;
  VAR(float, TYPEDEF) cutOffAngleUpper;
  VAR(float, TYPEDEF) cutOffAngleLower;
} HLA_BusInputSignals_GlareFreeArea_t;
#endif
#ifndef RTE_TYPE_HLA_BusInputSignals_HBIndicatorLamp
#define RTE_TYPE_HLA_BusInputSignals_HBIndicatorLamp
typedef VAR(unsigned char, TYPEDEF) HLA_BusInputSignals_HBIndicatorLamp;
#endif
#ifndef RTE_TYPE_HLA_BusInputSignals_HlaRequest
#define RTE_TYPE_HLA_BusInputSignals_HlaRequest
typedef VAR(unsigned char, TYPEDEF) HLA_BusInputSignals_HlaRequest;
#endif
#ifndef RTE_TYPE_RTE_HLA_SensMode
#define RTE_TYPE_RTE_HLA_SensMode
typedef VAR(unsigned char, TYPEDEF) RTE_HLA_SensMode;
#endif
#ifndef RTE_TYPE_RTE_HLAF_HighBeamState
#define RTE_TYPE_RTE_HLAF_HighBeamState
typedef VAR(unsigned char, TYPEDEF) RTE_HLAF_HighBeamState;
#endif
#ifndef RTE_TYPE_glareFreeAreas
#define RTE_TYPE_glareFreeAreas
typedef struct
{
  VAR(float, TYPEDEF) cutOffAngleLeft;
  VAR(float, TYPEDEF) cutOffAngleRight;
  VAR(float, TYPEDEF) cutOffAngleUpper;
  VAR(float, TYPEDEF) cutOffAngleLower;
} glareFreeAreas;
#endif
#ifndef RTE_TYPE_HLA_BusInputSignals_t
#define RTE_TYPE_HLA_BusInputSignals_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(HLA_BusInputSignals_HlaRequest, TYPEDEF) hlaRequest;
  VAR(HLA_BusInputSignals_HBIndicatorLamp, TYPEDEF) highBeamIndicatorLamp;
  VAR(RTE_HLA_SensMode, TYPEDEF) sensitivityModeSignal;
  VAR(RTE_HLAF_HighBeamState, TYPEDEF) headLightState;
  VAR(float, TYPEDEF) lightDistance;
  VAR(glareFreeAreas, TYPEDEF) glareFreeAreas[5];
  VAR(unsigned int, TYPEDEF) numGlareFreeAreas;
} HLA_BusInputSignals_t;
#endif
#ifndef RTE_TYPE_HLA_RadarObjClassification
#define RTE_TYPE_HLA_RadarObjClassification
typedef VAR(unsigned char, TYPEDEF) HLA_RadarObjClassification;
#endif
#ifndef RTE_TYPE_HLA_RadarObjAttributes_t
#define RTE_TYPE_HLA_RadarObjAttributes_t
typedef struct
{
  VAR(HLA_RadarObjDynamicProperty, TYPEDEF) DynamicProperty;
  VAR(unsigned char, TYPEDEF) DynConfidence;
  VAR(HLA_RadarObjClassification, TYPEDEF) Classification;
  VAR(unsigned char, TYPEDEF) ClassConfidence;
  VAR(unsigned char, TYPEDEF) ProbabilityOfExistence;
} HLA_RadarObjAttributes_t;
#endif
#ifndef RTE_TYPE_HLA_RadarObjGenerals_t
#define RTE_TYPE_HLA_RadarObjGenerals_t
typedef struct
{
  VAR(AlgoCycleCounter_t, TYPEDEF) LifeCycles;
  VAR(unsigned char, TYPEDEF) ID;
} HLA_RadarObjGenerals_t;
#endif
#ifndef RTE_TYPE_HLA_RadarObjKinematics_t
#define RTE_TYPE_HLA_RadarObjKinematics_t
typedef struct
{
  VAR(float, TYPEDEF) DistX;
  VAR(float, TYPEDEF) DistY;
  VAR(float, TYPEDEF) Width;
  VAR(float, TYPEDEF) Length;
} HLA_RadarObjKinematics_t;
#endif
#ifndef RTE_TYPE_Object
#define RTE_TYPE_Object
typedef struct
{
  VAR(HLA_RadarObjKinematics_t, TYPEDEF) HLA_RadarObjKinematics;
  VAR(HLA_RadarObjAttributes_t, TYPEDEF) HLA_RadarObjAttributes;
  VAR(HLA_RadarObjGenerals_t, TYPEDEF) HLA_RadarObjGenerals;
} Object;
#endif
#ifndef RTE_TYPE_HLA_RadarObjectList_t
#define RTE_TYPE_HLA_RadarObjectList_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(Object, TYPEDEF) Object[2];
  VAR(unsigned char, TYPEDEF) NumOfUsedObjects;
} HLA_RadarObjectList_t;
#endif
#ifndef RTE_TYPE_HLA_RadarObject_t
#define RTE_TYPE_HLA_RadarObject_t
typedef struct
{
  VAR(HLA_RadarObjKinematics_t, TYPEDEF) HLA_RadarObjKinematics;
  VAR(HLA_RadarObjAttributes_t, TYPEDEF) HLA_RadarObjAttributes;
  VAR(HLA_RadarObjGenerals_t, TYPEDEF) HLA_RadarObjGenerals;
} HLA_RadarObject_t;
#endif
#ifndef RTE_TYPE_LCF_e_DispLaneDetected_t
#define RTE_TYPE_LCF_e_DispLaneDetected_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_DispLaneDetected_t;
#endif
#ifndef RTE_TYPE_HMI_Out_t
#define RTE_TYPE_HMI_Out_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) DFFunctActiveState_btf;
  VAR(unsigned char, TYPEDEF) LnBndLeValid4Fct_btf;
  VAR(unsigned char, TYPEDEF) LnBndRiValid4Fct_btf;
  VAR(LCF_e_DispLaneDetected_t, TYPEDEF) DispLaneLeftDetected_nu;
  VAR(LCF_e_DispLaneDetected_t, TYPEDEF) DispLaneRightDetected_nu;
  VAR(unsigned char, TYPEDEF) SteeringWheelVibrationReq_nu;
  VAR(DrvAttWarnQualifier_nu_t, TYPEDEF) DrvAttWarnQualifier_nu;
} HMI_Out_t;
#endif
#ifndef RTE_TYPE_HMOSGW_TJALatCntlMdSW_nu_t
#define RTE_TYPE_HMOSGW_TJALatCntlMdSW_nu_t
typedef VAR(unsigned char, TYPEDEF) HMOSGW_TJALatCntlMdSW_nu_t;
#endif
#ifndef RTE_TYPE_HighBeamState
#define RTE_TYPE_HighBeamState
typedef VAR(RTE_HLAF_HighBeamState, TYPEDEF) HighBeamState;
#endif
#ifndef RTE_TYPE_HilNbrOfObjects_t
#define RTE_TYPE_HilNbrOfObjects_t
typedef VAR(unsigned char, TYPEDEF) HilNbrOfObjects_t;
#endif
#ifndef RTE_TYPE_HilTimestamp_t
#define RTE_TYPE_HilTimestamp_t
typedef VAR(unsigned int, TYPEDEF) HilTimestamp_t;
#endif
#ifndef RTE_TYPE_Hla_InputSignals_t
#define RTE_TYPE_Hla_InputSignals_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) u8_WeatherCondition;
  VAR(unsigned char, TYPEDEF) u8_headLightState;
  VAR(unsigned char, TYPEDEF) u8_hlaRequest;
  VAR(unsigned char, TYPEDEF) u8_Reserved_1;
} Hla_InputSignals_t;
#endif
#ifndef RTE_TYPE_Hla_OutputSignals_t
#define RTE_TYPE_Hla_OutputSignals_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) u16_TurnOffReason;
  VAR(unsigned short, TYPEDEF) u16_HighBeamState;
  VAR(unsigned char, TYPEDEF) u8_hlaFunctionStatus;
  VAR(unsigned char, TYPEDEF) u8_Reserved[3];
} Hla_OutputSignals_t;
#endif
#ifndef RTE_TYPE_HypoIntfCustom_t
#define RTE_TYPE_HypoIntfCustom_t
typedef struct
{
  VAR(float, TYPEDEF) fObjLifeTimeHiQual;
  VAR(float, TYPEDEF) fLongNecAccelCustom;
} HypoIntfCustom_t;
#endif
#ifndef RTE_TYPE_HypoIntfDegrPerf_t
#define RTE_TYPE_HypoIntfDegrPerf_t
typedef struct
{
  VAR(float, TYPEDEF) fMaxDistALN;
  VAR(float, TYPEDEF) fMaxDistHRZ;
  VAR(float, TYPEDEF) fMaxDistVIS;
  VAR(float, TYPEDEF) fMaxDist;
} HypoIntfDegrPerf_t;
#endif
#ifndef RTE_TYPE_HypoIntfDegrSfty_t
#define RTE_TYPE_HypoIntfDegrSfty_t
typedef struct
{
  VAR(float, TYPEDEF) fMaxDistALN;
  VAR(float, TYPEDEF) fMaxDistHRZ;
  VAR(float, TYPEDEF) fMaxDistVIS;
  VAR(float, TYPEDEF) fMaxDist;
} HypoIntfDegrSfty_t;
#endif
#ifndef RTE_TYPE_HypoIntfDegr_t
#define RTE_TYPE_HypoIntfDegr_t
typedef struct
{
  VAR(HypoIntfDegrSfty_t, TYPEDEF) Safety;
  VAR(HypoIntfDegrPerf_t, TYPEDEF) Performance;
} HypoIntfDegr_t;
#endif
#ifndef RTE_TYPE_HypoIntfHeader_t
#define RTE_TYPE_HypoIntfHeader_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) uiNumOfHypotheses;
  VAR(EM_t_GenObjSensorSource, TYPEDEF) eObjListSource;
  VAR(EM_t_GenObjSensorSource, TYPEDEF) eObjListDegraded;
  VAR(unsigned char, TYPEDEF) reserved1;
} HypoIntfHeader_t;
#endif
#ifndef RTE_TYPE_eCDHypothesisType_t
#define RTE_TYPE_eCDHypothesisType_t
typedef VAR(unsigned char, TYPEDEF) eCDHypothesisType_t;
#endif
#ifndef RTE_TYPE_eEBAObjectClass_t
#define RTE_TYPE_eEBAObjectClass_t
typedef VAR(unsigned char, TYPEDEF) eEBAObjectClass_t;
#endif
#ifndef RTE_TYPE_eEBADynProp_t
#define RTE_TYPE_eEBADynProp_t
typedef VAR(unsigned char, TYPEDEF) eEBADynProp_t;
#endif
#ifndef RTE_TYPE_eEBAObjMovDir_t
#define RTE_TYPE_eEBAObjMovDir_t
typedef VAR(unsigned char, TYPEDEF) eEBAObjMovDir_t;
#endif
#ifndef RTE_TYPE_Hypothesis_t
#define RTE_TYPE_Hypothesis_t
typedef struct
{
  VAR(ObjNumber_t, TYPEDEF) uiObjectRef;
  VAR(eCDHypothesisType_t, TYPEDEF) eType;
  VAR(unsigned char, TYPEDEF) uiObjectProbability;
  VAR(eEBAObjectClass_t, TYPEDEF) eEBAObjectClass;
  VAR(eEBADynProp_t, TYPEDEF) eEBADynProp;
  VAR(eEBAObjMovDir_t, TYPEDEF) eEBAObjMovDir;
  VAR(EM_t_GenEbaInhibit, TYPEDEF) eEBAInhibitionMask;
  VAR(unsigned char, TYPEDEF) uiHypothesisProbability;
  VAR(EM_t_GenObjSensorSource, TYPEDEF) eSensorSource;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
  VAR(float, TYPEDEF) fHypothesisLifetime;
  VAR(float, TYPEDEF) fTTC;
  VAR(float, TYPEDEF) fTTC2;
  VAR(float, TYPEDEF) fTTC3;
  VAR(float, TYPEDEF) fTTC4;
  VAR(float, TYPEDEF) fTTBPre;
  VAR(float, TYPEDEF) fTTBAcute;
  VAR(float, TYPEDEF) fTTSPre;
  VAR(float, TYPEDEF) fTTSAcute;
  VAR(float, TYPEDEF) fLongNecAccel;
  VAR(float, TYPEDEF) fLatNecAccel;
  VAR(float, TYPEDEF) fDistX;
  VAR(float, TYPEDEF) fVrelX;
  VAR(float, TYPEDEF) fArelX;
  VAR(float, TYPEDEF) fDistY;
  VAR(float, TYPEDEF) fVrelY;
  VAR(float, TYPEDEF) fArelY;
  VAR(float, TYPEDEF) fClosingVelocity;
  VAR(float, TYPEDEF) fTTMLongPre;
  VAR(float, TYPEDEF) fTTMLongAcute;
  VAR(float, TYPEDEF) fCorridorStopDistance;
  VAR(float, TYPEDEF) fCorridorOccupancy;
  VAR(HypoIntfCustom_t, TYPEDEF) Custom;
} Hypothesis_t;
#endif
#ifndef RTE_TYPE_Hypothesis_array_t
#define RTE_TYPE_Hypothesis_array_t
typedef VAR(Hypothesis_t, TYPEDEF) Hypothesis_array_t[12];
#endif
#ifndef RTE_TYPE_HypothesisIntf_t
#define RTE_TYPE_HypothesisIntf_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(HypoIntfHeader_t, TYPEDEF) Header;
  VAR(HypoIntfDegr_t, TYPEDEF) Degradation;
  VAR(Hypothesis_array_t, TYPEDEF) Hypothesis;
} HypothesisIntf_t;
#endif
#ifndef RTE_TYPE_ID
#define RTE_TYPE_ID
typedef VAR(unsigned char, TYPEDEF) ID;
#endif
#ifndef RTE_TYPE_INHIBITION_REASON_t
#define RTE_TYPE_INHIBITION_REASON_t
typedef VAR(unsigned char, TYPEDEF) INHIBITION_REASON_t;
#endif
#ifndef RTE_TYPE_ROI_t_Shrp_Outdata_t
#define RTE_TYPE_ROI_t_Shrp_Outdata_t
typedef struct
{
  VAR(float, TYPEDEF) f32_MaxPixMean;
  VAR(float, TYPEDEF) f32_MinPixMean;
  VAR(float, TYPEDEF) f32_CrossCenterX;
  VAR(float, TYPEDEF) f32_CrossCenterY;
  VAR(float, TYPEDEF) f32_CrossAngleR;
} ROI_t_Shrp_Outdata_t;
#endif
#ifndef RTE_TYPE_af32_MTFContiAOIsHor_array_t
#define RTE_TYPE_af32_MTFContiAOIsHor_array_t
typedef VAR(float, TYPEDEF) af32_MTFContiAOIsHor_array_t[10];
#endif
#ifndef RTE_TYPE_af32_MTFContiAOIsVer_array_t
#define RTE_TYPE_af32_MTFContiAOIsVer_array_t
typedef VAR(float, TYPEDEF) af32_MTFContiAOIsVer_array_t[10];
#endif
#ifndef RTE_TYPE_aui8_SWversion_array_t
#define RTE_TYPE_aui8_SWversion_array_t
typedef VAR(unsigned char, TYPEDEF) aui8_SWversion_array_t[12];
#endif
#ifndef RTE_TYPE_ROI_t_Shrp_Result_t
#define RTE_TYPE_ROI_t_Shrp_Result_t
typedef struct
{
  VAR(ROI_t_Shrp_Outdata_t, TYPEDEF) s_Outdata;
  VAR(af32_MTFContiAOIsHor_array_t, TYPEDEF) af32_MTFContiAOIsHor;
  VAR(af32_MTFContiAOIsVer_array_t, TYPEDEF) af32_MTFContiAOIsVer;
  VAR(float, TYPEDEF) f32_ImagerTempRight;
  VAR(float, TYPEDEF) f32_ImagerTempLeft;
  VAR(aui8_SWversion_array_t, TYPEDEF) aui8_SWversion;
  VAR(unsigned char, TYPEDEF) e_Status;
  VAR(unsigned char, TYPEDEF) e_Error;
  VAR(unsigned char, TYPEDEF) u_ReservedAlignmentByte1;
  VAR(unsigned char, TYPEDEF) u_ReservedAlignmentByte2;
} ROI_t_Shrp_Result_t;
#endif
#ifndef RTE_TYPE_ROI_t_LFT_Result_t
#define RTE_TYPE_ROI_t_LFT_Result_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) ui16_EdgesH_min;
  VAR(unsigned short, TYPEDEF) ui16_EdgesH_max;
  VAR(unsigned short, TYPEDEF) ui16_EdgesV_min;
  VAR(unsigned short, TYPEDEF) ui16_EdgesV_max;
  VAR(unsigned short, TYPEDEF) ui16_CenterApprox_x;
  VAR(unsigned short, TYPEDEF) ui16_CenterApprox_y;
  VAR(unsigned short, TYPEDEF) s_Center_x;
  VAR(unsigned short, TYPEDEF) s_Center_y;
  VAR(unsigned char, TYPEDEF) ui8_Radius;
  VAR(unsigned char, TYPEDEF) ui8_BrightnessRatio;
  VAR(unsigned short, TYPEDEF) ui16_BrightnessRing;
  VAR(unsigned short, TYPEDEF) ui16_BrightnessCircle;
  VAR(unsigned short, TYPEDEF) ui16_CalculatedPixelRing;
  VAR(unsigned short, TYPEDEF) ui16_IgnoredPixelRing;
  VAR(unsigned short, TYPEDEF) ui16_CalculatedPixelCircle;
  VAR(unsigned short, TYPEDEF) ui16_IgnoredPixelCircle;
  VAR(unsigned short, TYPEDEF) ui16_ImageStart_x;
  VAR(unsigned short, TYPEDEF) ui16_ImageStart_y;
  VAR(unsigned char, TYPEDEF) ui8_ImageWidth;
  VAR(unsigned char, TYPEDEF) ui8_ImageHeight;
  VAR(unsigned char, TYPEDEF) e_Status;
  VAR(unsigned char, TYPEDEF) e_Error;
  VAR(unsigned char, TYPEDEF) u_ReservedAlignmentByte1;
  VAR(unsigned char, TYPEDEF) u_ReservedAlignmentByte2;
} ROI_t_LFT_Result_t;
#endif
#ifndef RTE_TYPE_ROI_t_ATestResults_t
#define RTE_TYPE_ROI_t_ATestResults_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) ui32_ImagerFuseId_L;
  VAR(unsigned int, TYPEDEF) ui32_ImagerFuseId_H;
  VAR(Atv3_1xGain_DeviationValues_array_t, TYPEDEF) Atv3_1xGain_DeviationValues;
  VAR(Atv3_1xGain_ColumnPositions_array_t, TYPEDEF) Atv3_1xGain_ColumnPositions;
  VAR(Atv1_1xGain_DeviationValues_array_t, TYPEDEF) Atv1_1xGain_DeviationValues;
  VAR(Atv1_1xGain_ColumnPositions_array_t, TYPEDEF) Atv1_1xGain_ColumnPositions;
  VAR(Atv1_2xGain_DeviationValues_array_t, TYPEDEF) Atv1_2xGain_DeviationValues;
  VAR(Atv1_2xGain_ColumnPositions_array_t, TYPEDEF) Atv1_2xGain_ColumnPositions;
  VAR(unsigned short, TYPEDEF) RoiStartX;
  VAR(unsigned short, TYPEDEF) RoiStartY;
  VAR(unsigned short, TYPEDEF) RoiWidth;
  VAR(unsigned short, TYPEDEF) RoiHeight;
  VAR(unsigned short, TYPEDEF) ATV1_mV;
  VAR(unsigned short, TYPEDEF) ATV3_mV;
  VAR(unsigned short, TYPEDEF) MeanATV1_1xGain;
  VAR(unsigned short, TYPEDEF) MeanATV1_2xGain;
  VAR(unsigned short, TYPEDEF) MeanATV3_1xGain;
  VAR(unsigned char, TYPEDEF) e_Status;
  VAR(boolean, TYPEDEF) b_ColumnCheckPassed;
} ROI_t_ATestResults_t;
#endif
#ifndef RTE_TYPE_IOB_t_prodTestResults_t
#define RTE_TYPE_IOB_t_prodTestResults_t
typedef struct
{
  VAR(ROI_t_Shrp_Result_t, TYPEDEF) SharpnessTestResult;
  VAR(ROI_t_LFT_Result_t, TYPEDEF) lensFlareTestResult;
  VAR(ROI_t_ATestResults_t, TYPEDEF) aTestResults;
  VAR(unsigned char, TYPEDEF) u_UploadCommand;
  VAR(unsigned char, TYPEDEF) u_ReservedAlignmentByte1;
  VAR(unsigned char, TYPEDEF) u_ReservedAlignmentByte2;
  VAR(unsigned char, TYPEDEF) u_ReservedAlignmentByte3;
} IOB_t_prodTestResults_t;
#endif
#ifndef RTE_TYPE_IPGObjHilHead_DataType
#define RTE_TYPE_IPGObjHilHead_DataType
typedef struct
{
  VAR(HilTimestamp_t, TYPEDEF) HilTimestamp_DataTypeElement;
  VAR(HilNbrOfObjects_t, TYPEDEF) HilNbrOfObjects_DataTypeElement;
} IPGObjHilHead_DataType;
#endif
#ifndef RTE_TYPE_IPGObjHil_00_DataType
#define RTE_TYPE_IPGObjHil_00_DataType
typedef struct
{
  VAR(uint16_t, TYPEDEF) X_Distance_00_DataTypeElement;
  VAR(uint16_t, TYPEDEF) X_Velocity_00_DataTypeElement;
  VAR(uint8_t, TYPEDEF) Class_00_DataTypeElement;
  VAR(uint16_t, TYPEDEF) Y_Distance_00_DataTypeElement;
  VAR(uint16_t, TYPEDEF) Y_Velocity_00_DataTypeElement;
} IPGObjHil_00_DataType;
#endif
#ifndef RTE_TYPE_IPGObjHil_01_DataType
#define RTE_TYPE_IPGObjHil_01_DataType
typedef struct
{
  VAR(uint16_t, TYPEDEF) X_Distance_01_DataTypeElement;
  VAR(uint16_t, TYPEDEF) X_Velocity_01_DataTypeElement;
  VAR(uint8_t, TYPEDEF) Class_01_DataTypeElement;
  VAR(uint16_t, TYPEDEF) Y_Distance_01_DataTypeElement;
  VAR(uint16_t, TYPEDEF) Y_Velocity_01_DataTypeElement;
} IPGObjHil_01_DataType;
#endif
#ifndef RTE_TYPE_IPGObjHil_02_DataType
#define RTE_TYPE_IPGObjHil_02_DataType
typedef struct
{
  VAR(uint16_t, TYPEDEF) X_Distance_02_DataTypeElement;
  VAR(uint16_t, TYPEDEF) X_Velocity_02_DataTypeElement;
  VAR(uint8_t, TYPEDEF) Class_02_DataTypeElement;
  VAR(uint16_t, TYPEDEF) Y_Distance_02_DataTypeElement;
  VAR(uint16_t, TYPEDEF) Y_Velocity_02_DataTypeElement;
} IPGObjHil_02_DataType;
#endif
#ifndef RTE_TYPE_IgnitionSwitch_t
#define RTE_TYPE_IgnitionSwitch_t
typedef VAR(unsigned char, TYPEDEF) IgnitionSwitch_t;
#endif
#ifndef RTE_TYPE_ImagerCFA_t
#define RTE_TYPE_ImagerCFA_t
typedef VAR(unsigned char, TYPEDEF) ImagerCFA_t;
#endif
#ifndef RTE_TYPE_ImagerRespCurvePt_t
#define RTE_TYPE_ImagerRespCurvePt_t
typedef struct
{
  VAR(float, TYPEDEF) f32_BrightnessR;
  VAR(float, TYPEDEF) f32_BrightnessG;
  VAR(float, TYPEDEF) f32_BrightnessB;
  VAR(unsigned short, TYPEDEF) ui16_GrayValue;
} ImagerRespCurvePt_t;
#endif
#ifndef RTE_TYPE_ImobBrkNrSerl
#define RTE_TYPE_ImobBrkNrSerl
typedef struct
{
  VAR(uint8_t, TYPEDEF) ImobBrkNrSerl0;
  VAR(uint8_t, TYPEDEF) ImobBrkNrSerl1;
  VAR(uint8_t, TYPEDEF) ImobBrkNrSerl2;
  VAR(uint8_t, TYPEDEF) ImobBrkNrSerl3;
  VAR(uint8_t, TYPEDEF) ImobBrkNrSerl4;
  VAR(uint8_t, TYPEDEF) ImobBrkNrSerl5;
} ImobBrkNrSerl;
#endif
#ifndef RTE_TYPE_IndcnToDrvrPostImpctCtrl_t
#define RTE_TYPE_IndcnToDrvrPostImpctCtrl_t
typedef VAR(boolean, TYPEDEF) IndcnToDrvrPostImpctCtrl_t;
#endif
#ifndef RTE_TYPE_Inhb_t
#define RTE_TYPE_Inhb_t
typedef VAR(boolean, TYPEDEF) Inhb_t;
#endif
#ifndef RTE_TYPE_InterfaceVersion
#define RTE_TYPE_InterfaceVersion
typedef VAR(unsigned int, TYPEDEF) InterfaceVersion;
#endif
#ifndef RTE_TYPE_InvldVld_t
#define RTE_TYPE_InvldVld_t
typedef VAR(boolean, TYPEDEF) InvldVld_t;
#endif
#ifndef RTE_TYPE_KeepOff_AccTime
#define RTE_TYPE_KeepOff_AccTime
typedef VAR(float, TYPEDEF) KeepOff_AccTime;
#endif
#ifndef RTE_TYPE_KeepOff_Delay
#define RTE_TYPE_KeepOff_Delay
typedef VAR(float, TYPEDEF) KeepOff_Delay;
#endif
#ifndef RTE_TYPE_KeepOff_HighAcceleration
#define RTE_TYPE_KeepOff_HighAcceleration
typedef VAR(float, TYPEDEF) KeepOff_HighAcceleration;
#endif
#ifndef RTE_TYPE_KeepOff_LowRadius
#define RTE_TYPE_KeepOff_LowRadius
typedef VAR(float, TYPEDEF) KeepOff_LowRadius;
#endif
#ifndef RTE_TYPE_KeepOff_VeryLowSpeed
#define RTE_TYPE_KeepOff_VeryLowSpeed
typedef VAR(float, TYPEDEF) KeepOff_VeryLowSpeed;
#endif
#ifndef RTE_TYPE_KickDown
#define RTE_TYPE_KickDown
typedef VAR(bool8, TYPEDEF) KickDown;
#endif
#ifndef RTE_TYPE_ldm_ctrl_state_t
#define RTE_TYPE_ldm_ctrl_state_t
typedef VAR(unsigned char, TYPEDEF) ldm_ctrl_state_t;
#endif
#ifndef RTE_TYPE_door_state_t
#define RTE_TYPE_door_state_t
typedef VAR(unsigned char, TYPEDEF) door_state_t;
#endif
#ifndef RTE_TYPE_seatbelt_state_t
#define RTE_TYPE_seatbelt_state_t
typedef VAR(unsigned char, TYPEDEF) seatbelt_state_t;
#endif
#ifndef RTE_TYPE_country_code_t
#define RTE_TYPE_country_code_t
typedef VAR(unsigned char, TYPEDEF) country_code_t;
#endif
#ifndef RTE_TYPE_KinCtrlSignalState_t
#define RTE_TYPE_KinCtrlSignalState_t
typedef VAR(unsigned short, TYPEDEF) KinCtrlSignalState_t;
#endif
#ifndef RTE_TYPE_KinCtrlDynInput_t
#define RTE_TYPE_KinCtrlDynInput_t
typedef struct
{
  VAR(short, TYPEDEF) longi_initialization_accel;
  VAR(unsigned char, TYPEDEF) perm_lim_setspeed;
  VAR(boolean, TYPEDEF) var_lim_eng;
  VAR(boolean, TYPEDEF) stand_still_detected;
  VAR(DC_status_information_t, TYPEDEF) DC_status_information;
  VAR(boolean, TYPEDEF) driver_override_accel_pedal;
  VAR(boolean, TYPEDEF) driver_override_decel_pedal;
  VAR(boolean, TYPEDEF) driver_accel;
  VAR(boolean, TYPEDEF) driver_braking;
  VAR(boolean, TYPEDEF) DAS_accel_request_limited;
  VAR(boolean, TYPEDEF) DAS_decel_request_limited;
  VAR(boolean, TYPEDEF) longi_shutoff_acknowledged;
  VAR(ldm_ctrl_state_t, TYPEDEF) ldm_ctrl_state;
  VAR(boolean, TYPEDEF) acc_enable;
  VAR(boolean, TYPEDEF) park_brk_eng;
  VAR(boolean, TYPEDEF) brk_sw;
  VAR(door_state_t, TYPEDEF) door_state;
  VAR(seatbelt_state_t, TYPEDEF) seatbelt_state;
  VAR(boolean, TYPEDEF) b_airbag_deploy;
  VAR(country_code_t, TYPEDEF) country_code;
  VAR(DriveMode_t_e, TYPEDEF) eDriveMode;
  VAR(KinCtrlSignalState_t, TYPEDEF) KinCtrlSignalState;
  VAR(boolean, TYPEDEF) brake_overheated;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
  VAR(unsigned char, TYPEDEF) reserved3;
  VAR(float32_t, TYPEDEF) ACC_Esp_Ax;
} KinCtrlDynInput_t;
#endif
#ifndef RTE_TYPE_KinDisplayInput_t
#define RTE_TYPE_KinDisplayInput_t
typedef struct
{
  VAR(SpeedUnitEnum_t, TYPEDEF) speed_unit;
  VAR(unsigned short, TYPEDEF) speedometer_speed;
  VAR(DisplayOutputSignalState_t, TYPEDEF) DisplayOutputSignalState;
} KinDisplayInput_t;
#endif
#ifndef RTE_TYPE_cc_reported_error_t
#define RTE_TYPE_cc_reported_error_t
typedef VAR(unsigned char, TYPEDEF) cc_reported_error_t;
#endif
#ifndef RTE_TYPE_display_op_status_t
#define RTE_TYPE_display_op_status_t
typedef VAR(unsigned char, TYPEDEF) display_op_status_t;
#endif
#ifndef RTE_TYPE_ldm_drive_mode_t
#define RTE_TYPE_ldm_drive_mode_t
typedef VAR(unsigned char, TYPEDEF) ldm_drive_mode_t;
#endif
#ifndef RTE_TYPE_KinDriverOutput_t
#define RTE_TYPE_KinDriverOutput_t
typedef struct
{
  VAR(boolean, TYPEDEF) drive_off_request;
  VAR(boolean, TYPEDEF) drive_off_possible;
  VAR(cc_reported_error_t, TYPEDEF) failure_state;
  VAR(display_op_status_t, TYPEDEF) operational_mode;
  VAR(ldm_drive_mode_t, TYPEDEF) ldm_drive_mode;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
} KinDriverOutput_t;
#endif
#ifndef RTE_TYPE_KinFctInfo_t
#define RTE_TYPE_KinFctInfo_t
typedef struct
{
  VAR(boolean, TYPEDEF) object_detected;
  VAR(boolean, TYPEDEF) FCA_alert;
  VAR(FCA_status_t, TYPEDEF) FCA_status;
  VAR(DM_alert_level_t, TYPEDEF) DM_alert_level;
  VAR(DM_status_t, TYPEDEF) DM_status;
  VAR(boolean, TYPEDEF) headway_control_alert;
  VAR(unsigned char, TYPEDEF) requested_distance;
  VAR(unsigned char, TYPEDEF) obj_interest_distance;
  VAR(unsigned char, TYPEDEF) headway_setting;
  VAR(unsigned char, TYPEDEF) desired_speed;
  VAR(unsigned char, TYPEDEF) recommended_speed;
  VAR(unsigned char, TYPEDEF) speed_target;
} KinFctInfo_t;
#endif
#ifndef RTE_TYPE_KinOutput_t
#define RTE_TYPE_KinOutput_t
typedef struct
{
  VAR(short, TYPEDEF) MinRequestedLongAcceleration;
  VAR(short, TYPEDEF) MaxRequestedLongAcceleration;
  VAR(DAS_status_t, TYPEDEF) DAS_status;
  VAR(boolean, TYPEDEF) DAS_accel_limitation_active;
  VAR(DAS_failure_information_t, TYPEDEF) DAS_failure_information;
  VAR(boolean, TYPEDEF) brake_pre_fill;
  VAR(short, TYPEDEF) UpperAccelerationValue;
  VAR(short, TYPEDEF) LowerAccelerationValue;
  VAR(unsigned short, TYPEDEF) UpperAccelerationRateValue;
  VAR(short, TYPEDEF) LowerAccelerationRateValue;
  VAR(boolean, TYPEDEF) stand_still_request;
  VAR(boolean, TYPEDEF) Decel_LiM_Override_Active;
  VAR(boolean, TYPEDEF) Brake_preferred;
  VAR(unsigned char, TYPEDEF) reserved1;
} KinOutput_t;
#endif
#ifndef RTE_TYPE_TrajServiceQualifier_nu_t
#define RTE_TYPE_TrajServiceQualifier_nu_t
typedef VAR(unsigned char, TYPEDEF) TrajServiceQualifier_nu_t;
#endif
#ifndef RTE_TYPE_TrajOptimization_t
#define RTE_TYPE_TrajOptimization_t
typedef struct
{
  VAR(TrajServiceQualifier_nu_t, TYPEDEF) TrajServiceQualifier_nu;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
  VAR(float, TYPEDEF) WeightTgtDistY_nu;
  VAR(float, TYPEDEF) WeightEndTime_nu;
  VAR(float, TYPEDEF) DistYToleranceLeftTgtArea_m;
  VAR(float, TYPEDEF) DistYToleranceRightTgtArea_m;
  VAR(float, TYPEDEF) FTireAclMax_mps2;
  VAR(float, TYPEDEF) FTireAclMin_mps2;
} TrajOptimization_t;
#endif
#ifndef RTE_TYPE_LCF_e_TrajGuiQualifier_t
#define RTE_TYPE_LCF_e_TrajGuiQualifier_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_TrajGuiQualifier_t;
#endif
#ifndef RTE_TYPE_TrajCalc_t
#define RTE_TYPE_TrajCalc_t
typedef struct
{
  VAR(LCF_e_TrajGuiQualifier_t, TYPEDEF) TrajGuiQualifier_nu;
  VAR(boolean, TYPEDEF) TriggerReplan_nu;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
  VAR(float, TYPEDEF) DevDistY_m;
  VAR(float, TYPEDEF) DevHeading_rad;
  VAR(float, TYPEDEF) PredictionTimeHeading_s;
  VAR(float, TYPEDEF) PredictionTimeCrv_s;
  VAR(float, TYPEDEF) PlanningHorizon_s;
} TrajCalc_t;
#endif
#ifndef RTE_TYPE_Obstacle_t
#define RTE_TYPE_Obstacle_t
typedef struct
{
  VAR(float, TYPEDEF) Obstacle_VelX_mps;
  VAR(float, TYPEDEF) Obstacle_AclX_mps2;
  VAR(float, TYPEDEF) Obstacle_Width_m;
  VAR(float, TYPEDEF) Obstacle_DistX_m;
  VAR(float, TYPEDEF) Obstacle_DistY_m;
} Obstacle_t;
#endif
#ifndef RTE_TYPE_LtcyComp_t
#define RTE_TYPE_LtcyComp_t
typedef struct
{
  VAR(float, TYPEDEF) TimeStamp_s;
  VAR(boolean, TYPEDEF) LtcyCompActivated_nu;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
  VAR(unsigned char, TYPEDEF) reserved3;
} LtcyComp_t;
#endif
#ifndef RTE_TYPE_TrajCtrlDirect_t
#define RTE_TYPE_TrajCtrlDirect_t
typedef struct
{
  VAR(CrvLimitation_t, TYPEDEF) CrvLimitation;
  VAR(CtrlTransitions_t, TYPEDEF) CtrlTransitions;
} TrajCtrlDirect_t;
#endif
#ifndef RTE_TYPE_TrajCtrlLimiter_t
#define RTE_TYPE_TrajCtrlLimiter_t
typedef struct
{
  VAR(boolean, TYPEDEF) LimiterActivated_nu;
  VAR(boolean, TYPEDEF) LimiterType_nu;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
  VAR(float, TYPEDEF) LimiterTimeDuration_s;
} TrajCtrlLimiter_t;
#endif
#ifndef RTE_TYPE_LCF_FCT_t
#define RTE_TYPE_LCF_FCT_t
typedef struct
{
  VAR(AllCoridors_t, TYPEDEF) AllCorridors;
  VAR(TrajOptimization_t, TYPEDEF) TrajOptimization;
  VAR(TrajCalc_t, TYPEDEF) TrajCalc;
  VAR(Obstacle_t, TYPEDEF) Obstacle;
  VAR(LtcyComp_t, TYPEDEF) LtcyComp;
  VAR(DeadTimeCalc_t, TYPEDEF) DeadTimeCalc;
  VAR(TrajCtrlDirect_t, TYPEDEF) TrajCtrlDirect;
  VAR(CrvAmp_t, TYPEDEF) CrvAmp;
  VAR(TrajCtrlLimiter_t, TYPEDEF) TrajCtrlLimiter;
} LCF_FCT_t;
#endif
#ifndef RTE_TYPE_LCF_e_IoStateType_t
#define RTE_TYPE_LCF_e_IoStateType_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_IoStateType_t;
#endif
#ifndef RTE_TYPE_State_nu_array_t
#define RTE_TYPE_State_nu_array_t
typedef VAR(LCF_e_IoStateType_t, TYPEDEF) State_nu_array_t[152];
#endif
#ifndef RTE_TYPE_LCF_e_ModeCtrlSystemState_t
#define RTE_TYPE_LCF_e_ModeCtrlSystemState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_ModeCtrlSystemState_t;
#endif
#ifndef RTE_TYPE_LCF_e_ModeCtrlActiveState_t
#define RTE_TYPE_LCF_e_ModeCtrlActiveState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_ModeCtrlActiveState_t;
#endif
#ifndef RTE_TYPE_LCF_e_AccTraceTrajState_t
#define RTE_TYPE_LCF_e_AccTraceTrajState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_AccTraceTrajState_t;
#endif
#ifndef RTE_TYPE_LCF_e_TurnSignalState_t
#define RTE_TYPE_LCF_e_TurnSignalState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_TurnSignalState_t;
#endif
#ifndef RTE_TYPE_LCF_e_TurnLeverState_t
#define RTE_TYPE_LCF_e_TurnLeverState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_TurnLeverState_t;
#endif
#ifndef RTE_TYPE_LCF_e_MainSwitchState_t
#define RTE_TYPE_LCF_e_MainSwitchState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_MainSwitchState_t;
#endif
#ifndef RTE_TYPE_LCF_e_ModeSelection_t
#define RTE_TYPE_LCF_e_ModeSelection_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_ModeSelection_t;
#endif
#ifndef RTE_TYPE_LCF_e_InputDefectState_t
#define RTE_TYPE_LCF_e_InputDefectState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_InputDefectState_t;
#endif
#ifndef RTE_TYPE_LCF_e_SensitivityState_t
#define RTE_TYPE_LCF_e_SensitivityState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_SensitivityState_t;
#endif
#ifndef RTE_TYPE_LCF_e_FctMode_t
#define RTE_TYPE_LCF_e_FctMode_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_FctMode_t;
#endif
#ifndef RTE_TYPE_LCF_e_HandsOffState_t
#define RTE_TYPE_LCF_e_HandsOffState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_HandsOffState_t;
#endif
#ifndef RTE_TYPE_LCF_e_SCCActiveState_t
#define RTE_TYPE_LCF_e_SCCActiveState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_SCCActiveState_t;
#endif
#ifndef RTE_TYPE_LCF_e_USMResetState_t
#define RTE_TYPE_LCF_e_USMResetState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_USMResetState_t;
#endif
#ifndef RTE_TYPE_LCF_e_HDAOnState_t
#define RTE_TYPE_LCF_e_HDAOnState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_HDAOnState_t;
#endif
#ifndef RTE_TYPE_LCF_e_SCCOnState_t
#define RTE_TYPE_LCF_e_SCCOnState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_SCCOnState_t;
#endif
#ifndef RTE_TYPE_LCF_e_NAVIRoadType_t
#define RTE_TYPE_LCF_e_NAVIRoadType_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_NAVIRoadType_t;
#endif
#ifndef RTE_TYPE_LCF_e_NAVIRoadForm_t
#define RTE_TYPE_LCF_e_NAVIRoadForm_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_NAVIRoadForm_t;
#endif
#ifndef RTE_TYPE_LCF_e_NAVIStatus_t
#define RTE_TYPE_LCF_e_NAVIStatus_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_NAVIStatus_t;
#endif
#ifndef RTE_TYPE_LCF_e_NAVIProlProfType_t
#define RTE_TYPE_LCF_e_NAVIProlProfType_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_NAVIProlProfType_t;
#endif
#ifndef RTE_TYPE_LCF_e_NAVITollgateDet_t
#define RTE_TYPE_LCF_e_NAVITollgateDet_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_NAVITollgateDet_t;
#endif
#ifndef RTE_TYPE_LCF_e_HDAExtFail_t
#define RTE_TYPE_LCF_e_HDAExtFail_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_HDAExtFail_t;
#endif
#ifndef RTE_TYPE_LCF_e_SCCMainMode_t
#define RTE_TYPE_LCF_e_SCCMainMode_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_SCCMainMode_t;
#endif
#ifndef RTE_TYPE_LCF_e_NAVISpeedUnit_t
#define RTE_TYPE_LCF_e_NAVISpeedUnit_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_NAVISpeedUnit_t;
#endif
#ifndef RTE_TYPE_LCF_e_LCAActiveState_t
#define RTE_TYPE_LCF_e_LCAActiveState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_LCAActiveState_t;
#endif
#ifndef RTE_TYPE_LCF_e_BSDActiveState_t
#define RTE_TYPE_LCF_e_BSDActiveState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_BSDActiveState_t;
#endif
#ifndef RTE_TYPE_LCF_e_LCAWarningState_t
#define RTE_TYPE_LCF_e_LCAWarningState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_LCAWarningState_t;
#endif
#ifndef RTE_TYPE_LCF_e_BSDWarningState_t
#define RTE_TYPE_LCF_e_BSDWarningState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_BSDWarningState_t;
#endif
#ifndef RTE_TYPE_LCF_e_WrnDeviceState_t
#define RTE_TYPE_LCF_e_WrnDeviceState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_WrnDeviceState_t;
#endif
#ifndef RTE_TYPE_LCF_e_WrnDeviceMode_t
#define RTE_TYPE_LCF_e_WrnDeviceMode_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_WrnDeviceMode_t;
#endif
#ifndef RTE_TYPE_LCF_e_BoolState_t
#define RTE_TYPE_LCF_e_BoolState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_BoolState_t;
#endif
#ifndef RTE_TYPE_LCF_e_EPSStSterCtlMod_t
#define RTE_TYPE_LCF_e_EPSStSterCtlMod_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_EPSStSterCtlMod_t;
#endif
#ifndef RTE_TYPE_LCF_e_EPSStatusECUActFact_t
#define RTE_TYPE_LCF_e_EPSStatusECUActFact_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_EPSStatusECUActFact_t;
#endif
#ifndef RTE_TYPE_LCF_e_EPSStatusDriverInter_t
#define RTE_TYPE_LCF_e_EPSStatusDriverInter_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_EPSStatusDriverInter_t;
#endif
#ifndef RTE_TYPE_LCF_e_LObjStat_t
#define RTE_TYPE_LCF_e_LObjStat_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_LObjStat_t;
#endif
#ifndef RTE_TYPE_LCF_e_RObjStat_t
#define RTE_TYPE_LCF_e_RObjStat_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_RObjStat_t;
#endif
#ifndef RTE_TYPE_LCF_e_LObjZone_t
#define RTE_TYPE_LCF_e_LObjZone_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_LObjZone_t;
#endif
#ifndef RTE_TYPE_LCF_e_RObjZone_t
#define RTE_TYPE_LCF_e_RObjZone_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_RObjZone_t;
#endif
#ifndef RTE_TYPE_SelectedTargetObjDetected_nu_t
#define RTE_TYPE_SelectedTargetObjDetected_nu_t
typedef VAR(unsigned char, TYPEDEF) SelectedTargetObjDetected_nu_t;
#endif
#ifndef RTE_TYPE_ObjRecognClassType_nu_t
#define RTE_TYPE_ObjRecognClassType_nu_t
typedef VAR(unsigned char, TYPEDEF) ObjRecognClassType_nu_t;
#endif
#ifndef RTE_TYPE_ObjRecognMeasState_nu_t
#define RTE_TYPE_ObjRecognMeasState_nu_t
typedef VAR(unsigned char, TYPEDEF) ObjRecognMeasState_nu_t;
#endif
#ifndef RTE_TYPE_TJATargetObject_t
#define RTE_TYPE_TJATargetObject_t
typedef struct
{
  VAR(float, TYPEDEF) MovementRelAclX_mps2;
  VAR(float, TYPEDEF) MovementRelVelX_mps;
  VAR(float, TYPEDEF) MovementRelAclY_mps2;
  VAR(float, TYPEDEF) MovementRelVelY_mps;
  VAR(float, TYPEDEF) PositionPosX_m;
  VAR(float, TYPEDEF) PositionPosY_m;
  VAR(float, TYPEDEF) PositionPosXStdDev_m;
  VAR(float, TYPEDEF) PositionPosYStdDev_m;
  VAR(float, TYPEDEF) ObjQuality_nu;
  VAR(SelectedTargetObjDetected_nu_t, TYPEDEF) SelectedTargetObjDetected_nu;
  VAR(ObjRecognClassType_nu_t, TYPEDEF) ObjRecognClassType_nu;
  VAR(ObjRecognMeasState_nu_t, TYPEDEF) ObjRecognMeasState_nu;
  VAR(unsigned char, TYPEDEF) ObjRecognExtendedQualifier_nu;
  VAR(float, TYPEDEF) DimensionsWidth_m;
  VAR(unsigned short, TYPEDEF) SensorSource_nu;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
  VAR(unsigned int, TYPEDEF) Tstamp_us;
} TJATargetObject_t;
#endif
#ifndef RTE_TYPE_LCF_SideObject_t
#define RTE_TYPE_LCF_SideObject_t
typedef struct
{
  VAR(float, TYPEDEF) PosX_m;
  VAR(float, TYPEDEF) PosY_m;
  VAR(float, TYPEDEF) RelVelX_mps;
  VAR(float, TYPEDEF) RelVelY_mps;
  VAR(float, TYPEDEF) RelAclX_mps2;
  VAR(float, TYPEDEF) RelAclY_mps2;
  VAR(unsigned char, TYPEDEF) Quality_nu;
  VAR(unsigned char, TYPEDEF) MeasState_nu;
  VAR(unsigned char, TYPEDEF) ObjRecognClassType_nu;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned int, TYPEDEF) ObjTstamp_us;
} LCF_SideObject_t;
#endif
#ifndef RTE_TYPE_TJASideObject_t
#define RTE_TYPE_TJASideObject_t
typedef struct
{
  VAR(LCF_SideObject_t, TYPEDEF) SideObjectLeft;
  VAR(LCF_SideObject_t, TYPEDEF) SideObjectRight;
} TJASideObject_t;
#endif
#ifndef RTE_TYPE_TMCESA_In_t
#define RTE_TYPE_TMCESA_In_t
typedef struct
{
  VAR(float, TYPEDEF) TSEGapLongDistEgoToTarget_m;
  VAR(float, TYPEDEF) TSEGapLongDistEgoToTargetPRE_m;
  VAR(float, TYPEDEF) TSETargetLongVel_mps;
  VAR(float, TYPEDEF) TSETargetLongAccel_mps2;
  VAR(float, TYPEDEF) TSEKappaEvasiveCorrRight_1pm;
  VAR(float, TYPEDEF) TSEGapLatDistEgoToCorrLeft_m;
  VAR(float, TYPEDEF) TSEGapLatDistEgoToCorrRight_m;
  VAR(float, TYPEDEF) TSEGapLatDistObjToCorrLeft_m;
  VAR(float, TYPEDEF) TSEGapLatDistObjToCorrRight_m;
  VAR(float, TYPEDEF) TSEAEBAnecLongAccel_mpss;
  VAR(unsigned char, TYPEDEF) TSEAEBAcuteDynWarnFCTChan_nu;
  VAR(unsigned char, TYPEDEF) TSEAEBAcuteDynWarnSigState_nu;
  VAR(unsigned char, TYPEDEF) TSEStatusFunctionEPF_nu;
  VAR(unsigned char, TYPEDEF) reserved1;
} TMCESA_In_t;
#endif
#ifndef RTE_TYPE_LCF_e_RearDrvAssStat_t
#define RTE_TYPE_LCF_e_RearDrvAssStat_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_RearDrvAssStat_t;
#endif
#ifndef RTE_TYPE_LCF_e_RearDrvAssState_t
#define RTE_TYPE_LCF_e_RearDrvAssState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_RearDrvAssState_t;
#endif
#ifndef RTE_TYPE_LCF_GenericInputs_t
#define RTE_TYPE_LCF_GenericInputs_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(State_nu_array_t, TYPEDEF) State_nu;
  VAR(float, TYPEDEF) SteerHandWheelAngle_rad;
  VAR(float, TYPEDEF) SteerHandWheelAngleRate_rps;
  VAR(float, TYPEDEF) DeltaFSteerAngle_deg;
  VAR(float, TYPEDEF) DeltaFSteerAngleRate_degps;
  VAR(float, TYPEDEF) SteerTrq_nm;
  VAR(float, TYPEDEF) DrvSteerWheelTrq_nm;
  VAR(float, TYPEDEF) EPS_Motor_Torque_nm;
  VAR(LCF_e_ModeCtrlSystemState_t, TYPEDEF) ESC_SystemState_nu;
  VAR(LCF_e_ModeCtrlActiveState_t, TYPEDEF) ESC_ActiveState_nu;
  VAR(LCF_e_ModeCtrlSystemState_t, TYPEDEF) ABS_SystemState_nu;
  VAR(LCF_e_ModeCtrlActiveState_t, TYPEDEF) ABS_ActiveState_nu;
  VAR(LCF_e_ModeCtrlSystemState_t, TYPEDEF) TCS_SystemState_nu;
  VAR(LCF_e_ModeCtrlActiveState_t, TYPEDEF) TCS_ActiveState_nu;
  VAR(LCF_e_ModeCtrlSystemState_t, TYPEDEF) ACC_SystemState_nu;
  VAR(LCF_e_ModeCtrlActiveState_t, TYPEDEF) ACC_ActiveState_nu;
  VAR(LCF_e_ModeCtrlSystemState_t, TYPEDEF) TSA_SystemState_nu;
  VAR(LCF_e_ModeCtrlActiveState_t, TYPEDEF) TSA_ActiveState_nu;
  VAR(LCF_e_AccTraceTrajState_t, TYPEDEF) ACC_TraceTrajQualifier_nu;
  VAR(LCF_e_ModeCtrlSystemState_t, TYPEDEF) VSM_SystemState_nu;
  VAR(float, TYPEDEF) ACC_TraceTrajCurve_1pm;
  VAR(float, TYPEDEF) ACC_TraceTrajWeight_nu;
  VAR(float, TYPEDEF) ACC_TraceTrajMaxDist_m;
  VAR(LCF_e_ModeCtrlActiveState_t, TYPEDEF) VSM_ActiveState_nu;
  VAR(LCF_e_ModeCtrlSystemState_t, TYPEDEF) EBA_SystemState_nu;
  VAR(LCF_e_ModeCtrlActiveState_t, TYPEDEF) EBA_ActiveState_nu;
  VAR(boolean, TYPEDEF) DynamometerTestBenchDetected_nu;
  VAR(boolean, TYPEDEF) DoorOpen_nu;
  VAR(LCF_e_TurnSignalState_t, TYPEDEF) TurnSignalState_nu;
  VAR(LCF_e_TurnLeverState_t, TYPEDEF) TurnSignalLever_nu;
  VAR(boolean, TYPEDEF) VehicleReadyState_nu;
  VAR(boolean, TYPEDEF) DriverNotBuckledUp_nu;
  VAR(boolean, TYPEDEF) OversteeringDetected_nu;
  VAR(boolean, TYPEDEF) UndersteeringDetected_nu;
  VAR(boolean, TYPEDEF) EPS_Toi_Unavail_nu;
  VAR(float, TYPEDEF) BankAngle_rad;
  VAR(float, TYPEDEF) TieRodLoad_n;
  VAR(boolean, TYPEDEF) EPS_Toi_Active_nu;
  VAR(boolean, TYPEDEF) EPS_Toi_Flt_nu;
  VAR(boolean, TYPEDEF) EPS_Fail_Stat_nu;
  VAR(boolean, TYPEDEF) EPS_Def_nu;
  VAR(LCF_e_MainSwitchState_t, TYPEDEF) LKAMainSwitch_nu;
  VAR(LCF_e_ModeSelection_t, TYPEDEF) LKAMode_nu;
  VAR(LCF_e_MainSwitchState_t, TYPEDEF) TJAMainSwitch_nu;
  VAR(unsigned char, TYPEDEF) TJAMode_nu;
  VAR(LCF_e_InputDefectState_t, TYPEDEF) VibrationActState_nu;
  VAR(LCF_e_InputDefectState_t, TYPEDEF) SideMirrorLEDState_nu;
  VAR(LCF_e_MainSwitchState_t, TYPEDEF) LDWSwitch_nu;
  VAR(LCF_e_MainSwitchState_t, TYPEDEF) LDPSwitch_nu;
  VAR(LCF_e_MainSwitchState_t, TYPEDEF) RDWSwitch_nu;
  VAR(LCF_e_MainSwitchState_t, TYPEDEF) RDPSwitch_nu;
  VAR(LCF_e_MainSwitchState_t, TYPEDEF) LDPOncomingSwitch_nu;
  VAR(LCF_e_MainSwitchState_t, TYPEDEF) AoLCSwitch_nu;
  VAR(LCF_e_MainSwitchState_t, TYPEDEF) LDWOncomingSwitch_nu;
  VAR(LCF_e_SensitivityState_t, TYPEDEF) LDWOCSensitivity_nu;
  VAR(LCF_e_SensitivityState_t, TYPEDEF) LDWSensitivity_nu;
  VAR(LCF_e_SensitivityState_t, TYPEDEF) LDPSensitivity_nu;
  VAR(LCF_e_SensitivityState_t, TYPEDEF) RDPSensitivity_nu;
  VAR(LCF_e_SensitivityState_t, TYPEDEF) RDWSensitivity_nu;
  VAR(LCF_e_FctMode_t, TYPEDEF) LDPMode_nu;
  VAR(LCF_e_FctMode_t, TYPEDEF) LDWMode_nu;
  VAR(LCF_e_FctMode_t, TYPEDEF) RDPMode_nu;
  VAR(LCF_e_FctMode_t, TYPEDEF) RDWMode_nu;
  VAR(LCF_e_FctMode_t, TYPEDEF) LDPOCMode_nu;
  VAR(LCF_e_FctMode_t, TYPEDEF) LDWOCMode_nu;
  VAR(LCF_e_FctMode_t, TYPEDEF) AoLCMode_nu;
  VAR(LCF_e_HandsOffState_t, TYPEDEF) DriverHandsOff_nu;
  VAR(LCF_e_SCCActiveState_t, TYPEDEF) SCCActive_nu;
  VAR(LCF_e_USMResetState_t, TYPEDEF) USMReset_nu;
  VAR(LCF_e_HDAOnState_t, TYPEDEF) HDAOn_nu;
  VAR(LCF_e_SCCOnState_t, TYPEDEF) SCCOn_nu;
  VAR(unsigned char, TYPEDEF) USMSetSpd_kph;
  VAR(LCF_e_NAVIRoadType_t, TYPEDEF) NAVIRoadType_nu;
  VAR(LCF_e_NAVIRoadForm_t, TYPEDEF) NAVISegFormOfWay_nu;
  VAR(unsigned char, TYPEDEF) NAVISegSpeedLim_kph;
  VAR(LCF_e_NAVIStatus_t, TYPEDEF) NAVIStatus_nu;
  VAR(LCF_e_NAVIProlProfType_t, TYPEDEF) NAVIProlProfType_nu;
  VAR(unsigned short, TYPEDEF) NAVITgDetDistOffset_m;
  VAR(unsigned short, TYPEDEF) NAVIPosOffset_m;
  VAR(LCF_e_NAVITollgateDet_t, TYPEDEF) NAVITollgateDet_nu;
  VAR(unsigned char, TYPEDEF) NAVIProlCyclicCount_nu;
  VAR(unsigned char, TYPEDEF) NAVIPosCyclicCount_nu;
  VAR(LCF_e_HDAExtFail_t, TYPEDEF) HDAExtFailFlag_nu;
  VAR(LCF_e_SCCMainMode_t, TYPEDEF) SCCMainMode_nu;
  VAR(LCF_e_NAVISpeedUnit_t, TYPEDEF) NAVISpeedUnit_nu;
  VAR(unsigned char, TYPEDEF) AlwaysHandsOn_nu;
  VAR(unsigned char, TYPEDEF) LcfVariantInfo_nu;
  VAR(float, TYPEDEF) AccelPedalPos_nu;
  VAR(boolean, TYPEDEF) DanRearObjBS_RearLeft_nu;
  VAR(boolean, TYPEDEF) DanRearObjFOV_RearLeft_nu;
  VAR(boolean, TYPEDEF) OIQualifierFlag_RearLeft_nu;
  VAR(boolean, TYPEDEF) MSFlag_RearLeft_nu;
  VAR(boolean, TYPEDEF) DanRearObjBS_RearRight_nu;
  VAR(boolean, TYPEDEF) DanRearObjFOV_RearRight_nu;
  VAR(boolean, TYPEDEF) OIQualifierFlag_RearRight_nu;
  VAR(boolean, TYPEDEF) MSFlag_RearRight_nu;
  VAR(LCF_e_MainSwitchState_t, TYPEDEF) ALCASwitch_nu;
  VAR(LCF_e_SensitivityState_t, TYPEDEF) ALCASensitivity_nu;
  VAR(LCF_e_FctMode_t, TYPEDEF) ALCAMode_nu;
  VAR(LCF_e_LCAActiveState_t, TYPEDEF) LCA_Active_Left_nu;
  VAR(LCF_e_BSDActiveState_t, TYPEDEF) BSD_Active_Left_nu;
  VAR(LCF_e_LCAWarningState_t, TYPEDEF) LCA_Warning_Left_nu;
  VAR(LCF_e_BSDWarningState_t, TYPEDEF) BSD_Warning_Left_nu;
  VAR(LCF_e_LCAActiveState_t, TYPEDEF) LCA_Active_Right_nu;
  VAR(LCF_e_BSDActiveState_t, TYPEDEF) BSD_Active_Right_nu;
  VAR(LCF_e_LCAWarningState_t, TYPEDEF) LCA_Warning_Right_nu;
  VAR(LCF_e_BSDWarningState_t, TYPEDEF) BSD_Warning_Right_nu;
  VAR(LCF_e_WrnDeviceState_t, TYPEDEF) HapticWrnDeviceLeftState_nu;
  VAR(LCF_e_WrnDeviceState_t, TYPEDEF) HapticWrnDeviceRightState_nu;
  VAR(LCF_e_WrnDeviceState_t, TYPEDEF) HapticWrnDeviceCommonState_nu;
  VAR(LCF_e_WrnDeviceMode_t, TYPEDEF) HapticWrnDeviceLeftMode_nu;
  VAR(LCF_e_WrnDeviceMode_t, TYPEDEF) HapticWrnDeviceRightMode_nu;
  VAR(LCF_e_WrnDeviceMode_t, TYPEDEF) HapticWrnDeviceCommonMode_nu;
  VAR(LCF_e_WrnDeviceState_t, TYPEDEF) VisualWrnDeviceLeftState_nu;
  VAR(LCF_e_WrnDeviceState_t, TYPEDEF) VisualWrnDeviceRightState_nu;
  VAR(LCF_e_WrnDeviceState_t, TYPEDEF) VisualWrnDeviceCommonState_nu;
  VAR(LCF_e_WrnDeviceMode_t, TYPEDEF) VisualWrnDeviceLeftMode_nu;
  VAR(LCF_e_WrnDeviceMode_t, TYPEDEF) VisualWrnDeviceRightMode_nu;
  VAR(LCF_e_WrnDeviceMode_t, TYPEDEF) VisualWrnDeviceCommonMode_nu;
  VAR(LCF_e_SensitivityState_t, TYPEDEF) LDPOCSensitivity_nu;
  VAR(LCF_e_SensitivityState_t, TYPEDEF) AoLCSensitivity_nu;
  VAR(LCF_e_BoolState_t, TYPEDEF) TJALatCtrlActive_nu;
  VAR(LCF_e_BoolState_t, TYPEDEF) TJAHandsOffWrnEnable_nu;
  VAR(LCF_e_EPSStSterCtlMod_t, TYPEDEF) EPSSteerCtrlMode_nu;
  VAR(LCF_e_EPSStatusECUActFact_t, TYPEDEF) EPSECUActFact_nu;
  VAR(LCF_e_EPSStatusDriverInter_t, TYPEDEF) EPSDriverIntervention_nu;
  VAR(unsigned char, TYPEDEF) LCA_SysLObjId_nu;
  VAR(unsigned char, TYPEDEF) LCA_SysRObjId_nu;
  VAR(float, TYPEDEF) EPSReqTrq_nm;
  VAR(float, TYPEDEF) EPSMotTrq_nm;
  VAR(float, TYPEDEF) EPSMotAngSpd_degps;
  VAR(float, TYPEDEF) EPSReqStAng_deg;
  VAR(float, TYPEDEF) LCA_SysLObjLongtRltvDist_m;
  VAR(float, TYPEDEF) LCA_SysLObjLatRltvDist_m;
  VAR(float, TYPEDEF) LCA_SysLObjLongtRltvVel_mps;
  VAR(float, TYPEDEF) LCA_SysLObjLatRltvVel_mps;
  VAR(float, TYPEDEF) LCA_SysLObjTimeToCol_sec;
  VAR(float, TYPEDEF) LCA_SysRObjLongtRltvDist_m;
  VAR(float, TYPEDEF) LCA_SysRObjLatRltvDist_m;
  VAR(float, TYPEDEF) LCA_SysRObjLongtRltvVel_mps;
  VAR(float, TYPEDEF) LCA_SysRObjLatRltvVel_mps;
  VAR(float, TYPEDEF) LCA_SysRObjTimeToCol_sec;
  VAR(LCF_e_LObjStat_t, TYPEDEF) LCA_SysLObjSts_nu;
  VAR(LCF_e_RObjStat_t, TYPEDEF) LCA_SysRObjSts_nu;
  VAR(LCF_e_LObjZone_t, TYPEDEF) LCA_SysLObjZone_nu;
  VAR(LCF_e_RObjZone_t, TYPEDEF) LCA_SysRObjZone_nu;
  VAR(float, TYPEDEF) LCA_SysLObjWidth_m;
  VAR(float, TYPEDEF) LCA_SysLObjLength_m;
  VAR(float, TYPEDEF) LCA_SysRObjWidth_m;
  VAR(float, TYPEDEF) LCA_SysRObjLength_m;
  VAR(TJATargetObject_t, TYPEDEF) TJATargetObject;
  VAR(TJASideObject_t, TYPEDEF) TJASideObject;
  VAR(FroopToLCF_t, TYPEDEF) FroopToLCF;
  VAR(TMCESA_In_t, TYPEDEF) TMCESA_In;
  VAR(LCF_e_RearDrvAssStat_t, TYPEDEF) LCA_SysLObjStry_nu;
  VAR(LCF_e_RearDrvAssStat_t, TYPEDEF) LCA_SysRObjStry_nu;
  VAR(LCF_e_RearDrvAssState_t, TYPEDEF) LCA_SRRSysSts_nu;
  VAR(unsigned char, TYPEDEF) SteerWheelAngSensorStatus_nu;
  VAR(float, TYPEDEF) MainCylPressure_pa;
  VAR(boolean, TYPEDEF) CommunicationLostEps_nu;
  VAR(boolean, TYPEDEF) CommunicationLostSCS_nu;
  VAR(boolean, TYPEDEF) CommunicationLostTCM_nu;
  VAR(unsigned char, TYPEDEF) TerrainMode_nu;
  VAR(unsigned char, TYPEDEF) CustSpecLCFErrInput_nu;
  VAR(boolean, TYPEDEF) APASta_nu;
  VAR(unsigned char, TYPEDEF) ACCExitDrvCond;
  VAR(unsigned char, TYPEDEF) IACCHWAMode_nu;
  VAR(float, TYPEDEF) ElkObj1_TTC;
  VAR(float, TYPEDEF) ElkObj2_TTC;
  VAR(float, TYPEDEF) ElkObj3_TTC;
  VAR(float, TYPEDEF) ElkObj4_TTC;
  VAR(unsigned char, TYPEDEF) Fcu_ElkObj1_LocationFlag;
  VAR(unsigned char, TYPEDEF) Fcu_ElkObj2_LocationFlag;
  VAR(unsigned char, TYPEDEF) Fcu_ElkObj3_LocationFlag;
  VAR(unsigned char, TYPEDEF) Fcu_ElkObj4_LocationFlag;
  VAR(unsigned char, TYPEDEF) ttcMode1;
  VAR(unsigned char, TYPEDEF) ttcMode2;
  VAR(unsigned char, TYPEDEF) ttcMode3;
  VAR(unsigned char, TYPEDEF) ttcMode4;
  VAR(float, TYPEDEF) BrakePedalPostion_mm;
} LCF_GenericInputs_t;
#endif
#ifndef RTE_TYPE_LCF_LaDmcIucToSoc_t
#define RTE_TYPE_LCF_LaDmcIucToSoc_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(unsigned short, TYPEDEF) SAC_Dmc_Status_nu;
  VAR(short, TYPEDEF) SAC_Eps_Torque_Request_nm;
  VAR(unsigned char, TYPEDEF) SAC_Eps_Request_Flag_nu;
  VAR(EvntDtctnIucEvents_nu_array_t, TYPEDEF) EvntDtctnIucEvents_nu;
} LCF_LaDmcIucToSoc_t;
#endif
#ifndef RTE_TYPE_LCF_LaDmcSocToIuc_t
#define RTE_TYPE_LCF_LaDmcSocToIuc_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(boolean, TYPEDEF) SAC_Activation_Request_nu;
  VAR(unsigned char, TYPEDEF) SAC_Activation_Request_Qf_nu;
  VAR(short, TYPEDEF) SAC_Steer_Angle_Command_deg;
  VAR(short, TYPEDEF) SAC_Torque_Overlay_Request_nm;
  VAR(boolean, TYPEDEF) SAC_Force_Shut_Off_Request;
  VAR(unsigned char, TYPEDEF) SAC_Stiffness_Request_per;
  VAR(unsigned char, TYPEDEF) SAC_Accuracy_Request_per;
  VAR(unsigned char, TYPEDEF) SAC_Steering_Wheel_Vibration_nu;
  VAR(unsigned char, TYPEDEF) SAC_Lane_Status_nu;
  VAR(unsigned char, TYPEDEF) SAC_Derating_Level_Request_per;
  VAR(unsigned char, TYPEDEF) SAC_Torque_Ramp_Factor_per;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
} LCF_LaDmcSocToIuc_t;
#endif
#ifndef RTE_TYPE_LCF_e_LKASLDWSysState_t
#define RTE_TYPE_LCF_e_LKASLDWSysState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_LKASLDWSysState_t;
#endif
#ifndef RTE_TYPE_LCF_e_LaKMCLaneStatus_t
#define RTE_TYPE_LCF_e_LaKMCLaneStatus_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_LaKMCLaneStatus_t;
#endif
#ifndef RTE_TYPE_LCF_e_Lkas_LDWSOpt_USM_t
#define RTE_TYPE_LCF_e_Lkas_LDWSOpt_USM_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_Lkas_LDWSOpt_USM_t;
#endif
#ifndef RTE_TYPE_LCF_e_Lkas_SysWarning_t
#define RTE_TYPE_LCF_e_Lkas_SysWarning_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_Lkas_SysWarning_t;
#endif
#ifndef RTE_TYPE_LCF_e_Lkas_LdwsWarning_t
#define RTE_TYPE_LCF_e_Lkas_LdwsWarning_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_Lkas_LdwsWarning_t;
#endif
#ifndef RTE_TYPE_LCF_e_HdaLgActStatus_t
#define RTE_TYPE_LCF_e_HdaLgActStatus_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_HdaLgActStatus_t;
#endif
#ifndef RTE_TYPE_LCF_e_SCCAutoSetSpdEnable_t
#define RTE_TYPE_LCF_e_SCCAutoSetSpdEnable_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_SCCAutoSetSpdEnable_t;
#endif
#ifndef RTE_TYPE_LCF_e_CLUAutoSetSpdUpdate_t
#define RTE_TYPE_LCF_e_CLUAutoSetSpdUpdate_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_CLUAutoSetSpdUpdate_t;
#endif
#ifndef RTE_TYPE_LCF_e_CLUHDAStatus_t
#define RTE_TYPE_LCF_e_CLUHDAStatus_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_CLUHDAStatus_t;
#endif
#ifndef RTE_TYPE_LCF_e_CLUHDAMode_t
#define RTE_TYPE_LCF_e_CLUHDAMode_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_CLUHDAMode_t;
#endif
#ifndef RTE_TYPE_LCF_e_CLULaneDetect_t
#define RTE_TYPE_LCF_e_CLULaneDetect_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_CLULaneDetect_t;
#endif
#ifndef RTE_TYPE_LCF_e_CLUHDAInfoDisplay_t
#define RTE_TYPE_LCF_e_CLUHDAInfoDisplay_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_CLUHDAInfoDisplay_t;
#endif
#ifndef RTE_TYPE_LCF_e_CLUHdaLfaSymbolState_t
#define RTE_TYPE_LCF_e_CLUHdaLfaSymbolState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_CLUHdaLfaSymbolState_t;
#endif
#ifndef RTE_TYPE_LCF_e_FctSystemState_t
#define RTE_TYPE_LCF_e_FctSystemState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_FctSystemState_t;
#endif
#ifndef RTE_TYPE_LCF_e_FctSideState_t
#define RTE_TYPE_LCF_e_FctSideState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_FctSideState_t;
#endif
#ifndef RTE_TYPE_LCF_e_LatCtrlMod_t
#define RTE_TYPE_LCF_e_LatCtrlMod_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_LatCtrlMod_t;
#endif
#ifndef RTE_TYPE_Visualization_t
#define RTE_TYPE_Visualization_t
typedef struct
{
  VAR(AllCorridors_t, TYPEDEF) AllCorridors;
  VAR(unsigned char, TYPEDEF) LaneValidQualVis_nu;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
  VAR(float, TYPEDEF) ABDTimeStamp_sec;
} Visualization_t;
#endif
#ifndef RTE_TYPE_TMC_SEN_Out_t
#define RTE_TYPE_TMC_SEN_Out_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) TMC_Indi_nu;
  VAR(unsigned char, TYPEDEF) TMC_LaneDispLeft_nu;
  VAR(unsigned char, TYPEDEF) TMC_LaneDispRight_nu;
  VAR(unsigned char, TYPEDEF) TMC_StrgCtrlAct_nu;
  VAR(unsigned char, TYPEDEF) TMC_DriverHandsOff_nu;
  VAR(unsigned char, TYPEDEF) TMC_OperationSpdDisp_nu;
  VAR(unsigned char, TYPEDEF) TMC_LdwBuzzer_nu;
  VAR(unsigned char, TYPEDEF) TMC_FuncModeDisp_nu;
} TMC_SEN_Out_t;
#endif
#ifndef RTE_TYPE_LCF_e_CustSpecLCAState_t
#define RTE_TYPE_LCF_e_CustSpecLCAState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_CustSpecLCAState_t;
#endif
#ifndef RTE_TYPE_LCF_e_CustSpecLCAErrorState_t
#define RTE_TYPE_LCF_e_CustSpecLCAErrorState_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_CustSpecLCAErrorState_t;
#endif
#ifndef RTE_TYPE_LCF_SenGenericOutputs_t
#define RTE_TYPE_LCF_SenGenericOutputs_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(LCF_e_LKASLDWSysState_t, TYPEDEF) Lkas_LDWSSysState_nu;
  VAR(unsigned char, TYPEDEF) LaneRecogState_nu;
  VAR(unsigned char, TYPEDEF) SymbolState_nu;
  VAR(unsigned char, TYPEDEF) HandsOffSnd_nu;
  VAR(LCF_e_LaKMCLaneStatus_t, TYPEDEF) LaKMC_lane_status_nu;
  VAR(LCF_e_Lkas_LDWSOpt_USM_t, TYPEDEF) Lkas_LDWSOpt_USM_nu;
  VAR(LCF_e_Lkas_SysWarning_t, TYPEDEF) Lkas_SysWarning_nu;
  VAR(LCF_e_Lkas_LdwsWarning_t, TYPEDEF) Lkas_LdwsLHWarning_nu;
  VAR(LCF_e_Lkas_LdwsWarning_t, TYPEDEF) Lkas_LdwsRHWarning_nu;
  VAR(LCF_e_HdaLgActStatus_t, TYPEDEF) CLUHdaLgActive_nu;
  VAR(LCF_e_SCCAutoSetSpdEnable_t, TYPEDEF) SCCAutoSetSpdEnable_nu;
  VAR(unsigned char, TYPEDEF) SCCAutoSetSpd_kph;
  VAR(LCF_e_CLUAutoSetSpdUpdate_t, TYPEDEF) CLUAutoSetSpdUpdate_nu;
  VAR(LCF_e_CLUHDAStatus_t, TYPEDEF) CLUHDAStatus_nu;
  VAR(LCF_e_CLUHDAMode_t, TYPEDEF) CLUHDAMode_nu;
  VAR(LCF_e_CLULaneDetect_t, TYPEDEF) CLULaneDetect_nu;
  VAR(LCF_e_CLUHDAInfoDisplay_t, TYPEDEF) CLUHDAInfoDisplay_nu;
  VAR(LCF_e_CLUHdaLfaSymbolState_t, TYPEDEF) CLUHdaLfaSymbolState_nu;
  VAR(LCF_e_FctSystemState_t, TYPEDEF) LKASystemState_nu;
  VAR(LCF_e_FctSystemState_t, TYPEDEF) LDWSystemState_nu;
  VAR(LCF_e_FctSideState_t, TYPEDEF) LDWSystemStateLeft_nu;
  VAR(LCF_e_FctSideState_t, TYPEDEF) LDWSystemStateRight_nu;
  VAR(LCF_e_FctSystemState_t, TYPEDEF) LDPSystemState_nu;
  VAR(LCF_e_FctSideState_t, TYPEDEF) LDPSystemStateLeft_nu;
  VAR(LCF_e_FctSideState_t, TYPEDEF) LDPSystemStateRight_nu;
  VAR(LCF_e_FctSystemState_t, TYPEDEF) RDPSystemState_nu;
  VAR(LCF_e_FctSideState_t, TYPEDEF) RDPSystemStateLeft_nu;
  VAR(LCF_e_FctSideState_t, TYPEDEF) RDPSystemStateRight_nu;
  VAR(LCF_e_FctSystemState_t, TYPEDEF) RDWSystemState_nu;
  VAR(LCF_e_FctSideState_t, TYPEDEF) RDWSystemStateLeft_nu;
  VAR(LCF_e_FctSideState_t, TYPEDEF) RDWSystemStateRight_nu;
  VAR(LCF_e_FctSystemState_t, TYPEDEF) LDPOCSystemState_nu;
  VAR(LCF_e_FctSideState_t, TYPEDEF) LDPOCSystemStateLeft_nu;
  VAR(LCF_e_FctSideState_t, TYPEDEF) LDPOCSystemStateRight_nu;
  VAR(LCF_e_FctSystemState_t, TYPEDEF) ALCASystemState_nu;
  VAR(LCF_e_FctSideState_t, TYPEDEF) ALCASystemStateLeft_nu;
  VAR(LCF_e_FctSideState_t, TYPEDEF) ALCASystemStateRight_nu;
  VAR(LCF_e_FctSystemState_t, TYPEDEF) AoLCSystemState_nu;
  VAR(LCF_e_FctSideState_t, TYPEDEF) AoLCSystemStateLeft_nu;
  VAR(LCF_e_FctSideState_t, TYPEDEF) AoLCSystemStateRight_nu;
  VAR(LCF_e_FctSystemState_t, TYPEDEF) TJASystemState_nu;
  VAR(LCF_e_LatCtrlMod_t, TYPEDEF) TJALatCtrlMode_nu;
  VAR(unsigned char, TYPEDEF) HapticWrnDeviceLeftReq_nu;
  VAR(unsigned char, TYPEDEF) HapticWrnDeviceRightReq_nu;
  VAR(unsigned char, TYPEDEF) HapticWrnDeviceCommonReq_nu;
  VAR(unsigned char, TYPEDEF) VisualWrnDeviceLeftReq_nu;
  VAR(unsigned char, TYPEDEF) VisualWrnDeviceRightReq_nu;
  VAR(unsigned char, TYPEDEF) VisualWrnDeviceCommonReq_nu;
  VAR(unsigned char, TYPEDEF) AcousticWrnReqLeft_nu;
  VAR(unsigned char, TYPEDEF) AcousticWrnReqRight_nu;
  VAR(unsigned char, TYPEDEF) LaneValidQualDMC_nu;
  VAR(unsigned char, TYPEDEF) HandsOffSysWarning_nu;
  VAR(unsigned char, TYPEDEF) ErrorStateTJA_nu;
  VAR(unsigned char, TYPEDEF) CustSpecSysStateTJA_nu;
  VAR(unsigned char, TYPEDEF) ErrorStateLKA_nu;
  VAR(unsigned char, TYPEDEF) CustSpecSysStateLKA_nu;
  VAR(unsigned char, TYPEDEF) ErrorStateLDP_nu;
  VAR(unsigned char, TYPEDEF) CustSpecSysStateLDP_nu;
  VAR(unsigned char, TYPEDEF) ErrorStateLDW_nu;
  VAR(unsigned char, TYPEDEF) CustSpecSysStateLDW_nu;
  VAR(unsigned char, TYPEDEF) ErrorStateRDP_nu;
  VAR(unsigned char, TYPEDEF) CustSpecSysStateRDP_nu;
  VAR(unsigned char, TYPEDEF) ErrorStateLDPOC_nu;
  VAR(unsigned char, TYPEDEF) CustSpecSysStateLDPOC_nu;
  VAR(Visualization_t, TYPEDEF) Visualization;
  VAR(HMI_Out_t, TYPEDEF) HMI_Out;
  VAR(float, TYPEDEF) LCF_Stiffness_nu;
  VAR(float, TYPEDEF) LCF_Accuracy_nu;
  VAR(TMC_SEN_Out_t, TYPEDEF) TMC_SEN_Out;
  VAR(unsigned short, TYPEDEF) AvailableFunction_nu;
  VAR(unsigned char, TYPEDEF) TJA_Status_nu;
  VAR(unsigned char, TYPEDEF) CustSpecDrvrTkovReq_nu;
  VAR(unsigned char, TYPEDEF) CustSpecAudReq_nu;
  VAR(LCF_e_CustSpecLCAState_t, TYPEDEF) CustSpecSysStateALCA_nu;
  VAR(LCF_e_CustSpecLCAErrorState_t, TYPEDEF) ErrorStateALCA_nu;
  VAR(HMOSGW_TJALatCntlMdSW_nu_t, TYPEDEF) HMOSGW_TJALatCntlMdSW_nu;
  VAR(boolean, TYPEDEF) HMOSGW_LAExtDisReq_nu;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
} LCF_SenGenericOutputs_t;
#endif
#ifndef RTE_TYPE_LCF_e_ControllingFunction_t
#define RTE_TYPE_LCF_e_ControllingFunction_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_ControllingFunction_t;
#endif
#ifndef RTE_TYPE_LCF_e_LatCtrlMode_t
#define RTE_TYPE_LCF_e_LatCtrlMode_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_LatCtrlMode_t;
#endif
#ifndef RTE_TYPE_LCF_e_LcfCtrlAbort_t
#define RTE_TYPE_LCF_e_LcfCtrlAbort_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_LcfCtrlAbort_t;
#endif
#ifndef RTE_TYPE_LCF_SysCoordinator_t
#define RTE_TYPE_LCF_SysCoordinator_t
typedef struct
{
  VAR(LCF_e_FctSystemState_t, TYPEDEF) SysStateLDP_nu;
  VAR(LCF_e_FctSystemState_t, TYPEDEF) SysStateRDP_nu;
  VAR(LCF_e_FctSystemState_t, TYPEDEF) SysStateLDW_nu;
  VAR(LCF_e_FctSystemState_t, TYPEDEF) SysStateLDPOC_nu;
  VAR(LCF_e_FctSystemState_t, TYPEDEF) SysStateALCA_nu;
  VAR(LCF_e_FctSystemState_t, TYPEDEF) CoordSysStateLCF_nu;
  VAR(LCF_e_FctSystemState_t, TYPEDEF) SysStateLKA_nu;
  VAR(LCF_e_LatCtrlMode_t, TYPEDEF) LatCtrlModeLKA_nu;
  VAR(LCF_e_FctSystemState_t, TYPEDEF) SysStateTJA_nu;
  VAR(LCF_e_LatCtrlMode_t, TYPEDEF) LatCtrlModeTJA_nu;
  VAR(LCF_e_LcfCtrlAbort_t, TYPEDEF) LcfCtrlAbort_nu;
  VAR(unsigned char, TYPEDEF) LnBndValidLKA_nu;
  VAR(unsigned char, TYPEDEF) LnBndValidLDW_nu;
  VAR(unsigned char, TYPEDEF) LnBndValidLDP_nu;
  VAR(unsigned char, TYPEDEF) LnBndValidRDP_nu;
  VAR(unsigned char, TYPEDEF) LnBndValidLDPOC_nu;
  VAR(unsigned char, TYPEDEF) LnBndValidTJA_nu;
  VAR(unsigned char, TYPEDEF) LnBndValidALCA_nu;
  VAR(unsigned char, TYPEDEF) LcfFctAvailability_nu;
  VAR(unsigned char, TYPEDEF) reserved1;
} LCF_SysCoordinator_t;
#endif
#ifndef RTE_TYPE_LCF_SenToVeh_t
#define RTE_TYPE_LCF_SenToVeh_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(unsigned char, TYPEDEF) ActFctEnabled_nu;
  VAR(unsigned char, TYPEDEF) ActFctLevel_nu;
  VAR(unsigned char, TYPEDEF) SpecialDrivingCorridor_nu;
  VAR(LCF_e_ControllingFunction_t, TYPEDEF) ControllingFunction_nu;
  VAR(float, TYPEDEF) MaxJerkAllowed_mps3;
  VAR(unsigned char, TYPEDEF) OcObjActSide_nu;
  VAR(unsigned char, TYPEDEF) AngReqMaxLimitScale_per;
  VAR(unsigned char, TYPEDEF) AngReqRateMaxLimitScale_per;
  VAR(unsigned char, TYPEDEF) StraightPathDtct_nu;
  VAR(float, TYPEDEF) Reserved1_nu;
  VAR(float, TYPEDEF) Reserved2_nu;
  VAR(LCF_FCT_t, TYPEDEF) LCF_FCT;
  VAR(LCF_SysCoordinator_t, TYPEDEF) LCF_SysCoordinator;
  VAR(ABP_CamRawData_t, TYPEDEF) ABP_CamRawData;
  VAR(EvntDtctnSenEvents_nu_array_t, TYPEDEF) EvntDtctnSenEvents_nu;
} LCF_SenToVeh_t;
#endif
#ifndef RTE_TYPE_LCF_e_LaDMCStatus_t
#define RTE_TYPE_LCF_e_LaDMCStatus_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_LaDMCStatus_t;
#endif
#ifndef RTE_TYPE_LCF_e_LKASActToi_t
#define RTE_TYPE_LCF_e_LKASActToi_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_LKASActToi_t;
#endif
#ifndef RTE_TYPE_LCF_e_LKASToiFlt_t
#define RTE_TYPE_LCF_e_LKASToiFlt_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_LKASToiFlt_t;
#endif
#ifndef RTE_TYPE_LaKMC_QuTgtVehCtrl_nu_t
#define RTE_TYPE_LaKMC_QuTgtVehCtrl_nu_t
typedef VAR(unsigned char, TYPEDEF) LaKMC_QuTgtVehCtrl_nu_t;
#endif
#ifndef RTE_TYPE_TMC_VEH_Out_t
#define RTE_TYPE_TMC_VEH_Out_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) TMC_DdrData1_nu;
  VAR(unsigned char, TYPEDEF) TMC_DdrData2_nu;
  VAR(unsigned char, TYPEDEF) TMC_DdrData3_nu;
  VAR(unsigned char, TYPEDEF) reserved1;
} TMC_VEH_Out_t;
#endif
#ifndef RTE_TYPE_TMCESA_Out_t
#define RTE_TYPE_TMCESA_Out_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) TSEAESSysState_nu;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
} TMCESA_Out_t;
#endif
#ifndef RTE_TYPE_LCF_VehGenericOutputs_t
#define RTE_TYPE_LCF_VehGenericOutputs_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(LCF_e_LaDMCStatus_t, TYPEDEF) LaDMC_Status_nu;
  VAR(unsigned char, TYPEDEF) LaDMC_Eps_Damping_Level_Request_per;
  VAR(LCF_e_LKASActToi_t, TYPEDEF) Lkas_ActToi_nu;
  VAR(LCF_e_LKASToiFlt_t, TYPEDEF) Lkas_ToiFlt_nu;
  VAR(float, TYPEDEF) Lkas_StrToqReq_nm;
  VAR(float, TYPEDEF) Lkas_SteeringAngleRate_rps;
  VAR(float, TYPEDEF) LaKMC_CrvCmd_Sum_1pm;
  VAR(float, TYPEDEF) LaKMC_CrvCmd_FF_1pm;
  VAR(float, TYPEDEF) LaKMC_CrvCmd_Ctrl_1pm;
  VAR(float, TYPEDEF) LaDMC_StrAngReq_deg;
  VAR(float, TYPEDEF) LaDMC_StrAngEst_deg;
  VAR(float, TYPEDEF) LaDMC_DeratingFactorReq_nu;
  VAR(float, TYPEDEF) LaDMC_StiffnessReq_nu;
  VAR(float, TYPEDEF) LaDMC_AccuracyReq_nu;
  VAR(LaKMC_QuTgtVehCtrl_nu_t, TYPEDEF) LaKMC_QuTgtVehCtrl_nu;
  VAR(unsigned char, TYPEDEF) LaDMC_ActFunc_nu;
  VAR(unsigned char, TYPEDEF) LaDMC_SteerAngReqQF_nu;
  VAR(unsigned char, TYPEDEF) LaDMC_YawRateReqQF_nu;
  VAR(TMC_VEH_Out_t, TYPEDEF) TMC_VEH_Out;
  VAR(TMCESA_Out_t, TYPEDEF) TMCESA_Out;
} LCF_VehGenericOutputs_t;
#endif
#ifndef RTE_TYPE_TrajError_t
#define RTE_TYPE_TrajError_t
typedef struct
{
  VAR(float, TYPEDEF) CurDistY_m;
  VAR(float, TYPEDEF) CurHeading_rad;
  VAR(float, TYPEDEF) LtcyComp_DevHeading_rad;
} TrajError_t;
#endif
#ifndef RTE_TYPE_TrajPlanCurvatures_t
#define RTE_TYPE_TrajPlanCurvatures_t
typedef struct
{
  VAR(float, TYPEDEF) TgtTrajCrv_1pm;
  VAR(float, TYPEDEF) TgtTrajCrvGrd_1pms;
  VAR(float, TYPEDEF) LtcyComp_RightCorridorCrv_1pm;
} TrajPlanCurvatures_t;
#endif
#ifndef RTE_TYPE_ReplanValues_t
#define RTE_TYPE_ReplanValues_t
typedef struct
{
  VAR(boolean, TYPEDEF) TrigCustFctReplanCurValues_nu;
  VAR(LCF_e_TrajGuiQualifier_t, TYPEDEF) TrajGuiQualifier_nu;
} ReplanValues_t;
#endif
#ifndef RTE_TYPE_LCF_VehToSen_t
#define RTE_TYPE_LCF_VehToSen_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(float, TYPEDEF) DrvAttention_perc;
  VAR(signed char, TYPEDEF) DrvAttentionConf_perc;
  VAR(unsigned char, TYPEDEF) DrvMonSysWarning_nu;
  VAR(unsigned char, TYPEDEF) HandsOffConfirmed_nu;
  VAR(unsigned char, TYPEDEF) AbuseWarning_nu;
  VAR(float, TYPEDEF) EstHandTor_nm;
  VAR(float, TYPEDEF) Reserved1_nu;
  VAR(float, TYPEDEF) Reserved2_nu;
  VAR(TrajError_t, TYPEDEF) TrajError;
  VAR(DesiredTraj_t, TYPEDEF) DesiredTraj;
  VAR(TrajPlanCurvatures_t, TYPEDEF) TrajPlanCurvatures;
  VAR(Errors_t, TYPEDEF) Errors;
  VAR(Curvatures_t, TYPEDEF) Curvatures;
  VAR(Flags_t, TYPEDEF) Flags;
  VAR(EvntDtctnVehEvents_nu_array_t, TYPEDEF) EvntDtctnVehEvents_nu;
  VAR(ReplanValues_t, TYPEDEF) ReplanValues;
  VAR(unsigned char, TYPEDEF) SAC_Eps_Request_Flag_nu;
  VAR(unsigned char, TYPEDEF) TSEMDC_ControllingFunction_nu;
} LCF_VehToSen_t;
#endif
#ifndef RTE_TYPE_LCF_e_ActiveLatFunction_t
#define RTE_TYPE_LCF_e_ActiveLatFunction_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_ActiveLatFunction_t;
#endif
#ifndef RTE_TYPE_LCF_e_IoStatePos_t
#define RTE_TYPE_LCF_e_IoStatePos_t
typedef VAR(unsigned char, TYPEDEF) LCF_e_IoStatePos_t;
#endif
#ifndef RTE_TYPE_LSD_e_EnvironmentData_BrightnessState
#define RTE_TYPE_LSD_e_EnvironmentData_BrightnessState
typedef VAR(unsigned char, TYPEDEF) LSD_e_EnvironmentData_BrightnessState;
#endif
#ifndef RTE_TYPE_LSD_e_EnvironmentData_CityState
#define RTE_TYPE_LSD_e_EnvironmentData_CityState
typedef VAR(unsigned char, TYPEDEF) LSD_e_EnvironmentData_CityState;
#endif
#ifndef RTE_TYPE_LSD_e_EnvironmentData_TunnelState
#define RTE_TYPE_LSD_e_EnvironmentData_TunnelState
typedef VAR(unsigned char, TYPEDEF) LSD_e_EnvironmentData_TunnelState;
#endif
#ifndef RTE_TYPE_LSD_e_EnvironmentData_HighwayState
#define RTE_TYPE_LSD_e_EnvironmentData_HighwayState
typedef VAR(unsigned char, TYPEDEF) LSD_e_EnvironmentData_HighwayState;
#endif
#ifndef RTE_TYPE_LSD_e_EnvironmentData_HighReflectorDensityState
#define RTE_TYPE_LSD_e_EnvironmentData_HighReflectorDensityState
typedef VAR(unsigned char, TYPEDEF) LSD_e_EnvironmentData_HighReflectorDensityState;
#endif
#ifndef RTE_TYPE_LSD_EnvironmentData_t
#define RTE_TYPE_LSD_EnvironmentData_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(LSD_e_EnvironmentData_BrightnessState, TYPEDEF) brightnessState;
  VAR(LSD_e_EnvironmentData_CityState, TYPEDEF) cityState;
  VAR(LSD_e_EnvironmentData_TunnelState, TYPEDEF) tunnelState;
  VAR(LSD_e_EnvironmentData_HighwayState, TYPEDEF) highwayState;
  VAR(LSD_e_TrafficStyle, TYPEDEF) trafficStyleState;
  VAR(LSD_e_EnvironmentData_HighReflectorDensityState, TYPEDEF) highReflectorDensityState;
} LSD_EnvironmentData_t;
#endif
#ifndef RTE_TYPE_LSD_LightList_Roi_t
#define RTE_TYPE_LSD_LightList_Roi_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) x1;
  VAR(unsigned short, TYPEDEF) x2;
  VAR(unsigned short, TYPEDEF) y1;
  VAR(unsigned short, TYPEDEF) y2;
} LSD_LightList_Roi_t;
#endif
#ifndef RTE_TYPE_LSD_e_LightList_SegmentationMode
#define RTE_TYPE_LSD_e_LightList_SegmentationMode
typedef VAR(unsigned char, TYPEDEF) LSD_e_LightList_SegmentationMode;
#endif
#ifndef RTE_TYPE_LSD_e_Light_Color
#define RTE_TYPE_LSD_e_Light_Color
typedef VAR(unsigned char, TYPEDEF) LSD_e_Light_Color;
#endif
#ifndef RTE_TYPE_LSD_e_Light_StatusBits
#define RTE_TYPE_LSD_e_Light_StatusBits
typedef VAR(unsigned char, TYPEDEF) LSD_e_Light_StatusBits;
#endif
#ifndef RTE_TYPE_lights
#define RTE_TYPE_lights
typedef struct
{
  VAR(unsigned short, TYPEDEF) x1;
  VAR(unsigned short, TYPEDEF) x2;
  VAR(unsigned short, TYPEDEF) y1;
  VAR(unsigned short, TYPEDEF) y2;
  VAR(unsigned short, TYPEDEF) xMax;
  VAR(unsigned short, TYPEDEF) yMax;
  VAR(unsigned int, TYPEDEF) maxIntensity;
  VAR(unsigned char, TYPEDEF) R;
  VAR(unsigned char, TYPEDEF) G;
  VAR(unsigned char, TYPEDEF) B;
  VAR(LSD_e_Light_Color, TYPEDEF) color;
  VAR(LSD_e_Light_StatusBits, TYPEDEF) statusBits;
} lights;
#endif
#ifndef RTE_TYPE_LSD_LightList_t
#define RTE_TYPE_LSD_LightList_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(unsigned char, TYPEDEF) numLights;
  VAR(unsigned char, TYPEDEF) numLightsIntensitySeg;
  VAR(unsigned char, TYPEDEF) numLightsColorSeg;
  VAR(LSD_LightList_Roi_t, TYPEDEF) roiSegIntensity;
  VAR(LSD_LightList_Roi_t, TYPEDEF) roiSegColor;
  VAR(LSD_e_LightList_SegmentationMode, TYPEDEF) segmentationMode;
  VAR(lights, TYPEDEF) lights[80];
} LSD_LightList_t;
#endif
#ifndef RTE_TYPE_LSD_LightObjectList_Roi_t
#define RTE_TYPE_LSD_LightObjectList_Roi_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) x1;
  VAR(unsigned short, TYPEDEF) x2;
  VAR(unsigned short, TYPEDEF) y1;
  VAR(unsigned short, TYPEDEF) y2;
  VAR(unsigned short, TYPEDEF) ySplit;
  VAR(unsigned short, TYPEDEF) yVehicleSplit;
  VAR(unsigned short, TYPEDEF) xFOE;
  VAR(unsigned short, TYPEDEF) yFOE;
} LSD_LightObjectList_Roi_t;
#endif
#ifndef RTE_TYPE_LSD_LightObject_General_t
#define RTE_TYPE_LSD_LightObject_General_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) lightObjectID;
  VAR(unsigned char, TYPEDEF) lightObjectIDPaired;
  VAR(unsigned char, TYPEDEF) lightID;
  VAR(unsigned short, TYPEDEF) cyclesTraced;
  VAR(unsigned char, TYPEDEF) cyclesLost;
} LSD_LightObject_General_t;
#endif
#ifndef RTE_TYPE_LSD_LightObject_KinematicCamera_t
#define RTE_TYPE_LSD_LightObject_KinematicCamera_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) x;
  VAR(unsigned short, TYPEDEF) y;
  VAR(short, TYPEDEF) deltaX;
  VAR(short, TYPEDEF) deltaY;
  VAR(short, TYPEDEF) deltaXFiltered;
  VAR(short, TYPEDEF) deltaYFiltered;
} LSD_LightObject_KinematicCamera_t;
#endif
#ifndef RTE_TYPE_LSD_LightObject_KinematicWorld_t
#define RTE_TYPE_LSD_LightObject_KinematicWorld_t
typedef struct
{
  VAR(float, TYPEDEF) x;
  VAR(float, TYPEDEF) y;
  VAR(float, TYPEDEF) z;
  VAR(float, TYPEDEF) horizontalAngle;
} LSD_LightObject_KinematicWorld_t;
#endif
#ifndef RTE_TYPE_LSD_LightObject_Kinematic_t
#define RTE_TYPE_LSD_LightObject_Kinematic_t
typedef struct
{
  VAR(float, TYPEDEF) timeToHlaBorder;
  VAR(LSD_LightObject_KinematicCamera_t, TYPEDEF) camera;
  VAR(LSD_LightObject_KinematicWorld_t, TYPEDEF) world;
} LSD_LightObject_Kinematic_t;
#endif
#ifndef RTE_TYPE_LSD_e_LightObject_AttributesStatusBits
#define RTE_TYPE_LSD_e_LightObject_AttributesStatusBits
typedef VAR(unsigned char, TYPEDEF) LSD_e_LightObject_AttributesStatusBits;
#endif
#ifndef RTE_TYPE_LSD_LightObject_Attributes_t
#define RTE_TYPE_LSD_LightObject_Attributes_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) probabilityVehicleOncoming;
  VAR(unsigned char, TYPEDEF) probabilityVehiclePreceding;
  VAR(unsigned char, TYPEDEF) probabilityStreetLamp;
  VAR(unsigned char, TYPEDEF) blinkingConfidence;
  VAR(unsigned int, TYPEDEF) intensity;
  VAR(float, TYPEDEF) luminousFlux;
  VAR(LSD_e_LightObject_AttributesStatusBits, TYPEDEF) statusBits;
} LSD_LightObject_Attributes_t;
#endif
#ifndef RTE_TYPE_LSD_LightObject_t
#define RTE_TYPE_LSD_LightObject_t
typedef struct
{
  VAR(LSD_LightObject_General_t, TYPEDEF) general;
  VAR(LSD_LightObject_Kinematic_t, TYPEDEF) kinematic;
  VAR(LSD_LightObject_Attributes_t, TYPEDEF) attributes;
} LSD_LightObject_t;
#endif
#ifndef RTE_TYPE_lightObjects_array_t
#define RTE_TYPE_lightObjects_array_t
typedef VAR(LSD_LightObject_t, TYPEDEF) lightObjects_array_t[35];
#endif
#ifndef RTE_TYPE_LSD_LightObjectList_t
#define RTE_TYPE_LSD_LightObjectList_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(LSD_LightObjectList_Roi_t, TYPEDEF) roi;
  VAR(unsigned char, TYPEDEF) calibrationConfidence;
  VAR(unsigned int, TYPEDEF) numObjects;
  VAR(lightObjects_array_t, TYPEDEF) lightObjects;
} LSD_LightObjectList_t;
#endif
#ifndef RTE_TYPE_LSD_Light_t
#define RTE_TYPE_LSD_Light_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) x1;
  VAR(unsigned short, TYPEDEF) x2;
  VAR(unsigned short, TYPEDEF) y1;
  VAR(unsigned short, TYPEDEF) y2;
  VAR(unsigned short, TYPEDEF) xMax;
  VAR(unsigned int, TYPEDEF) maxIntensity;
  VAR(unsigned char, TYPEDEF) R;
  VAR(unsigned char, TYPEDEF) G;
  VAR(unsigned char, TYPEDEF) B;
  VAR(LSD_e_Light_Color, TYPEDEF) color;
  VAR(LSD_e_Light_StatusBits, TYPEDEF) statusBits;
} LSD_Light_t;
#endif
#ifndef RTE_TYPE_LSD_Nvm_DefectPixel_t
#define RTE_TYPE_LSD_Nvm_DefectPixel_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) xPos;
  VAR(unsigned short, TYPEDEF) yPos;
  VAR(unsigned char, TYPEDEF) notFoundCounter;
} LSD_Nvm_DefectPixel_t;
#endif
#ifndef RTE_TYPE_LSD_e_Nvm_TrafficStyleLearningState
#define RTE_TYPE_LSD_e_Nvm_TrafficStyleLearningState
typedef VAR(unsigned char, TYPEDEF) LSD_e_Nvm_TrafficStyleLearningState;
#endif
#ifndef RTE_TYPE_t_MarkerColor
#define RTE_TYPE_t_MarkerColor
typedef VAR(unsigned char, TYPEDEF) t_MarkerColor;
#endif
#ifndef RTE_TYPE_t_MarkerType
#define RTE_TYPE_t_MarkerType
typedef VAR(unsigned char, TYPEDEF) t_MarkerType;
#endif
#ifndef RTE_TYPE_t_LaneMarkerInfo
#define RTE_TYPE_t_LaneMarkerInfo
typedef struct
{
  VAR(float, TYPEDEF) f_MarkerDist;
  VAR(t_MarkerColor, TYPEDEF) MarkerColor;
  VAR(t_MarkerType, TYPEDEF) MarkerType;
  VAR(unsigned char, TYPEDEF) u_ExistanceProbability;
} t_LaneMarkerInfo;
#endif
#ifndef RTE_TYPE_LaneMarkerInfo_array_t
#define RTE_TYPE_LaneMarkerInfo_array_t
typedef VAR(t_LaneMarkerInfo, TYPEDEF) LaneMarkerInfo_array_t[4];
#endif
#ifndef RTE_TYPE_LaneMatrix_t
#define RTE_TYPE_LaneMatrix_t
typedef struct
{
  VAR(signed char, TYPEDEF) iNumOfLaneRight;
  VAR(signed char, TYPEDEF) iNumOfLaneLeft;
  VAR(float, TYPEDEF) NoLaneProbLeft;
  VAR(float, TYPEDEF) NoLaneProbRight;
} LaneMatrix_t;
#endif
#ifndef RTE_TYPE_eLaneWidthClass_t
#define RTE_TYPE_eLaneWidthClass_t
typedef VAR(signed char, TYPEDEF) eLaneWidthClass_t;
#endif
#ifndef RTE_TYPE_eLaneWidthSource_t
#define RTE_TYPE_eLaneWidthSource_t
typedef VAR(unsigned char, TYPEDEF) eLaneWidthSource_t;
#endif
#ifndef RTE_TYPE_LaneWidth_t
#define RTE_TYPE_LaneWidth_t
typedef struct
{
  VAR(eLaneWidthClass_t, TYPEDEF) eLaneWidthClass;
  VAR(float, TYPEDEF) fLaneWidth;
  VAR(eLaneWidthSource_t, TYPEDEF) eLaneWidthSource;
} LaneWidth_t;
#endif
#ifndef RTE_TYPE_LastActivationState_t
#define RTE_TYPE_LastActivationState_t
typedef VAR(unsigned char, TYPEDEF) LastActivationState_t;
#endif
#ifndef RTE_TYPE_LastSensitivity_t
#define RTE_TYPE_LastSensitivity_t
typedef VAR(unsigned char, TYPEDEF) LastSensitivity_t;
#endif
#ifndef RTE_TYPE_fAccel_t
#define RTE_TYPE_fAccel_t
typedef VAR(float, TYPEDEF) fAccel_t;
#endif
#ifndef RTE_TYPE_LatAcc_t
#define RTE_TYPE_LatAcc_t
typedef struct
{
  VAR(fAccel_t, TYPEDEF) ZeroAccel;
  VAR(unsigned int, TYPEDEF) CalStatus;
} LatAcc_t;
#endif
#ifndef RTE_TYPE_LatAccel
#define RTE_TYPE_LatAccel
typedef VAR(float, TYPEDEF) LatAccel;
#endif
#ifndef RTE_TYPE_LatAccelVehDyn_t
#define RTE_TYPE_LatAccelVehDyn_t
typedef struct
{
  VAR(float, TYPEDEF) LatAccel;
  VAR(SignalHeader_t, TYPEDEF) LatAccelTimestamp;
  VAR(float, TYPEDEF) Variance;
} LatAccelVehDyn_t;
#endif
#ifndef RTE_TYPE_LatCtrlReqRecSafe2
#define RTE_TYPE_LatCtrlReqRecSafe2
typedef struct
{
  VAR(uint8_t, TYPEDEF) LatCtrlModReq;
  VAR(sint16_t, TYPEDEF) SteerTqReq;
  VAR(uint8_t, TYPEDEF) SteerWhlHptcWarnReq;
  VAR(uint8_t, TYPEDEF) LatCtrlReqSafeChks;
  VAR(uint8_t, TYPEDEF) LatCtrlReqSafeCntr;
} LatCtrlReqRecSafe2;
#endif
#ifndef RTE_TYPE_LatPos
#define RTE_TYPE_LatPos
typedef VAR(float, TYPEDEF) LatPos;
#endif
#ifndef RTE_TYPE_Lateral_control_command_t
#define RTE_TYPE_Lateral_control_command_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(short, TYPEDEF) min_requested_lateral_accel;
  VAR(short, TYPEDEF) max_requested_lateral_accel;
} Lateral_control_command_t;
#endif
#ifndef RTE_TYPE_Lateral_control_response_t
#define RTE_TYPE_Lateral_control_response_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(short, TYPEDEF) lateral_initialization_accel;
} Lateral_control_response_t;
#endif
#ifndef RTE_TYPE_YawRateVehDyn_t
#define RTE_TYPE_YawRateVehDyn_t
typedef struct
{
  VAR(float, TYPEDEF) YawRate;
  VAR(float, TYPEDEF) YawRateRaw;
  VAR(fAngle_t, TYPEDEF) YawAngle;
  VAR(float, TYPEDEF) Variance;
  VAR(float, TYPEDEF) Quality;
} YawRateVehDyn_t;
#endif
#ifndef RTE_TYPE_SideSlipVehDyn_t
#define RTE_TYPE_SideSlipVehDyn_t
typedef struct
{
  VAR(float, TYPEDEF) SideSlipAngle;
  VAR(float, TYPEDEF) Variance;
} SideSlipVehDyn_t;
#endif
#ifndef RTE_TYPE_fQuality_t
#define RTE_TYPE_fQuality_t
typedef VAR(float, TYPEDEF) fQuality_t;
#endif
#ifndef RTE_TYPE_SelfSteerVehDyn_t
#define RTE_TYPE_SelfSteerVehDyn_t
typedef struct
{
  VAR(fAngle_t, TYPEDEF) RoadBankAngle;
  VAR(fQuality_t, TYPEDEF) QuRoadBankAngle;
  VAR(float, TYPEDEF) SelfSteerGradEst;
  VAR(fQuality_t, TYPEDEF) QuSelfSteerGradEst;
} SelfSteerVehDyn_t;
#endif
#ifndef RTE_TYPE_Lateral_t
#define RTE_TYPE_Lateral_t
typedef struct
{
  VAR(YawRateVehDyn_t, TYPEDEF) YawRate;
  VAR(SignalHeader_t, TYPEDEF) YawRateTimestamp;
  VAR(float, TYPEDEF) OffCompStWheelAngle;
  VAR(CurveVehDyn_t, TYPEDEF) Curve;
  VAR(DrvIntCurveVehDyn_t, TYPEDEF) DrvIntCurve;
  VAR(LatAccelVehDyn_t, TYPEDEF) Accel;
  VAR(SideSlipVehDyn_t, TYPEDEF) SlipAngle;
  VAR(SelfSteerVehDyn_t, TYPEDEF) SelfSteering;
} Lateral_t;
#endif
#ifndef RTE_TYPE_LegacyMOT_t
#define RTE_TYPE_LegacyMOT_t
typedef struct
{
  VAR(float, TYPEDEF) YPredictedIntersec;
  VAR(float, TYPEDEF) YPredictedIntersecVar;
  VAR(boolean, TYPEDEF) TraceReachEgoVeh;
  VAR(boolean, TYPEDEF) ValidForLaneMatrix;
} LegacyMOT_t;
#endif
#ifndef RTE_TYPE_LegacyVehDyn_t
#define RTE_TYPE_LegacyVehDyn_t
typedef struct
{
  VAR(float, TYPEDEF) YawRateMaxJitter;
  VAR(boolean, TYPEDEF) bStandStill;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
  VAR(unsigned char, TYPEDEF) reserved3;
} LegacyVehDyn_t;
#endif
#ifndef RTE_TYPE_Length
#define RTE_TYPE_Length
typedef VAR(float, TYPEDEF) Length;
#endif
#ifndef RTE_TYPE_LifeCycles
#define RTE_TYPE_LifeCycles
typedef VAR(AlgoCycleCounter_t, TYPEDEF) LifeCycles;
#endif
#ifndef RTE_TYPE_LimForDecelRec1
#define RTE_TYPE_LimForDecelRec1
typedef struct
{
  VAR(boolean, TYPEDEF) NotExcd;
  VAR(uint8_t, TYPEDEF) Chks;
  VAR(uint8_t, TYPEDEF) Cntr;
} LimForDecelRec1;
#endif
#ifndef RTE_TYPE_LimForJerkPosNotExcdRec1
#define RTE_TYPE_LimForJerkPosNotExcdRec1
typedef struct
{
  VAR(boolean, TYPEDEF) LimForJerkPosNotExcd;
  VAR(uint8_t, TYPEDEF) LimForJerkPosNotExcdChks;
  VAR(uint8_t, TYPEDEF) LimForJerkPosNotExcdCntr;
} LimForJerkPosNotExcdRec1;
#endif
#ifndef RTE_TYPE_ListOfNodAv
#define RTE_TYPE_ListOfNodAv
typedef struct
{
  VAR(unsigned int, TYPEDEF) ListOfNodAv1;
  VAR(unsigned int, TYPEDEF) ListOfNodAv2;
  VAR(unsigned int, TYPEDEF) ListOfNodAv3;
  VAR(unsigned int, TYPEDEF) ListOfNodAv4;
  VAR(unsigned int, TYPEDEF) ListOfNodAv5;
  VAR(unsigned int, TYPEDEF) ListOfNodAv6;
  VAR(unsigned int, TYPEDEF) ListOfNodAv7;
  VAR(unsigned int, TYPEDEF) ListOfNodAv8;
} ListOfNodAv;
#endif
#ifndef RTE_TYPE_highres_distance_t
#define RTE_TYPE_highres_distance_t
typedef VAR(short, TYPEDEF) highres_distance_t;
#endif
#ifndef RTE_TYPE_torque_t
#define RTE_TYPE_torque_t
typedef VAR(short, TYPEDEF) torque_t;
#endif
#ifndef RTE_TYPE_throttle_position_t
#define RTE_TYPE_throttle_position_t
typedef VAR(unsigned char, TYPEDEF) throttle_position_t;
#endif
#ifndef RTE_TYPE_Tcu_Gear_State_t
#define RTE_TYPE_Tcu_Gear_State_t
typedef VAR(unsigned char, TYPEDEF) Tcu_Gear_State_t;
#endif
#ifndef RTE_TYPE_lodmc_req_response_t
#define RTE_TYPE_lodmc_req_response_t
typedef VAR(unsigned char, TYPEDEF) lodmc_req_response_t;
#endif
#ifndef RTE_TYPE_TransmissionGear_t
#define RTE_TYPE_TransmissionGear_t
typedef VAR(unsigned char, TYPEDEF) TransmissionGear_t;
#endif
#ifndef RTE_TYPE_bus_validity_t
#define RTE_TYPE_bus_validity_t
typedef struct
{
  VAR(boolean, TYPEDEF) CUR_GEAR_VALIDITY;
  VAR(boolean, TYPEDEF) VEH_ENG_TRQ_VALIDITY;
  VAR(boolean, TYPEDEF) PARKING_BRK_OPEN_VALIDITY;
  VAR(boolean, TYPEDEF) GEAR_SELECTOR_POS_VALIDITY;
  VAR(boolean, TYPEDEF) THROTTLE_POS_VALIDITY;
  VAR(boolean, TYPEDEF) VEH_BRK_TRQ_VALIDITY;
  VAR(boolean, TYPEDEF) ENG_TRQ_MIN_VALIDITY;
  VAR(boolean, TYPEDEF) ENG_TRQ_MAX_VALIDITY;
  VAR(boolean, TYPEDEF) DRIVER_BRAKING_VALIDITY;
  VAR(boolean, TYPEDEF) VEH_ACCEL_SEN_VALIDITY;
  VAR(boolean, TYPEDEF) TCU_GEAR_STATE_VALIDITY;
  VAR(unsigned char, TYPEDEF) reserved1;
} bus_validity_t;
#endif
#ifndef RTE_TYPE_Lodmc_input_t
#define RTE_TYPE_Lodmc_input_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(acceleration_t, TYPEDEF) VEH_ACCEL;
  VAR(velocity_t, TYPEDEF) VEH_VELO;
  VAR(unsigned short, TYPEDEF) CUR_GEAR_RATIO;
  VAR(highres_distance_t, TYPEDEF) TIRE_RADIUS;
  VAR(unsigned short, TYPEDEF) VEH_MASS;
  VAR(torque_t, TYPEDEF) VEH_ENG_TRQ;
  VAR(boolean, TYPEDEF) PARKING_BRK_OPEN;
  VAR(ActGearPos_t, TYPEDEF) GEAR_SELECTOR_POS;
  VAR(boolean, TYPEDEF) EGO_STANDSTILL;
  VAR(throttle_position_t, TYPEDEF) THROTTLE_POS;
  VAR(torque_t, TYPEDEF) VEH_BRK_TRQ;
  VAR(torque_t, TYPEDEF) ENG_TRQ_MIN;
  VAR(torque_t, TYPEDEF) ENG_TRQ_MAX;
  VAR(acceleration_t, TYPEDEF) VEH_ACCEL_SEN;
  VAR(CONTROL_REQUEST_array_t, TYPEDEF) CONTROL_REQUEST;
  VAR(boolean, TYPEDEF) DRIVER_BRAKING;
  VAR(Tcu_Gear_State_t, TYPEDEF) TCU_GEAR_STATE;
  VAR(DriveMode_t_e, TYPEDEF) DRIVE_MODE;
  VAR(lodmc_req_response_t, TYPEDEF) EBS_REQ_RESPONSE;
  VAR(boolean, TYPEDEF) EMS_OVERRIDE_DETECTED;
  VAR(lodmc_req_response_t, TYPEDEF) EMS_REQ_RESPONSE;
  VAR(ALGO_OP_MODE_t, TYPEDEF) ALGO_OP_MODE;
  VAR(TransmissionGear_t, TYPEDEF) CUR_GEAR;
  VAR(bus_validity_t, TYPEDEF) BUS_VALIDITY;
} Lodmc_input_t;
#endif
#ifndef RTE_TYPE_lodmc_op_state_t
#define RTE_TYPE_lodmc_op_state_t
typedef VAR(unsigned char, TYPEDEF) lodmc_op_state_t;
#endif
#ifndef RTE_TYPE_Lodmc_output_t
#define RTE_TYPE_Lodmc_output_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(lodmc_op_state_t, TYPEDEF) STATE;
  VAR(a_reserve_array_t, TYPEDEF) u_arrayreserved1;
  VAR(torque_t, TYPEDEF) ENG_TRQ_REQ;
  VAR(boolean, TYPEDEF) ENG_REQ_ACTIVE;
  VAR(boolean, TYPEDEF) BRK_REQ_ACTIVE;
  VAR(boolean, TYPEDEF) SSM_GO_REQ;
  VAR(boolean, TYPEDEF) SSM_HOLD_REQ;
  VAR(boolean, TYPEDEF) DRIVER_OVERRIDE_ACCEL_PEDAL;
  VAR(boolean, TYPEDEF) DRIVER_OVERRIDE_DECEL_PEDAL;
  VAR(acceleration_t, TYPEDEF) BRK_ACCEL_REQ;
  VAR(Degradation_Status_t, TYPEDEF) DEGRADATION_STATUS;
  VAR(unsigned char, TYPEDEF) u_reserved2;
  VAR(float, TYPEDEF) fCycleTime;
} Lodmc_output_t;
#endif
#ifndef RTE_TYPE_LongAccel
#define RTE_TYPE_LongAccel
typedef VAR(float, TYPEDEF) LongAccel;
#endif
#ifndef RTE_TYPE_LongCtrlInputCustom_t
#define RTE_TYPE_LongCtrlInputCustom_t
typedef struct
{
  VAR(CustomInput_t, TYPEDEF) CustomInput;
} LongCtrlInputCustom_t;
#endif
#ifndef RTE_TYPE_TSA_Input_t
#define RTE_TYPE_TSA_Input_t
typedef struct
{
  VAR(SpeedUnitEnum_t, TYPEDEF) e_TSA_SpeedUnit;
} TSA_Input_t;
#endif
#ifndef RTE_TYPE_t_e_SLA_Setting
#define RTE_TYPE_t_e_SLA_Setting
typedef VAR(unsigned char, TYPEDEF) t_e_SLA_Setting;
#endif
#ifndef RTE_TYPE_SLA_Input_t
#define RTE_TYPE_SLA_Input_t
typedef struct
{
  VAR(t_e_SLA_Setting, TYPEDEF) e_SLA_Setting;
  VAR(signed char, TYPEDEF) s_SLA_SpeedOffset;
} SLA_Input_t;
#endif
#ifndef RTE_TYPE_t_NavStreetType
#define RTE_TYPE_t_NavStreetType
typedef VAR(unsigned char, TYPEDEF) t_NavStreetType;
#endif
#ifndef RTE_TYPE_Navi_Output_t
#define RTE_TYPE_Navi_Output_t
typedef struct
{
  VAR(t_NavStreetType, TYPEDEF) e_NavStreetType;
} Navi_Output_t;
#endif
#ifndef RTE_TYPE_LongCtrlInput_t
#define RTE_TYPE_LongCtrlInput_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(KinCtrlDynInput_t, TYPEDEF) KinCtrlDynInput;
  VAR(KinDisplayInput_t, TYPEDEF) DisplayOutput;
  VAR(TSA_Input_t, TYPEDEF) TSA_Input;
  VAR(SLA_Input_t, TYPEDEF) SLA_Input;
  VAR(Navi_Output_t, TYPEDEF) Navi_Input;
  VAR(LongCtrlInputCustom_t, TYPEDEF) Custom;
} LongCtrlInput_t;
#endif
#ifndef RTE_TYPE_LongCtrlOutputCustom_t
#define RTE_TYPE_LongCtrlOutputCustom_t
typedef struct
{
  VAR(CustomOutput_t, TYPEDEF) CustomOutput;
} LongCtrlOutputCustom_t;
#endif
#ifndef RTE_TYPE_SLA_MsgDisp_t
#define RTE_TYPE_SLA_MsgDisp_t
typedef VAR(unsigned char, TYPEDEF) SLA_MsgDisp_t;
#endif
#ifndef RTE_TYPE_SLA_TkOvr_State_t
#define RTE_TYPE_SLA_TkOvr_State_t
typedef VAR(unsigned char, TYPEDEF) SLA_TkOvr_State_t;
#endif
#ifndef RTE_TYPE_SlaOutput_t
#define RTE_TYPE_SlaOutput_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) SLA_SpdLimit;
  VAR(unsigned char, TYPEDEF) SLA_SpdLimit_Available;
  VAR(signed char, TYPEDEF) SLA_SpdLimit_Offset;
  VAR(SLA_MsgDisp_t, TYPEDEF) SLA_MsgDisp;
  VAR(SLA_TkOvr_State_t, TYPEDEF) SLA_TkOvr_State;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
} SlaOutput_t;
#endif
#ifndef RTE_TYPE_LongCtrlOutput_t
#define RTE_TYPE_LongCtrlOutput_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(KinOutput_t, TYPEDEF) KinOutput;
  VAR(KinDriverOutput_t, TYPEDEF) DriverData;
  VAR(KinFctInfo_t, TYPEDEF) KinFctInfo;
  VAR(SlaOutput_t, TYPEDEF) SlaOutput;
  VAR(LongCtrlOutputCustom_t, TYPEDEF) Custom;
  VAR(CustomLongCtrlOutput_t, TYPEDEF) CustomLongOutput;
} LongCtrlOutput_t;
#endif
#ifndef RTE_TYPE_LongDirState_t
#define RTE_TYPE_LongDirState_t
typedef VAR(unsigned char, TYPEDEF) LongDirState_t;
#endif
#ifndef RTE_TYPE_LongPos
#define RTE_TYPE_LongPos
typedef VAR(float, TYPEDEF) LongPos;
#endif
#ifndef RTE_TYPE_LongPosToCoG
#define RTE_TYPE_LongPosToCoG
typedef VAR(float, TYPEDEF) LongPosToCoG;
#endif
#ifndef RTE_TYPE_MotVarVehDyn_t
#define RTE_TYPE_MotVarVehDyn_t
typedef struct
{
  VAR(float, TYPEDEF) Velocity;
  VAR(SignalHeader_t, TYPEDEF) VelocityTimestamp;
  VAR(float, TYPEDEF) VelocityRaw;
  VAR(float, TYPEDEF) Accel;
  VAR(SignalHeader_t, TYPEDEF) AccelTimestamp;
  VAR(float, TYPEDEF) varVelocity;
  VAR(float, TYPEDEF) varAccel;
} MotVarVehDyn_t;
#endif
#ifndef RTE_TYPE_corrQual_t
#define RTE_TYPE_corrQual_t
typedef VAR(unsigned char, TYPEDEF) corrQual_t;
#endif
#ifndef RTE_TYPE_VeloCorrVehDyn_t
#define RTE_TYPE_VeloCorrVehDyn_t
typedef struct
{
  VAR(float, TYPEDEF) corrFact;
  VAR(float, TYPEDEF) corrVar;
  VAR(float, TYPEDEF) corrVelo;
  VAR(float, TYPEDEF) corrVeloVar;
  VAR(float, TYPEDEF) minVelo;
  VAR(float, TYPEDEF) maxVelo;
  VAR(corrQual_t, TYPEDEF) corrQual;
  VAR(boolean, TYPEDEF) bRollerTestBench;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
} VeloCorrVehDyn_t;
#endif
#ifndef RTE_TYPE_VelocityCorrectionQuality_t
#define RTE_TYPE_VelocityCorrectionQuality_t
typedef VAR(unsigned char, TYPEDEF) VelocityCorrectionQuality_t;
#endif
#ifndef RTE_TYPE_Longitudinal_t
#define RTE_TYPE_Longitudinal_t
typedef struct
{
  VAR(float, TYPEDEF) Velocity;
  VAR(float, TYPEDEF) Accel;
  VAR(float, TYPEDEF) varVelocity;
  VAR(float, TYPEDEF) varAccel;
  VAR(MotVarVehDyn_t, TYPEDEF) MotVar;
  VAR(VeloCorrVehDyn_t, TYPEDEF) VeloCorr;
  VAR(AccelCorrVehDyn_t, TYPEDEF) AccelCorr;
  VAR(VelocityCorrectionQuality_t, TYPEDEF) VelocityCorrectionQuality;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
  VAR(unsigned char, TYPEDEF) reserved3;
} Longitudinal_t;
#endif
#ifndef RTE_TYPE_LowBeam_Ang
#define RTE_TYPE_LowBeam_Ang
typedef VAR(float, TYPEDEF) LowBeam_Ang;
#endif
#ifndef RTE_TYPE_LowBeam_Dist
#define RTE_TYPE_LowBeam_Dist
typedef VAR(float, TYPEDEF) LowBeam_Dist;
#endif
#ifndef RTE_TYPE_LowBeam_Status
#define RTE_TYPE_LowBeam_Status
typedef VAR(float, TYPEDEF) LowBeam_Status;
#endif
#ifndef RTE_TYPE_MAPProvider_t
#define RTE_TYPE_MAPProvider_t
typedef VAR(unsigned char, TYPEDEF) MAPProvider_t;
#endif
#ifndef RTE_TYPE_ME_in_t
#define RTE_TYPE_ME_in_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
} ME_in_t;
#endif
#ifndef RTE_TYPE_ME_out_t
#define RTE_TYPE_ME_out_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
} ME_out_t;
#endif
#ifndef RTE_TYPE_MTS_VirtAddrs
#define RTE_TYPE_MTS_VirtAddrs
typedef VAR(unsigned int, TYPEDEF) MTS_VirtAddrs;
#endif
#ifndef RTE_TYPE_MapProvider_t
#define RTE_TYPE_MapProvider_t
typedef VAR(unsigned char, TYPEDEF) MapProvider_t;
#endif
#ifndef RTE_TYPE_MapRteInputAv2Type_t
#define RTE_TYPE_MapRteInputAv2Type_t
typedef VAR(unsigned char, TYPEDEF) MapRteInputAv2Type_t;
#endif
#ifndef RTE_TYPE_MapRteInputAv2Position_t
#define RTE_TYPE_MapRteInputAv2Position_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) CyclicCounterPos;
  VAR(unsigned char, TYPEDEF) PathIndexPos;
  VAR(unsigned short, TYPEDEF) OffsetPos;
  VAR(unsigned char, TYPEDEF) PositionIndex;
  VAR(unsigned int, TYPEDEF) PositionAge;
  VAR(float, TYPEDEF) Speed;
  VAR(float, TYPEDEF) RelativeHeading;
  VAR(float, TYPEDEF) PositionProbability;
  VAR(float, TYPEDEF) PositionConfidence;
  VAR(float, TYPEDEF) CurrentLane;
} MapRteInputAv2Position_t;
#endif
#ifndef RTE_TYPE_MapRteInputAv2Segment_t
#define RTE_TYPE_MapRteInputAv2Segment_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) CyclicCounterSeg;
  VAR(boolean, TYPEDEF) RetransmissionSeg;
  VAR(unsigned char, TYPEDEF) PathIndexSeg;
  VAR(unsigned short, TYPEDEF) OffsetSeg;
  VAR(boolean, TYPEDEF) UpdateSeg;
  VAR(unsigned char, TYPEDEF) FunctionalRoadClassSeg;
  VAR(unsigned char, TYPEDEF) FormOfWaySeg;
  VAR(unsigned char, TYPEDEF) EffectiveSpeedLimit;
  VAR(unsigned char, TYPEDEF) EffectiveSpeedLimitType;
  VAR(unsigned char, TYPEDEF) NumberLanesDrvDirSeg;
  VAR(unsigned char, TYPEDEF) NumberLanesOpDirSeg;
  VAR(unsigned char, TYPEDEF) Tunnel;
  VAR(unsigned char, TYPEDEF) Bridge;
  VAR(unsigned char, TYPEDEF) DevidedRoad;
  VAR(unsigned char, TYPEDEF) BuiltUpArea;
  VAR(unsigned char, TYPEDEF) ComplexIntersectionSeg;
  VAR(float, TYPEDEF) RelativeProbabilitySeg;
  VAR(unsigned char, TYPEDEF) PartOfCalculatedRouteSeg;
} MapRteInputAv2Segment_t;
#endif
#ifndef RTE_TYPE_MapRteInputAv2Stub_t
#define RTE_TYPE_MapRteInputAv2Stub_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) CyclicCounterStub;
  VAR(unsigned char, TYPEDEF) RetransmissionStub;
  VAR(unsigned char, TYPEDEF) PathIndexStub;
  VAR(unsigned short, TYPEDEF) OffsetStub;
  VAR(unsigned char, TYPEDEF) UpdateStub;
  VAR(unsigned char, TYPEDEF) SubPathIndex;
  VAR(float, TYPEDEF) TurnAngle;
  VAR(float, TYPEDEF) RelativeProbabilityStub;
  VAR(unsigned char, TYPEDEF) FormOfWayStub;
  VAR(unsigned char, TYPEDEF) NumberLanesDrvDirStub;
  VAR(unsigned char, TYPEDEF) NumberLanesOpDirStub;
  VAR(unsigned char, TYPEDEF) ComplexIntersectionStub;
  VAR(unsigned char, TYPEDEF) RightOfWay;
  VAR(unsigned char, TYPEDEF) FunctionalRoadClassStub;
  VAR(unsigned char, TYPEDEF) PartOfCalculatedRouteStub;
  VAR(unsigned char, TYPEDEF) LastStubAtOffset;
} MapRteInputAv2Stub_t;
#endif
#ifndef RTE_TYPE_MapRteInputAv2ProfileShort_t
#define RTE_TYPE_MapRteInputAv2ProfileShort_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) CyclicCounterPS;
  VAR(unsigned char, TYPEDEF) RetransmissionPS;
  VAR(unsigned char, TYPEDEF) PathIndexPS;
  VAR(unsigned short, TYPEDEF) OffsetPS;
  VAR(unsigned char, TYPEDEF) UpdatePS;
  VAR(unsigned char, TYPEDEF) ProfileTypePS;
  VAR(unsigned char, TYPEDEF) ControlPoint;
  VAR(unsigned short, TYPEDEF) Value0;
  VAR(unsigned short, TYPEDEF) Distance1;
  VAR(unsigned short, TYPEDEF) Value1;
  VAR(unsigned char, TYPEDEF) Accuracy;
} MapRteInputAv2ProfileShort_t;
#endif
#ifndef RTE_TYPE_MapRteInputAv2ProfileLong_t
#define RTE_TYPE_MapRteInputAv2ProfileLong_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) CyclicCounterPL;
  VAR(unsigned char, TYPEDEF) RetransmissionPL;
  VAR(unsigned char, TYPEDEF) PathIndexPL;
  VAR(unsigned short, TYPEDEF) OffsetPL;
  VAR(unsigned char, TYPEDEF) UpdatePL;
  VAR(unsigned char, TYPEDEF) ProfileTypePL;
  VAR(unsigned char, TYPEDEF) ControlPoint;
  VAR(unsigned int, TYPEDEF) Value;
} MapRteInputAv2ProfileLong_t;
#endif
#ifndef RTE_TYPE_MapRteInputAv2Meta_t
#define RTE_TYPE_MapRteInputAv2Meta_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) CyclicCounterMD;
  VAR(unsigned short, TYPEDEF) CountryCode;
  VAR(unsigned short, TYPEDEF) RegionCode;
  VAR(unsigned char, TYPEDEF) DrivingSide;
  VAR(unsigned char, TYPEDEF) SpeedUnits;
  VAR(unsigned char, TYPEDEF) MajorProtocolVersion;
  VAR(unsigned char, TYPEDEF) MinorProtocolVersion;
  VAR(unsigned char, TYPEDEF) MinorProtocolSubVersion;
  VAR(unsigned short, TYPEDEF) HWVersion;
  VAR(unsigned char, TYPEDEF) MapProvider;
  VAR(unsigned char, TYPEDEF) MapVersion;
} MapRteInputAv2Meta_t;
#endif
#ifndef RTE_TYPE_MapRteCanMsg_t
#define RTE_TYPE_MapRteCanMsg_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiTimestamp;
  VAR(MapRteInputAv2Type_t, TYPEDEF) type;
  VAR(MapRteInputAv2Position_t, TYPEDEF) position;
  VAR(MapRteInputAv2Segment_t, TYPEDEF) segment;
  VAR(MapRteInputAv2Stub_t, TYPEDEF) stub;
  VAR(MapRteInputAv2ProfileShort_t, TYPEDEF) profileShort;
  VAR(MapRteInputAv2ProfileLong_t, TYPEDEF) profileLong;
  VAR(MapRteInputAv2Meta_t, TYPEDEF) meta;
} MapRteCanMsg_t;
#endif
#ifndef RTE_TYPE_MapRteContextChangeType_t
#define RTE_TYPE_MapRteContextChangeType_t
typedef VAR(unsigned char, TYPEDEF) MapRteContextChangeType_t;
#endif
#ifndef RTE_TYPE_MapRteFormOfWay_t
#define RTE_TYPE_MapRteFormOfWay_t
typedef VAR(unsigned char, TYPEDEF) MapRteFormOfWay_t;
#endif
#ifndef RTE_TYPE_MapRteFuncState_t
#define RTE_TYPE_MapRteFuncState_t
typedef VAR(unsigned char, TYPEDEF) MapRteFuncState_t;
#endif
#ifndef RTE_TYPE_MapRteFunctionalRoadClass_t
#define RTE_TYPE_MapRteFunctionalRoadClass_t
typedef VAR(unsigned char, TYPEDEF) MapRteFunctionalRoadClass_t;
#endif
#ifndef RTE_TYPE_MapRteNumLanesDrivingDir_t
#define RTE_TYPE_MapRteNumLanesDrivingDir_t
typedef VAR(unsigned char, TYPEDEF) MapRteNumLanesDrivingDir_t;
#endif
#ifndef RTE_TYPE_MapRteNumLanesOppositeDir_t
#define RTE_TYPE_MapRteNumLanesOppositeDir_t
typedef VAR(unsigned char, TYPEDEF) MapRteNumLanesOppositeDir_t;
#endif
#ifndef RTE_TYPE_MapRteOutputBuildUpArea_t
#define RTE_TYPE_MapRteOutputBuildUpArea_t
typedef VAR(unsigned char, TYPEDEF) MapRteOutputBuildUpArea_t;
#endif
#ifndef RTE_TYPE_MapRteOutputLocationType_t
#define RTE_TYPE_MapRteOutputLocationType_t
typedef VAR(unsigned char, TYPEDEF) MapRteOutputLocationType_t;
#endif
#ifndef RTE_TYPE_MapRteOutputRoadChange_t
#define RTE_TYPE_MapRteOutputRoadChange_t
typedef VAR(unsigned char, TYPEDEF) MapRteOutputRoadChange_t;
#endif
#ifndef RTE_TYPE_MapRteSpeedUnit_t
#define RTE_TYPE_MapRteSpeedUnit_t
typedef VAR(unsigned char, TYPEDEF) MapRteSpeedUnit_t;
#endif
#ifndef RTE_TYPE_MapRteSpeedLimitSignType_t
#define RTE_TYPE_MapRteSpeedLimitSignType_t
typedef VAR(unsigned char, TYPEDEF) MapRteSpeedLimitSignType_t;
#endif
#ifndef RTE_TYPE_MapRteSpeedLimitValidity_t
#define RTE_TYPE_MapRteSpeedLimitValidity_t
typedef VAR(unsigned char, TYPEDEF) MapRteSpeedLimitValidity_t;
#endif
#ifndef RTE_TYPE_MapRteSpeedLimitSide_t
#define RTE_TYPE_MapRteSpeedLimitSide_t
typedef VAR(unsigned char, TYPEDEF) MapRteSpeedLimitSide_t;
#endif
#ifndef RTE_TYPE_MapRteOutputSpeedLimit_t
#define RTE_TYPE_MapRteOutputSpeedLimit_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) value;
  VAR(MapRteSpeedUnit_t, TYPEDEF) unit;
  VAR(MapRteSpeedLimitSignType_t, TYPEDEF) type;
  VAR(MapRteSpeedLimitValidity_t, TYPEDEF) validity;
  VAR(MapRteSpeedLimitSide_t, TYPEDEF) side;
} MapRteOutputSpeedLimit_t;
#endif
#ifndef RTE_TYPE_MapRteOutputTrafficStyle_T
#define RTE_TYPE_MapRteOutputTrafficStyle_T
typedef VAR(unsigned char, TYPEDEF) MapRteOutputTrafficStyle_T;
#endif
#ifndef RTE_TYPE_MapRteOutputVarSignPosition_t
#define RTE_TYPE_MapRteOutputVarSignPosition_t
typedef VAR(unsigned short, TYPEDEF) MapRteOutputVarSignPosition_t;
#endif
#ifndef RTE_TYPE_MapRtePathData_t
#define RTE_TYPE_MapRtePathData_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) pathID;
  VAR(unsigned char, TYPEDEF) parentPathID;
  VAR(unsigned short, TYPEDEF) relativeAngle;
  VAR(unsigned char, TYPEDEF) relativeProbability;
} MapRtePathData_t;
#endif
#ifndef RTE_TYPE_MapRteRouteNumberType_t
#define RTE_TYPE_MapRteRouteNumberType_t
typedef VAR(unsigned char, TYPEDEF) MapRteRouteNumberType_t;
#endif
#ifndef RTE_TYPE_MapRteSegmentData_t
#define RTE_TYPE_MapRteSegmentData_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) pathID;
  VAR(MapRteFunctionalRoadClass_t, TYPEDEF) frc;
  VAR(unsigned short, TYPEDEF) offset;
  VAR(unsigned short, TYPEDEF) length;
  VAR(MapRteFormOfWay_t, TYPEDEF) formOfWay;
  VAR(MapRteOutputSpeedLimit_t, TYPEDEF) speedLimit;
  VAR(float, TYPEDEF) curvature;
  VAR(float, TYPEDEF) slope;
  VAR(MapRteRouteNumberType_t, TYPEDEF) routeNumberType;
  VAR(boolean, TYPEDEF) tunnel;
  VAR(boolean, TYPEDEF) bridge;
  VAR(boolean, TYPEDEF) buildUpArea;
  VAR(boolean, TYPEDEF) physicalSeperation;
  VAR(MapRteNumLanesDrivingDir_t, TYPEDEF) lanesDrivingDir;
  VAR(MapRteNumLanesOppositeDir_t, TYPEDEF) lanesOppositeDir;
  VAR(boolean, TYPEDEF) relativeProbability;
} MapRteSegmentData_t;
#endif
#ifndef RTE_TYPE_MaxNumGlarefreeArea
#define RTE_TYPE_MaxNumGlarefreeArea
typedef VAR(unsigned short, TYPEDEF) MaxNumGlarefreeArea;
#endif
#ifndef RTE_TYPE_MinLight_Ang
#define RTE_TYPE_MinLight_Ang
typedef VAR(float, TYPEDEF) MinLight_Ang;
#endif
#ifndef RTE_TYPE_MinLight_Dist
#define RTE_TYPE_MinLight_Dist
typedef VAR(float, TYPEDEF) MinLight_Dist;
#endif
#ifndef RTE_TYPE_MinLight_DistState
#define RTE_TYPE_MinLight_DistState
typedef VAR(RTE_HLAF_DistState, TYPEDEF) MinLight_DistState;
#endif
#ifndef RTE_TYPE_MinLight_ObjId
#define RTE_TYPE_MinLight_ObjId
typedef VAR(unsigned char, TYPEDEF) MinLight_ObjId;
#endif
#ifndef RTE_TYPE_MinLight_Status
#define RTE_TYPE_MinLight_Status
typedef VAR(RTE_HLAF_ObjStatus, TYPEDEF) MinLight_Status;
#endif
#ifndef RTE_TYPE_MonoCalibrationFreeFOV_t
#define RTE_TYPE_MonoCalibrationFreeFOV_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) uiX;
  VAR(unsigned short, TYPEDEF) uiY;
  VAR(unsigned short, TYPEDEF) uiWidth;
  VAR(unsigned short, TYPEDEF) uiHeight;
} MonoCalibrationFreeFOV_t;
#endif
#ifndef RTE_TYPE_fDistortionCoefficients_array_t
#define RTE_TYPE_fDistortionCoefficients_array_t
typedef VAR(float, TYPEDEF) fDistortionCoefficients_array_t[10];
#endif
#ifndef RTE_TYPE_fRectificationCoefficients_array_t
#define RTE_TYPE_fRectificationCoefficients_array_t
typedef VAR(float, TYPEDEF) fRectificationCoefficients_array_t[2];
#endif
#ifndef RTE_TYPE_MonoCalibrationIntrinsic_t
#define RTE_TYPE_MonoCalibrationIntrinsic_t
typedef struct
{
  VAR(float, TYPEDEF) fFocalX;
  VAR(float, TYPEDEF) fFocalY;
  VAR(float, TYPEDEF) fCenterX;
  VAR(float, TYPEDEF) fCenterY;
  VAR(fDistortionCoefficients_array_t, TYPEDEF) fDistortionCoefficients;
  VAR(fRectificationCoefficients_array_t, TYPEDEF) fRectificationCoefficients;
} MonoCalibrationIntrinsic_t;
#endif
#ifndef RTE_TYPE_MonoCalibrationROISize_t
#define RTE_TYPE_MonoCalibrationROISize_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) uiWidth;
  VAR(unsigned short, TYPEDEF) uiHeight;
} MonoCalibrationROISize_t;
#endif
#ifndef RTE_TYPE_eMonoCalibrationSide_t
#define RTE_TYPE_eMonoCalibrationSide_t
typedef VAR(unsigned char, TYPEDEF) eMonoCalibrationSide_t;
#endif
#ifndef RTE_TYPE_eMonoCalibrationCameraType_t
#define RTE_TYPE_eMonoCalibrationCameraType_t
typedef VAR(unsigned char, TYPEDEF) eMonoCalibrationCameraType_t;
#endif
#ifndef RTE_TYPE_eMonoCalibrationSource_t
#define RTE_TYPE_eMonoCalibrationSource_t
typedef VAR(unsigned char, TYPEDEF) eMonoCalibrationSource_t;
#endif
#ifndef RTE_TYPE_MonoCalibration_t
#define RTE_TYPE_MonoCalibration_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(ParameterID_t, TYPEDEF) uiParameterId;
  VAR(eMonoCalibrationSide_t, TYPEDEF) eSide;
  VAR(eMonoCalibrationCameraType_t, TYPEDEF) eCameraType;
  VAR(eMonoCalibrationSource_t, TYPEDEF) eSource;
  VAR(MonoCalibrationIntrinsic_t, TYPEDEF) sIntrinsic;
  VAR(PoseParameters_t, TYPEDEF) sPoseCalibration;
  VAR(PoseParameters_t, TYPEDEF) sPoseDynamic;
  VAR(MonoCalibrationROISize_t, TYPEDEF) sRoiSize;
  VAR(MonoCalibrationFreeFOV_t, TYPEDEF) sFreeFOV;
} MonoCalibration_t;
#endif
#ifndef RTE_TYPE_MotState_t
#define RTE_TYPE_MotState_t
typedef VAR(unsigned char, TYPEDEF) MotState_t;
#endif
#ifndef RTE_TYPE_MotState
#define RTE_TYPE_MotState
typedef VAR(MotState_t, TYPEDEF) MotState;
#endif
#ifndef RTE_TYPE_MotionStateVehDyn_t
#define RTE_TYPE_MotionStateVehDyn_t
typedef struct
{
  VAR(float, TYPEDEF) Confidence;
  VAR(MotState_t, TYPEDEF) MotState;
  VAR(boolean, TYPEDEF) bRollerTestBench;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
} MotionStateVehDyn_t;
#endif
#ifndef RTE_TYPE_RTE_HLAF_MotorwayState
#define RTE_TYPE_RTE_HLAF_MotorwayState
typedef VAR(unsigned char, TYPEDEF) RTE_HLAF_MotorwayState;
#endif
#ifndef RTE_TYPE_MotorwayState
#define RTE_TYPE_MotorwayState
typedef VAR(RTE_HLAF_MotorwayState, TYPEDEF) MotorwayState;
#endif
#ifndef RTE_TYPE_fTracePointX_array_t
#define RTE_TYPE_fTracePointX_array_t
typedef VAR(float, TYPEDEF) fTracePointX_array_t[25];
#endif
#ifndef RTE_TYPE_fTracePointY_array_t
#define RTE_TYPE_fTracePointY_array_t
typedef VAR(float, TYPEDEF) fTracePointY_array_t[25];
#endif
#ifndef RTE_TYPE_fTracePointYStdDev_array_t
#define RTE_TYPE_fTracePointYStdDev_array_t
typedef VAR(float, TYPEDEF) fTracePointYStdDev_array_t[25];
#endif
#ifndef RTE_TYPE_ObjectTrace_t
#define RTE_TYPE_ObjectTrace_t
typedef struct
{
  VAR(signed char, TYPEDEF) iNumberOfPoints;
  VAR(unsigned char, TYPEDEF) uiReferenceToObject;
  VAR(unsigned char, TYPEDEF) uiReferenceToFCTObject;
  VAR(float, TYPEDEF) fYIntersection;
  VAR(float, TYPEDEF) fYIntersectionGradFilt;
  VAR(fTracePointX_array_t, TYPEDEF) fTracePointX;
  VAR(fTracePointY_array_t, TYPEDEF) fTracePointY;
  VAR(fTracePointYStdDev_array_t, TYPEDEF) fTracePointYStdDev;
  VAR(LegacyMOT_t, TYPEDEF) Legacy;
} ObjectTrace_t;
#endif
#ifndef RTE_TYPE_ObjectTrace_array_t
#define RTE_TYPE_ObjectTrace_array_t
typedef VAR(ObjectTrace_t, TYPEDEF) ObjectTrace_array_t[10];
#endif
#ifndef RTE_TYPE_MovingObjectTraces_t
#define RTE_TYPE_MovingObjectTraces_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(ObjectTrace_array_t, TYPEDEF) ObjectTrace;
} MovingObjectTraces_t;
#endif
#ifndef RTE_TYPE_N1
#define RTE_TYPE_N1
typedef VAR(unsigned short, TYPEDEF) N1;
#endif
#ifndef RTE_TYPE_NVM_LcfLearningData_t
#define RTE_TYPE_NVM_LcfLearningData_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(AdpCorrFactorPos_nu_array_t, TYPEDEF) AdpCorrFactorPos_nu;
  VAR(AdpCorrCounterPos_nu_array_t, TYPEDEF) AdpCorrCounterPos_nu;
  VAR(AdpCorrFactorNeg_nu_array_t, TYPEDEF) AdpCorrFactorNeg_nu;
  VAR(AdpCorrCounterNeg_nu_array_t, TYPEDEF) AdpCorrCounterNeg_nu;
  VAR(short, TYPEDEF) AngleOff_nu;
  VAR(unsigned short, TYPEDEF) AngleOffCalibCnt_nu;
} NVM_LcfLearningData_t;
#endif
#ifndef RTE_TYPE_NormSptPen
#define RTE_TYPE_NormSptPen
typedef struct
{
  VAR(boolean, TYPEDEF) NormSpt;
  VAR(uint8_t, TYPEDEF) Pen;
} NormSptPen;
#endif
#ifndef RTE_TYPE_TsaRteSignClassId_t
#define RTE_TYPE_TsaRteSignClassId_t
typedef VAR(unsigned int, TYPEDEF) TsaRteSignClassId_t;
#endif
#ifndef RTE_TYPE_TsaRteSignDecisionBase_t
#define RTE_TYPE_TsaRteSignDecisionBase_t
typedef VAR(unsigned char, TYPEDEF) TsaRteSignDecisionBase_t;
#endif
#ifndef RTE_TYPE_TsaRteSignInfo_t
#define RTE_TYPE_TsaRteSignInfo_t
typedef struct
{
  VAR(TsaRteSignClassId_t, TYPEDEF) mainClass;
  VAR(TsaRteSignClassId_t, TYPEDEF) supplClass;
  VAR(float, TYPEDEF) passedDist;
  VAR(TsaRteSignDecisionBase_t, TYPEDEF) signDecisionBase;
} TsaRteSignInfo_t;
#endif
#ifndef RTE_TYPE_NpaNvmState_t
#define RTE_TYPE_NpaNvmState_t
typedef struct
{
  VAR(TsaRteSignInfo_t, TYPEDEF) npaSign;
} NpaNvmState_t;
#endif
#ifndef RTE_TYPE_NumOfUsedObjects
#define RTE_TYPE_NumOfUsedObjects
typedef VAR(unsigned char, TYPEDEF) NumOfUsedObjects;
#endif
#ifndef RTE_TYPE_aTsaRteSlaSigns
#define RTE_TYPE_aTsaRteSlaSigns
typedef VAR(TsaRteSignInfo_t, TYPEDEF) aTsaRteSlaSigns[2];
#endif
#ifndef RTE_TYPE_SlaNvmState_t
#define RTE_TYPE_SlaNvmState_t
typedef struct
{
  VAR(aTsaRteSlaSigns, TYPEDEF) slaSigns;
} SlaNvmState_t;
#endif
#ifndef RTE_TYPE_aTsaRteWwaNvmReservedBytes
#define RTE_TYPE_aTsaRteWwaNvmReservedBytes
typedef VAR(unsigned char, TYPEDEF) aTsaRteWwaNvmReservedBytes[16];
#endif
#ifndef RTE_TYPE_WwaNvmState_t
#define RTE_TYPE_WwaNvmState_t
typedef struct
{
  VAR(aTsaRteWwaNvmReservedBytes, TYPEDEF) wwaReservedBytes;
} WwaNvmState_t;
#endif
#ifndef RTE_TYPE_countryCodeEstimation_t
#define RTE_TYPE_countryCodeEstimation_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) u_countryCode;
  VAR(unsigned char, TYPEDEF) cceConfidence;
} countryCodeEstimation_t;
#endif
#ifndef RTE_TYPE_TsaRteTrafficStyle_t
#define RTE_TYPE_TsaRteTrafficStyle_t
typedef VAR(unsigned char, TYPEDEF) TsaRteTrafficStyle_t;
#endif
#ifndef RTE_TYPE_trafficStyleEstimation_t
#define RTE_TYPE_trafficStyleEstimation_t
typedef struct
{
  VAR(TsaRteTrafficStyle_t, TYPEDEF) tseTrafficStyle;
  VAR(signed char, TYPEDEF) tseIndicator;
} trafficStyleEstimation_t;
#endif
#ifndef RTE_TYPE_TsaRteSpeedUnit_t
#define RTE_TYPE_TsaRteSpeedUnit_t
typedef VAR(unsigned char, TYPEDEF) TsaRteSpeedUnit_t;
#endif
#ifndef RTE_TYPE_speedUnitEstimation_t
#define RTE_TYPE_speedUnitEstimation_t
typedef struct
{
  VAR(TsaRteSpeedUnit_t, TYPEDEF) sueSpeedUnit;
  VAR(TsaRteSpeedUnit_t, TYPEDEF) tachoSpeedUnit;
  VAR(unsigned char, TYPEDEF) sueScoreKmh;
  VAR(unsigned char, TYPEDEF) sueScoreMph;
  VAR(unsigned char, TYPEDEF) sueConfidence;
} speedUnitEstimation_t;
#endif
#ifndef RTE_TYPE_consistentCountryTuple_t
#define RTE_TYPE_consistentCountryTuple_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) uCountryCode;
  VAR(TsaRteSpeedUnit_t, TYPEDEF) eSpeedUnit;
  VAR(TsaRteTrafficStyle_t, TYPEDEF) eTrafficStyle;
} consistentCountryTuple_t;
#endif
#ifndef RTE_TYPE_mapData_t
#define RTE_TYPE_mapData_t
typedef struct
{
  VAR(boolean, TYPEDEF) TA19_JP_EXPYFLG;
  VAR(boolean, TYPEDEF) offRoad;
  VAR(float, TYPEDEF) offRoadChangeDist;
} mapData_t;
#endif
#ifndef RTE_TYPE_TsaPreNvmState_t
#define RTE_TYPE_TsaPreNvmState_t
typedef struct
{
  VAR(countryCodeEstimation_t, TYPEDEF) countryCodeEstimation;
  VAR(trafficStyleEstimation_t, TYPEDEF) trafficStyleEstimation;
  VAR(speedUnitEstimation_t, TYPEDEF) speedUnitEstimation;
  VAR(consistentCountryTuple_t, TYPEDEF) consistentCountryTuple;
  VAR(mapData_t, TYPEDEF) mapData;
} TsaPreNvmState_t;
#endif
#ifndef RTE_TYPE_aTsaRteNvmReservedBytes
#define RTE_TYPE_aTsaRteNvmReservedBytes
typedef VAR(unsigned char, TYPEDEF) aTsaRteNvmReservedBytes[50];
#endif
#ifndef RTE_TYPE_NvmTsaRteState_t
#define RTE_TYPE_NvmTsaRteState_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(SlaNvmState_t, TYPEDEF) SlaNvmState;
  VAR(NpaNvmState_t, TYPEDEF) NpaNvmState;
  VAR(WwaNvmState_t, TYPEDEF) WwaNvmState;
  VAR(GwwNvmState_t, TYPEDEF) GwwNvmState;
  VAR(TsaPreNvmState_t, TYPEDEF) TsaPreNvmState;
  VAR(aTsaRteNvmReservedBytes, TYPEDEF) tsaNvmReservedBytes;
} NvmTsaRteState_t;
#endif
#ifndef RTE_TYPE_ODObj_t_AbsMovingState
#define RTE_TYPE_ODObj_t_AbsMovingState
typedef VAR(unsigned char, TYPEDEF) ODObj_t_AbsMovingState;
#endif
#ifndef RTE_TYPE_ODObj_t_DynamicProperty
#define RTE_TYPE_ODObj_t_DynamicProperty
typedef VAR(unsigned char, TYPEDEF) ODObj_t_DynamicProperty;
#endif
#ifndef RTE_TYPE_ODObj_t_DynamicSubProp
#define RTE_TYPE_ODObj_t_DynamicSubProp
typedef VAR(unsigned char, TYPEDEF) ODObj_t_DynamicSubProp;
#endif
#ifndef RTE_TYPE_ODObj_t_OcclusionState
#define RTE_TYPE_ODObj_t_OcclusionState
typedef VAR(unsigned char, TYPEDEF) ODObj_t_OcclusionState;
#endif
#ifndef RTE_TYPE_ODObj_t_Attributes
#define RTE_TYPE_ODObj_t_Attributes
typedef struct
{
  VAR(ODObj_t_DynamicProperty, TYPEDEF) e_DynamicProperty;
  VAR(unsigned char, TYPEDEF) u_DynamicPropertyConfidence;
  VAR(unsigned char, TYPEDEF) u_StoppedConfidence;
  VAR(uint8_t, TYPEDEF) stoppedSuspicious;
  VAR(ODObj_t_DynamicSubProp, TYPEDEF) e_DynamicSubProp;
  VAR(ODObj_t_AbsMovingState, TYPEDEF) e_AbsMovingState;
  VAR(ODObj_t_OcclusionState, TYPEDEF) e_OcclusionState;
  VAR(unsigned char, TYPEDEF) uiOcclusionPercentage;
} ODObj_t_Attributes;
#endif
#ifndef RTE_TYPE_a_EstMaxDist_array_t
#define RTE_TYPE_a_EstMaxDist_array_t
typedef VAR(float, TYPEDEF) a_EstMaxDist_array_t[1];
#endif
#ifndef RTE_TYPE_a_RCS_array_t_0
#define RTE_TYPE_a_RCS_array_t_0
typedef VAR(float, TYPEDEF) a_RCS_array_t_0[1];
#endif
#ifndef RTE_TYPE_t_Complexf32
#define RTE_TYPE_t_Complexf32
typedef struct
{
  VAR(float, TYPEDEF) f_Real;
  VAR(float, TYPEDEF) f_Imag;
} t_Complexf32;
#endif
#ifndef RTE_TYPE_a_NoOfAssocClusters_array_t
#define RTE_TYPE_a_NoOfAssocClusters_array_t
typedef VAR(unsigned char, TYPEDEF) a_NoOfAssocClusters_array_t[1];
#endif
#ifndef RTE_TYPE_a_ByteAlignment_array_t_2
#define RTE_TYPE_a_ByteAlignment_array_t_2
typedef VAR(unsigned char, TYPEDEF) a_ByteAlignment_array_t_2[1];
#endif
#ifndef RTE_TYPE_ODObj_t_CurrentTarget
#define RTE_TYPE_ODObj_t_CurrentTarget
typedef struct
{
  VAR(float, TYPEDEF) f_DistX;
  VAR(float, TYPEDEF) f_DistXVar;
  VAR(float, TYPEDEF) f_DistY;
  VAR(float, TYPEDEF) f_DistYVar;
  VAR(float, TYPEDEF) f_VrelX;
  VAR(float, TYPEDEF) f_VrelXVar;
  VAR(float, TYPEDEF) f_VrelY;
  VAR(float, TYPEDEF) f_VrelYVar;
  VAR(float, TYPEDEF) f_RCS;
  VAR(a_EstMaxDist_array_t, TYPEDEF) a_EstMaxDist;
  VAR(float, TYPEDEF) f_PDH0;
  VAR(float, TYPEDEF) f_Length;
  VAR(float, TYPEDEF) f_Width;
  VAR(a_RCS_array_t_0, TYPEDEF) a_RCS;
  VAR(float, TYPEDEF) f_ElAng;
  VAR(float, TYPEDEF) f_ElAngWeighted;
  VAR(float, TYPEDEF) f_MicroMoveStd;
  VAR(t_Complexf32, TYPEDEF) RatioElevPeak;
  VAR(unsigned char, TYPEDEF) u_ElevMismatch;
  VAR(boolean, TYPEDEF) u_PlateIndication;
  VAR(unsigned char, TYPEDEF) u_ProbMultiTarget;
  VAR(a_NoOfAssocClusters_array_t, TYPEDEF) a_NoOfAssocClusters;
  VAR(unsigned char, TYPEDEF) u_NrOfMicroDopplerCluster;
  VAR(unsigned char, TYPEDEF) u_NrDetOverVelAverage;
  VAR(unsigned char, TYPEDEF) u_NrDetUnderVelAverage;
  VAR(a_ByteAlignment_array_t_2, TYPEDEF) a_ByteAlignment;
} ODObj_t_CurrentTarget;
#endif
#ifndef RTE_TYPE_ODObj_t_MaintenanceState
#define RTE_TYPE_ODObj_t_MaintenanceState
typedef VAR(unsigned char, TYPEDEF) ODObj_t_MaintenanceState;
#endif
#ifndef RTE_TYPE_ODObj_t_MergeSplitState
#define RTE_TYPE_ODObj_t_MergeSplitState
typedef VAR(unsigned char, TYPEDEF) ODObj_t_MergeSplitState;
#endif
#ifndef RTE_TYPE_OD_t_ObjNumber
#define RTE_TYPE_OD_t_ObjNumber
typedef VAR(signed char, TYPEDEF) OD_t_ObjNumber;
#endif
#ifndef RTE_TYPE_a_ByteAlignment_array_t
#define RTE_TYPE_a_ByteAlignment_array_t
typedef VAR(unsigned char, TYPEDEF) a_ByteAlignment_array_t[3];
#endif
#ifndef RTE_TYPE_ODObj_t_General
#define RTE_TYPE_ODObj_t_General
typedef struct
{
  VAR(float, TYPEDEF) f_LifeTime;
  VAR(AlgoDataTimeStamp_t, TYPEDEF) u_MeasuredTimeStamp;
  VAR(unsigned short, TYPEDEF) u_LifeCycles;
  VAR(ODObj_t_MaintenanceState, TYPEDEF) e_MaintenanceState;
  VAR(ODObj_t_MergeSplitState, TYPEDEF) e_MergeSplitState;
  VAR(OD_t_ObjNumber, TYPEDEF) s_MergeSplitID;
  VAR(a_ByteAlignment_array_t, TYPEDEF) a_ByteAlignment;
} ODObj_t_General;
#endif
#ifndef RTE_TYPE_ODObj_t_RefPointPos
#define RTE_TYPE_ODObj_t_RefPointPos
typedef VAR(unsigned char, TYPEDEF) ODObj_t_RefPointPos;
#endif
#ifndef RTE_TYPE_u_ByteAlignment_array_t
#define RTE_TYPE_u_ByteAlignment_array_t
typedef VAR(unsigned char, TYPEDEF) u_ByteAlignment_array_t[3];
#endif
#ifndef RTE_TYPE_ODObj_t_Geometry
#define RTE_TYPE_ODObj_t_Geometry
typedef struct
{
  VAR(float, TYPEDEF) f_Width;
  VAR(float, TYPEDEF) f_Length;
  VAR(float, TYPEDEF) f_Orientation;
  VAR(float, TYPEDEF) f_OrientationVar;
  VAR(ODObj_t_RefPointPos, TYPEDEF) e_RefPointPos;
  VAR(u_ByteAlignment_array_t, TYPEDEF) u_ByteAlignment;
} ODObj_t_Geometry;
#endif
#ifndef RTE_TYPE_a_ByteAlignment_array_t_0
#define RTE_TYPE_a_ByteAlignment_array_t_0
typedef VAR(unsigned char, TYPEDEF) a_ByteAlignment_array_t_0[1];
#endif
#ifndef RTE_TYPE_ODObj_t_History
#define RTE_TYPE_ODObj_t_History
typedef struct
{
  VAR(float, TYPEDEF) f_FirstDetectX;
  VAR(float, TYPEDEF) f_FirstDetectY;
  VAR(TraceID_t, TYPEDEF) u_ReferenceToTrace;
  VAR(ODObj_t_DynamicProperty, TYPEDEF) e_LastDynamicProperty;
  VAR(unsigned char, TYPEDEF) u_MirrorHistory;
  VAR(a_ByteAlignment_array_t_0, TYPEDEF) a_ByteAlignment;
} ODObj_t_History;
#endif
#ifndef RTE_TYPE_ODObj_t_KinematicAbs
#define RTE_TYPE_ODObj_t_KinematicAbs
typedef struct
{
  VAR(float, TYPEDEF) f_VabsX;
  VAR(float, TYPEDEF) f_VabsXVar;
  VAR(float, TYPEDEF) f_VabsY;
  VAR(float, TYPEDEF) f_VabsYVar;
  VAR(float, TYPEDEF) f_AabsX;
  VAR(float, TYPEDEF) f_AabsXVar;
  VAR(float, TYPEDEF) f_AabsY;
  VAR(float, TYPEDEF) f_AabsYVar;
  VAR(float, TYPEDEF) f_YawRate;
  VAR(float, TYPEDEF) f_YawRateVar;
  VAR(float, TYPEDEF) f_twoStateAabsXFilterP00;
  VAR(float, TYPEDEF) f_twoStateAabsXFilterP01;
  VAR(float, TYPEDEF) f_twoStateAabsXFilterP11;
  VAR(float, TYPEDEF) f_twoStateAabsXFilterVabsX1;
} ODObj_t_KinematicAbs;
#endif
#ifndef RTE_TYPE_ODObj_t_KinematicRel
#define RTE_TYPE_ODObj_t_KinematicRel
typedef struct
{
  VAR(float, TYPEDEF) f_DistX;
  VAR(float, TYPEDEF) f_DistXVar;
  VAR(float, TYPEDEF) f_DistY;
  VAR(float, TYPEDEF) f_DistYVar;
  VAR(float, TYPEDEF) f_VrelX;
  VAR(float, TYPEDEF) f_VrelXVar;
  VAR(float, TYPEDEF) f_VrelY;
  VAR(float, TYPEDEF) f_VrelYVar;
  VAR(float, TYPEDEF) f_ArelX;
  VAR(float, TYPEDEF) f_ArelXVar;
  VAR(float, TYPEDEF) f_ArelY;
  VAR(float, TYPEDEF) f_ArelYVar;
} ODObj_t_KinematicRel;
#endif
#ifndef RTE_TYPE_ODObj_t_MeasuredSources
#define RTE_TYPE_ODObj_t_MeasuredSources
typedef VAR(unsigned char, TYPEDEF) ODObj_t_MeasuredSources;
#endif
#ifndef RTE_TYPE_ODObj_t_ObjRelationsClass
#define RTE_TYPE_ODObj_t_ObjRelationsClass
typedef VAR(unsigned char, TYPEDEF) ODObj_t_ObjRelationsClass;
#endif
#ifndef RTE_TYPE_ODObj_t_Qualifiers
#define RTE_TYPE_ODObj_t_Qualifiers
typedef struct
{
  VAR(float, TYPEDEF) f_UpdateQuality;
  VAR(float, TYPEDEF) f_ProbabilityOfExistence;
  VAR(unsigned char, TYPEDEF) u_MeasuredTargetFrequencyNear;
  VAR(unsigned char, TYPEDEF) u_MeasuredTargetFrequencyFar;
  VAR(ODObj_t_ObjRelationsClass, TYPEDEF) e_ObjRelationsClass;
  VAR(unsigned char, TYPEDEF) u_Dummy81;
} ODObj_t_Qualifiers;
#endif
#ifndef RTE_TYPE_a_ByteAlignment_array_t_1
#define RTE_TYPE_a_ByteAlignment_array_t_1
typedef VAR(unsigned char, TYPEDEF) a_ByteAlignment_array_t_1[1];
#endif
#ifndef RTE_TYPE_ODObj_t_SensorSpecific
#define RTE_TYPE_ODObj_t_SensorSpecific
typedef struct
{
  VAR(float, TYPEDEF) f_RCS;
  VAR(float, TYPEDEF) f_RCSTargetThresholdUncomp;
  VAR(float, TYPEDEF) f_AngularBeamPos;
  VAR(ODObj_t_MeasuredSources, TYPEDEF) u_MeasuredSources;
  VAR(boolean, TYPEDEF) b_NearObjInBeam;
  VAR(unsigned char, TYPEDEF) u_PCTgtIdx;
  VAR(a_ByteAlignment_array_t_1, TYPEDEF) a_ByteAlignment;
} ODObj_t_SensorSpecific;
#endif
#ifndef RTE_TYPE_iSortedObjectList_array_t
#define RTE_TYPE_iSortedObjectList_array_t
typedef VAR(OD_t_ObjNumber, TYPEDEF) iSortedObjectList_array_t[100];
#endif
#ifndef RTE_TYPE_a_ByteAlignment_array_t_3
#define RTE_TYPE_a_ByteAlignment_array_t_3
typedef VAR(unsigned char, TYPEDEF) a_ByteAlignment_array_t_3[3];
#endif
#ifndef RTE_TYPE_OD_t_HeaderObjectList
#define RTE_TYPE_OD_t_HeaderObjectList
typedef struct
{
  VAR(iSortedObjectList_array_t, TYPEDEF) iDistXSortedObjectList;
  VAR(OD_t_ObjNumber, TYPEDEF) iNumOfUsedObjects;
  VAR(a_ByteAlignment_array_t_3, TYPEDEF) a_ByteAlignment;
} OD_t_HeaderObjectList;
#endif
#ifndef RTE_TYPE_OD_t_PublicObject
#define RTE_TYPE_OD_t_PublicObject
typedef struct
{
  VAR(ODObj_t_KinematicRel, TYPEDEF) KinematicRel;
  VAR(ODObj_t_KinematicAbs, TYPEDEF) KinematicAbs;
  VAR(ODObj_t_Geometry, TYPEDEF) Geometry;
  VAR(ODObj_t_Attributes, TYPEDEF) Attributes;
  VAR(ODObj_t_General, TYPEDEF) General;
  VAR(ODObj_t_Qualifiers, TYPEDEF) Qualifiers;
  VAR(ODObj_t_History, TYPEDEF) History;
  VAR(ODObj_t_SensorSpecific, TYPEDEF) SensorSpecific;
  VAR(ACCPresel_t, TYPEDEF) ACCPresel;
  VAR(EBAPresel_t, TYPEDEF) EBAPresel;
  VAR(ODObj_t_CurrentTarget, TYPEDEF) CurrentTarget;
} OD_t_PublicObject;
#endif
#ifndef RTE_TYPE_Objects_array_t
#define RTE_TYPE_Objects_array_t
typedef VAR(OD_t_PublicObject, TYPEDEF) Objects_array_t[100];
#endif
#ifndef RTE_TYPE_ODObjectList_t
#define RTE_TYPE_ODObjectList_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(AlgoDataTimeStamp_t, TYPEDEF) uiTimeStamp;
  VAR(AlgoCycleCounter_t, TYPEDEF) uiCycleCounter;
  VAR(AlgoSignalState_t, TYPEDEF) eSigStatus;
  VAR(a_ByteAlignment_array_t, TYPEDEF) a_byteAlignment;
  VAR(OD_t_HeaderObjectList, TYPEDEF) HeaderObjList;
  VAR(Objects_array_t, TYPEDEF) Objects;
} ODObjectList_t;
#endif
#ifndef RTE_TYPE_eTraceUpdateState_t
#define RTE_TYPE_eTraceUpdateState_t
typedef VAR(unsigned char, TYPEDEF) eTraceUpdateState_t;
#endif
#ifndef RTE_TYPE_eTraceType_t
#define RTE_TYPE_eTraceType_t
typedef VAR(unsigned char, TYPEDEF) eTraceType_t;
#endif
#ifndef RTE_TYPE_Quality_t
#define RTE_TYPE_Quality_t
typedef VAR(unsigned int, TYPEDEF) Quality_t;
#endif
#ifndef RTE_TYPE_uiTracePointYStdDev_array_t
#define RTE_TYPE_uiTracePointYStdDev_array_t
typedef VAR(unsigned short, TYPEDEF) uiTracePointYStdDev_array_t[25];
#endif
#ifndef RTE_TYPE_ObjectTraceAttributes_t
#define RTE_TYPE_ObjectTraceAttributes_t
typedef struct
{
  VAR(fDistance_t, TYPEDEF) fLength;
  VAR(fDistance_t, TYPEDEF) fYIntersection;
  VAR(unsigned char, TYPEDEF) uiPriority;
  VAR(eTraceUpdateState_t, TYPEDEF) eTraceUpdateState;
  VAR(eTraceType_t, TYPEDEF) eTraceType;
  VAR(Quality_t, TYPEDEF) Quality;
  VAR(uiTracePointYStdDev_array_t, TYPEDEF) uiTracePointYStdDev;
} ObjectTraceAttributes_t;
#endif
#ifndef RTE_TYPE_Vector2_i16_t
#define RTE_TYPE_Vector2_i16_t
typedef struct
{
  VAR(short, TYPEDEF) nXDist;
  VAR(short, TYPEDEF) nYDist;
} Vector2_i16_t;
#endif
#ifndef RTE_TYPE_Points_array_t
#define RTE_TYPE_Points_array_t
typedef VAR(Vector2_i16_t, TYPEDEF) Points_array_t[25];
#endif
#ifndef RTE_TYPE_ObjectTraceBasic_t
#define RTE_TYPE_ObjectTraceBasic_t
typedef struct
{
  VAR(Points_array_t, TYPEDEF) Points;
  VAR(Vector2_f32_t, TYPEDEF) Head;
  VAR(Vector2_f32_t, TYPEDEF) Tail;
  VAR(unsigned char, TYPEDEF) uiHead;
  VAR(unsigned char, TYPEDEF) uiTail;
  VAR(unsigned char, TYPEDEF) uiNumberOfPoints;
  VAR(ObjNumber_t, TYPEDEF) uiReferenceToObject;
  VAR(ObjNumber_t, TYPEDEF) uiReferenceToFCTObject;
} ObjectTraceBasic_t;
#endif
#ifndef RTE_TYPE_ObjectTraces_t
#define RTE_TYPE_ObjectTraces_t
typedef struct
{
  VAR(ObjectTraceBasic_t, TYPEDEF) ObjectTraceBasic;
  VAR(ObjectTraceAttributes_t, TYPEDEF) ObjectTraceAttributes;
} ObjectTraces_t;
#endif
#ifndef RTE_TYPE_ObjectTraces_array_t
#define RTE_TYPE_ObjectTraces_array_t
typedef VAR(ObjectTraces_t, TYPEDEF) ObjectTraces_array_t[10];
#endif
#ifndef RTE_TYPE_ObjectTraceList_t
#define RTE_TYPE_ObjectTraceList_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(ObjectTraces_array_t, TYPEDEF) ObjectTraces;
} ObjectTraceList_t;
#endif
#ifndef RTE_TYPE_Object_array_t
#define RTE_TYPE_Object_array_t
typedef VAR(HLA_RadarObject_t, TYPEDEF) Object_array_t[2];
#endif
#ifndef RTE_TYPE_OffCompStWheelAngle
#define RTE_TYPE_OffCompStWheelAngle
typedef VAR(float, TYPEDEF) OffCompStWheelAngle;
#endif
#ifndef RTE_TYPE_OnOffPen
#define RTE_TYPE_OnOffPen
typedef struct
{
  VAR(boolean, TYPEDEF) Sts;
  VAR(uint8_t, TYPEDEF) Pen;
} OnOffPen;
#endif
#ifndef RTE_TYPE_OncomingMax
#define RTE_TYPE_OncomingMax
typedef VAR(float, TYPEDEF) OncomingMax;
#endif
#ifndef RTE_TYPE_OncomingMaxHighway
#define RTE_TYPE_OncomingMaxHighway
typedef VAR(float, TYPEDEF) OncomingMaxHighway;
#endif
#ifndef RTE_TYPE_OncomingMin
#define RTE_TYPE_OncomingMin
typedef VAR(float, TYPEDEF) OncomingMin;
#endif
#ifndef RTE_TYPE_OncomingMinHighway
#define RTE_TYPE_OncomingMinHighway
typedef VAR(float, TYPEDEF) OncomingMinHighway;
#endif
#ifndef RTE_TYPE_Orientation_t
#define RTE_TYPE_Orientation_t
typedef VAR(unsigned char, TYPEDEF) Orientation_t;
#endif
#ifndef RTE_TYPE_Orientation
#define RTE_TYPE_Orientation
typedef VAR(Orientation_t, TYPEDEF) Orientation;
#endif
#ifndef RTE_TYPE_VDYErrState_t
#define RTE_TYPE_VDYErrState_t
typedef VAR(unsigned char, TYPEDEF) VDYErrState_t;
#endif
#ifndef RTE_TYPE_OutPutErrors_t
#define RTE_TYPE_OutPutErrors_t
typedef struct
{
  VAR(VDYErrState_t, TYPEDEF) YwrOffsRg;
  VAR(VDYErrState_t, TYPEDEF) SwaOffsRg;
  VAR(VDYErrState_t, TYPEDEF) AyOffsRg;
  VAR(VDYErrState_t, TYPEDEF) VelCorrRg;
  VAR(VDYErrState_t, TYPEDEF) NVMYwrOffsRg;
  VAR(VDYErrState_t, TYPEDEF) NVMSwaOffsRg;
  VAR(VDYErrState_t, TYPEDEF) NVMAyOffsRg;
  VAR(VDYErrState_t, TYPEDEF) NVMVelCorrRg;
  VAR(VDYErrState_t, TYPEDEF) YwrNVMOffsRg;
  VAR(VDYErrState_t, TYPEDEF) SwaNVMOffsRg;
  VAR(VDYErrState_t, TYPEDEF) AyNVMOffsRg;
  VAR(VDYErrState_t, TYPEDEF) SSGNVMOffsRg;
  VAR(VDYErrState_t, TYPEDEF) WLDNVMOffsRg;
  VAR(VDYErrState_t, TYPEDEF) VelCorrWin;
  VAR(VDYErrState_t, TYPEDEF) VelMon;
  VAR(VDYErrState_t, TYPEDEF) VelMonLt;
  VAR(VDYErrState_t, TYPEDEF) VelocityErr;
  VAR(VDYErrState_t, TYPEDEF) YawRateErr;
  VAR(VDYErrState_t, TYPEDEF) YwrMonVehHalt;
  VAR(VDYErrState_t, TYPEDEF) YwrMonVehDOff;
  VAR(VDYErrState_t, TYPEDEF) YwrMonAdmWdrwl;
  VAR(VDYErrState_t, TYPEDEF) YwrACCMonAlignm;
  VAR(VDYErrState_t, TYPEDEF) YwrCGMonAlignm;
  VAR(VDYErrState_t, TYPEDEF) YwrMonVehHaltCal;
  VAR(VDYErrState_t, TYPEDEF) VDY_FS_YR_VS_WSP;
  VAR(VDYErrState_t, TYPEDEF) VDY_FS_YR_VS_AY;
  VAR(VDYErrState_t, TYPEDEF) VDY_FS_YR_VS_SWA;
  VAR(VDYErrState_t, TYPEDEF) VDY_VEH_VEL_NOT_AVAILABLE;
  VAR(VDYErrState_t, TYPEDEF) VDY_VEH_YWR_NOT_AVAILABLE;
  VAR(VDYErrState_t, TYPEDEF) VDY_FS_VEH_CORR_MON;
} OutPutErrors_t;
#endif
#ifndef RTE_TYPE_OverhangFront
#define RTE_TYPE_OverhangFront
typedef VAR(float, TYPEDEF) OverhangFront;
#endif
#ifndef RTE_TYPE_OvrdDecelByDrvrSafe1
#define RTE_TYPE_OvrdDecelByDrvrSafe1
typedef struct
{
  VAR(boolean, TYPEDEF) OvrdDecelByDrvr;
  VAR(uint8_t, TYPEDEF) OvrdDecelByDrvrChks;
  VAR(uint8_t, TYPEDEF) OvrdDecelByDrvrCntr;
} OvrdDecelByDrvrSafe1;
#endif
#ifndef RTE_TYPE_P4
#define RTE_TYPE_P4
typedef VAR(unsigned char, TYPEDEF) P4;
#endif
#ifndef RTE_TYPE_SignatureElement_t
#define RTE_TYPE_SignatureElement_t
typedef VAR(unsigned int, TYPEDEF) SignatureElement_t;
#endif
#ifndef RTE_TYPE_PFC_SignatureImage_t
#define RTE_TYPE_PFC_SignatureImage_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(ImageHeader_t, TYPEDEF) sImgHeader;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(SignatureElement_t, TYPEDEF) pSignatureData;
} PFC_SignatureImage_t;
#endif
#ifndef RTE_TYPE_PPAR_t_ComplexIQValuesFarArray
#define RTE_TYPE_PPAR_t_ComplexIQValuesFarArray
typedef VAR(signed char, TYPEDEF) PPAR_t_ComplexIQValuesFarArray[1080];
#endif
#ifndef RTE_TYPE_PPAR_t_ComplexIQValuesNearArray
#define RTE_TYPE_PPAR_t_ComplexIQValuesNearArray
typedef VAR(signed char, TYPEDEF) PPAR_t_ComplexIQValuesNearArray[2088];
#endif
#ifndef RTE_TYPE_PPAR_t_CoreAssembly
#define RTE_TYPE_PPAR_t_CoreAssembly
typedef VAR(uint8_t, TYPEDEF) PPAR_t_CoreAssembly[7];
#endif
#ifndef RTE_TYPE_PPAR_t_CoreAssembly_Geely
#define RTE_TYPE_PPAR_t_CoreAssembly_Geely
typedef VAR(uint8_t, TYPEDEF) PPAR_t_CoreAssembly_Geely[8];
#endif
#ifndef RTE_TYPE_PPAR_t_CustomerHardwareNumberArray
#define RTE_TYPE_PPAR_t_CustomerHardwareNumberArray
typedef VAR(unsigned char, TYPEDEF) PPAR_t_CustomerHardwareNumberArray[32];
#endif
#ifndef RTE_TYPE_PPAR_t_DeliveryAssembly
#define RTE_TYPE_PPAR_t_DeliveryAssembly
typedef VAR(uint8_t, TYPEDEF) PPAR_t_DeliveryAssembly[7];
#endif
#ifndef RTE_TYPE_PPAR_t_DeliveryAssembly_Geely
#define RTE_TYPE_PPAR_t_DeliveryAssembly_Geely
typedef VAR(uint8_t, TYPEDEF) PPAR_t_DeliveryAssembly_Geely[8];
#endif
#ifndef RTE_TYPE_PPAR_t_ElevationAngleDeviationFar
#define RTE_TYPE_PPAR_t_ElevationAngleDeviationFar
typedef VAR(short, TYPEDEF) PPAR_t_ElevationAngleDeviationFar[41];
#endif
#ifndef RTE_TYPE_PPAR_t_MACAddressArray
#define RTE_TYPE_PPAR_t_MACAddressArray
typedef VAR(unsigned char, TYPEDEF) PPAR_t_MACAddressArray[6];
#endif
#ifndef RTE_TYPE_PPAR_t_EthernetReserved1Array
#define RTE_TYPE_PPAR_t_EthernetReserved1Array
typedef VAR(unsigned char, TYPEDEF) PPAR_t_EthernetReserved1Array[10];
#endif
#ifndef RTE_TYPE_PPAR_t_EthernetReserved2Array
#define RTE_TYPE_PPAR_t_EthernetReserved2Array
typedef VAR(unsigned char, TYPEDEF) PPAR_t_EthernetReserved2Array[12];
#endif
#ifndef RTE_TYPE_PPAR_t_EthernetParameters
#define RTE_TYPE_PPAR_t_EthernetParameters
typedef struct
{
  VAR(PPAR_t_MACAddressArray, TYPEDEF) a_MACAddress;
  VAR(PPAR_t_EthernetReserved1Array, TYPEDEF) a_EthernetReserved1;
  VAR(unsigned int, TYPEDEF) u_StaticIpAddress;
  VAR(PPAR_t_EthernetReserved2Array, TYPEDEF) a_EthernetReserved2;
} PPAR_t_EthernetParameters;
#endif
#ifndef RTE_TYPE_PPAR_t_HilReservedArray
#define RTE_TYPE_PPAR_t_HilReservedArray
typedef VAR(unsigned char, TYPEDEF) PPAR_t_HilReservedArray[16];
#endif
#ifndef RTE_TYPE_PPAR_t_HilData
#define RTE_TYPE_PPAR_t_HilData
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_HilHardware;
  VAR(PPAR_t_HilReservedArray, TYPEDEF) a_HilReserved;
} PPAR_t_HilData;
#endif
#ifndef RTE_TYPE_PPAR_t_HwSampAdaptInfReserved1Array
#define RTE_TYPE_PPAR_t_HwSampAdaptInfReserved1Array
typedef VAR(unsigned char, TYPEDEF) PPAR_t_HwSampAdaptInfReserved1Array[2];
#endif
#ifndef RTE_TYPE_PPAR_t_HwSampAdaptInfReserved2array
#define RTE_TYPE_PPAR_t_HwSampAdaptInfReserved2array
typedef VAR(unsigned char, TYPEDEF) PPAR_t_HwSampAdaptInfReserved2array[15];
#endif
#ifndef RTE_TYPE_PPAR_t_HwSampAdaptInf
#define RTE_TYPE_PPAR_t_HwSampAdaptInf
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_HwAddiCompaDatInitTag;
  VAR(unsigned char, TYPEDEF) u_HwAdaptCompatIndex;
  VAR(unsigned char, TYPEDEF) u_HwVersionChangeIndex;
  VAR(PPAR_t_HwSampAdaptInfReserved1Array, TYPEDEF) a_HwSampAdaptInfReserved1;
  VAR(unsigned char, TYPEDEF) u_InterfaceVers;
  VAR(PPAR_t_HwSampAdaptInfReserved2array, TYPEDEF) a_HwSampAdaptInfReserved2;
} PPAR_t_HwSampAdaptInf;
#endif
#ifndef RTE_TYPE_PPAR_t_MeasAngleNearMPArray
#define RTE_TYPE_PPAR_t_MeasAngleNearMPArray
typedef VAR(short, TYPEDEF) PPAR_t_MeasAngleNearMPArray[721];
#endif
#ifndef RTE_TYPE_PPAR_t_Reserved2Array
#define RTE_TYPE_PPAR_t_Reserved2Array
typedef VAR(unsigned char, TYPEDEF) PPAR_t_Reserved2Array[2488];
#endif
#ifndef RTE_TYPE_PPAR_t_MoreAlgoParams
#define RTE_TYPE_PPAR_t_MoreAlgoParams
typedef struct
{
  VAR(PPAR_t_AngleDeviationNearArray, TYPEDEF) a_MeasAngleNearBF;
  VAR(PPAR_t_MeasAngleNearMPArray, TYPEDEF) a_MeasAngleNearMP;
  VAR(PPAR_t_ComplexIQValuesNearArray, TYPEDEF) a_ComplexIQValuesNear;
  VAR(PPAR_t_AngleDeviationFarArray, TYPEDEF) a_MeasAngleFarBF;
  VAR(PPAR_t_ComplexIQValuesFarArray, TYPEDEF) a_ComplexIQValuesFar;
  VAR(PPAR_t_DecayTargetNormSNearAzimuthArray, TYPEDEF) a_DecayTargetNormSFarAzimuth;
  VAR(unsigned char, TYPEDEF) Psw_VgaTx1Far;
  VAR(unsigned char, TYPEDEF) Psw_VgaTx2Far;
  VAR(unsigned char, TYPEDEF) Psw_VgaTx1Near;
  VAR(unsigned char, TYPEDEF) Psw_VgaTx2Near;
  VAR(unsigned char, TYPEDEF) RxGainSettings;
  VAR(PPAR_t_ElevationAngleDeviationFar, TYPEDEF) a_ElevationAngleDeviationFar;
  VAR(short, TYPEDEF) s_MsbTransDipAreaInLSBns;
  VAR(PPAR_t_Reserved2Array, TYPEDEF) a_Reserved;
} PPAR_t_MoreAlgoParams;
#endif
#ifndef RTE_TYPE_PPAR_t_OemSwBlockReserved
#define RTE_TYPE_PPAR_t_OemSwBlockReserved
typedef VAR(uint8_t, TYPEDEF) PPAR_t_OemSwBlockReserved[994];
#endif
#ifndef RTE_TYPE_PPAR_t_OemSwBlockArray
#define RTE_TYPE_PPAR_t_OemSwBlockArray
typedef struct
{
  VAR(PPAR_t_DeliveryAssembly, TYPEDEF) aui8_DelivAssemPartNumber;
  VAR(PPAR_t_DeliveryAssembly_Geely, TYPEDEF) aui8_GeelyDelivAssemPartNumber;
  VAR(PPAR_t_CoreAssembly, TYPEDEF) aui8_CoreAssemPartNumber;
  VAR(PPAR_t_CoreAssembly_Geely, TYPEDEF) aui8_GeelyCoreAssemPartNumber;
  VAR(PPAR_t_OemSwBlockReserved, TYPEDEF) aui8_OemSwBlockReserved;
} PPAR_t_OemSwBlockArray;
#endif
#ifndef RTE_TYPE_PPAR_t_Reserved1Array
#define RTE_TYPE_PPAR_t_Reserved1Array
typedef VAR(unsigned char, TYPEDEF) PPAR_t_Reserved1Array[492];
#endif
#ifndef RTE_TYPE_PPAR_t_SerialNumberArray
#define RTE_TYPE_PPAR_t_SerialNumberArray
typedef VAR(unsigned char, TYPEDEF) PPAR_t_SerialNumberArray[26];
#endif
#ifndef RTE_TYPE_PPAR_t_SerialNumber
#define RTE_TYPE_PPAR_t_SerialNumber
typedef struct
{
  VAR(PPAR_t_SerialNumberArray, TYPEDEF) a_SerialNumber;
  VAR(unsigned short, TYPEDEF) u_Alignment;
} PPAR_t_SerialNumber;
#endif
#ifndef RTE_TYPE_PPAR_t_TempSensorValuesArray
#define RTE_TYPE_PPAR_t_TempSensorValuesArray
typedef VAR(unsigned short, TYPEDEF) PPAR_t_TempSensorValuesArray[11];
#endif
#ifndef RTE_TYPE_PPAR_t_TraceNoArray
#define RTE_TYPE_PPAR_t_TraceNoArray
typedef VAR(unsigned char, TYPEDEF) PPAR_t_TraceNoArray[10];
#endif
#ifndef RTE_TYPE_PPAR_t_TraceReservedArray
#define RTE_TYPE_PPAR_t_TraceReservedArray
typedef VAR(unsigned char, TYPEDEF) PPAR_t_TraceReservedArray[54];
#endif
#ifndef RTE_TYPE_PPAR_t_TraceNo
#define RTE_TYPE_PPAR_t_TraceNo
typedef struct
{
  VAR(PPAR_t_TraceNoArray, TYPEDEF) a_TraceNo;
  VAR(PPAR_t_TraceReservedArray, TYPEDEF) a_TraceReserved;
} PPAR_t_TraceNo;
#endif
#ifndef RTE_TYPE_PPAR_t_VCOandGyroParams
#define RTE_TYPE_PPAR_t_VCOandGyroParams
typedef struct
{
  VAR(unsigned char, TYPEDEF) u_VcoDacCoarse;
  VAR(unsigned char, TYPEDEF) u_VcoVTuneGain;
  VAR(unsigned short, TYPEDEF) u_VcoDacFineUpper;
  VAR(unsigned short, TYPEDEF) u_VcoDacFineLower;
  VAR(PPAR_t_TempSensorValuesArray, TYPEDEF) a_TempSensorValues;
  VAR(short, TYPEDEF) s_GyroOffset;
  VAR(short, TYPEDEF) s_GyroTempDiff;
} PPAR_t_VCOandGyroParams;
#endif
#ifndef RTE_TYPE_P_DRMDAE_TrigDegrAftTorTime_sec_array_t_0
#define RTE_TYPE_P_DRMDAE_TrigDegrAftTorTime_sec_array_t_0
typedef VAR(float, TYPEDEF) P_DRMDAE_TrigDegrAftTorTime_sec_array_t_0[10];
#endif
#ifndef RTE_TYPE_Padding
#define RTE_TYPE_Padding
typedef VAR(unsigned char, TYPEDEF) Padding;
#endif
#ifndef RTE_TYPE_ParInputErrors_t
#define RTE_TYPE_ParInputErrors_t
typedef struct
{
  VAR(VDYErrState_t, TYPEDEF) InputParameterError;
} ParInputErrors_t;
#endif
#ifndef RTE_TYPE_ParkBrakeState_t
#define RTE_TYPE_ParkBrakeState_t
typedef VAR(unsigned char, TYPEDEF) ParkBrakeState_t;
#endif
#ifndef RTE_TYPE_ParkBrakeState
#define RTE_TYPE_ParkBrakeState
typedef VAR(ParkBrakeState_t, TYPEDEF) ParkBrakeState;
#endif
#ifndef RTE_TYPE_PassableHeight
#define RTE_TYPE_PassableHeight
typedef VAR(float, TYPEDEF) PassableHeight;
#endif
#ifndef RTE_TYPE_ePyramidLevel_t
#define RTE_TYPE_ePyramidLevel_t
typedef VAR(unsigned char, TYPEDEF) ePyramidLevel_t;
#endif
#ifndef RTE_TYPE_PcRequestPatch_t
#define RTE_TYPE_PcRequestPatch_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) uiID;
  VAR(unsigned short, TYPEDEF) uiTopLeftCornerPosHorizontal;
  VAR(unsigned short, TYPEDEF) uiTopLeftCornerPosVertical;
  VAR(unsigned short, TYPEDEF) uiWidth;
  VAR(unsigned short, TYPEDEF) uiHeight;
  VAR(float, TYPEDEF) fInitialShift_X;
  VAR(float, TYPEDEF) fInitialShift_Y;
  VAR(unsigned char, TYPEDEF) uiSearchRangeHorizontal;
  VAR(unsigned char, TYPEDEF) uiSearchRangeVertical;
  VAR(ePyramidLevel_t, TYPEDEF) ePyramidLevel;
} PcRequestPatch_t;
#endif
#ifndef RTE_TYPE_aPatchArray_array_t
#define RTE_TYPE_aPatchArray_array_t
typedef VAR(PcRequestPatch_t, TYPEDEF) aPatchArray_array_t[1024];
#endif
#ifndef RTE_TYPE_PcRequestPatches_t
#define RTE_TYPE_PcRequestPatches_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(aPatchArray_array_t, TYPEDEF) aPatchArray;
  VAR(unsigned short, TYPEDEF) uiValidPatches;
} PcRequestPatches_t;
#endif
#ifndef RTE_TYPE_eValidity_t
#define RTE_TYPE_eValidity_t
typedef VAR(unsigned char, TYPEDEF) eValidity_t;
#endif
#ifndef RTE_TYPE_PcResultPatch_t
#define RTE_TYPE_PcResultPatch_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) uiID;
  VAR(eValidity_t, TYPEDEF) eValidity;
  VAR(float, TYPEDEF) fShift_x;
  VAR(float, TYPEDEF) fShift_y;
  VAR(float, TYPEDEF) fScale;
  VAR(float, TYPEDEF) fPositionQuality;
  VAR(float, TYPEDEF) fMatchingQuality;
} PcResultPatch_t;
#endif
#ifndef RTE_TYPE_aPatchArray_array_t_0
#define RTE_TYPE_aPatchArray_array_t_0
typedef VAR(PcResultPatch_t, TYPEDEF) aPatchArray_array_t_0[1024];
#endif
#ifndef RTE_TYPE_PcResultPatches_t
#define RTE_TYPE_PcResultPatches_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(aPatchArray_array_t_0, TYPEDEF) aPatchArray;
} PcResultPatches_t;
#endif
#ifndef RTE_TYPE_Percentage_s_t
#define RTE_TYPE_Percentage_s_t
typedef VAR(unsigned char, TYPEDEF) Percentage_s_t;
#endif
#ifndef RTE_TYPE_PerfDegrExtInput_t
#define RTE_TYPE_PerfDegrExtInput_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(SYSDampState_t, TYPEDEF) eSRDSysDamp;
} PerfDegrExtInput_t;
#endif
#ifndef RTE_TYPE_RangeRaw_t
#define RTE_TYPE_RangeRaw_t
typedef struct
{
  VAR(float, TYPEDEF) fMovingMeanRaw;
  VAR(float, TYPEDEF) fMovingConfRaw;
  VAR(float, TYPEDEF) fStationaryMeanRaw;
  VAR(float, TYPEDEF) fStationaryMaxRaw;
  VAR(float, TYPEDEF) fStationaryConfRaw;
} RangeRaw_t;
#endif
#ifndef RTE_TYPE_RangeRaw_array_t
#define RTE_TYPE_RangeRaw_array_t
typedef VAR(RangeRaw_t, TYPEDEF) RangeRaw_array_t[1];
#endif
#ifndef RTE_TYPE_RangeFiltered_t
#define RTE_TYPE_RangeFiltered_t
typedef struct
{
  VAR(float, TYPEDEF) fMovingMeanFiltered;
  VAR(float, TYPEDEF) fMovingMeanConfFiltered;
  VAR(float, TYPEDEF) fStatMeanFiltered;
  VAR(float, TYPEDEF) fStatMeanConfFiltered;
  VAR(float, TYPEDEF) fFLDMeanFiltered;
  VAR(float, TYPEDEF) fFLDMeanConfFiltered;
} RangeFiltered_t;
#endif
#ifndef RTE_TYPE_RangeFiltered_array_t
#define RTE_TYPE_RangeFiltered_array_t
typedef VAR(RangeFiltered_t, TYPEDEF) RangeFiltered_array_t[1];
#endif
#ifndef RTE_TYPE_RangeFused_t
#define RTE_TYPE_RangeFused_t
typedef struct
{
  VAR(float, TYPEDEF) fFusedRange;
  VAR(float, TYPEDEF) fFusedConf;
} RangeFused_t;
#endif
#ifndef RTE_TYPE_RangeFused_array_t
#define RTE_TYPE_RangeFused_array_t
typedef VAR(RangeFused_t, TYPEDEF) RangeFused_array_t[1];
#endif
#ifndef RTE_TYPE_Timeout_t
#define RTE_TYPE_Timeout_t
typedef struct
{
  VAR(float, TYPEDEF) fTimeCounter;
  VAR(float, TYPEDEF) fWayCounter;
} Timeout_t;
#endif
#ifndef RTE_TYPE_TargetRate_t
#define RTE_TYPE_TargetRate_t
typedef struct
{
  VAR(float, TYPEDEF) fTargetRate;
  VAR(float, TYPEDEF) fTargetRateStat;
  VAR(float, TYPEDEF) fTargetRateMov;
} TargetRate_t;
#endif
#ifndef RTE_TYPE_TargetRate_array_t
#define RTE_TYPE_TargetRate_array_t
typedef VAR(TargetRate_t, TYPEDEF) TargetRate_array_t[1];
#endif
#ifndef RTE_TYPE_reserved_array_t
#define RTE_TYPE_reserved_array_t
typedef VAR(unsigned char, TYPEDEF) reserved_array_t[1];
#endif
#ifndef RTE_TYPE_RoadBeamScan
#define RTE_TYPE_RoadBeamScan
typedef struct
{
  VAR(unsigned char, TYPEDEF) iQuality;
  VAR(unsigned char, TYPEDEF) RoadVisibility;
  VAR(unsigned char, TYPEDEF) BeamCrossingCounter;
  VAR(reserved_array_t, TYPEDEF) reserved;
} RoadBeamScan;
#endif
#ifndef RTE_TYPE_RoadBeam_array_t
#define RTE_TYPE_RoadBeam_array_t
typedef VAR(RoadBeamScan, TYPEDEF) RoadBeam_array_t[1];
#endif
#ifndef RTE_TYPE_PerfDegr_t
#define RTE_TYPE_PerfDegr_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(RangeRaw_array_t, TYPEDEF) RangeRaw;
  VAR(RangeFiltered_array_t, TYPEDEF) RangeFiltered;
  VAR(RangeFused_array_t, TYPEDEF) RangeFused;
  VAR(Timeout_t, TYPEDEF) Timeout;
  VAR(Blockage_t, TYPEDEF) Blockage;
  VAR(Damping_t, TYPEDEF) Damping;
  VAR(TargetRate_array_t, TYPEDEF) TargetRate;
  VAR(RoadBeam_array_t, TYPEDEF) RoadBeam;
  VAR(float, TYPEDEF) fNoiseRange;
  VAR(float, TYPEDEF) fTunnelProbability;
  VAR(boolean, TYPEDEF) bNoiseRangeValid;
  VAR(unsigned char, TYPEDEF) ucCarparkState;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
  VAR(Camera_t, TYPEDEF) Camera;
} PerfDegr_t;
#endif
#ifndef RTE_TYPE_PinionSteerAg1Rec
#define RTE_TYPE_PinionSteerAg1Rec
typedef struct
{
  VAR(sint16_t, TYPEDEF) PinionSteerAg1;
  VAR(GenQf_t, TYPEDEF) PinionSteerAg1Qf;
} PinionSteerAg1Rec;
#endif
#ifndef RTE_TYPE_PinionSteerAgSpd1Rec
#define RTE_TYPE_PinionSteerAgSpd1Rec
typedef struct
{
  VAR(sint16_t, TYPEDEF) PinionSteerAgSpd1;
  VAR(GenQf_t, TYPEDEF) PinionSteerAgSpd1Qf;
} PinionSteerAgSpd1Rec;
#endif
#ifndef RTE_TYPE_PitchAgGlbRec1
#define RTE_TYPE_PitchAgGlbRec1
typedef struct
{
  VAR(float32_t, TYPEDEF) Val;
  VAR(uint8_t, TYPEDEF) Qf;
} PitchAgGlbRec1;
#endif
#ifndef RTE_TYPE_PitchAngle
#define RTE_TYPE_PitchAngle
typedef VAR(float, TYPEDEF) PitchAngle;
#endif
#ifndef RTE_TYPE_PosnLat_t
#define RTE_TYPE_PosnLat_t
typedef VAR(int, TYPEDEF) PosnLat_t;
#endif
#ifndef RTE_TYPE_PosnLgt_t
#define RTE_TYPE_PosnLgt_t
typedef VAR(int, TYPEDEF) PosnLgt_t;
#endif
#ifndef RTE_TYPE_uint32_t
#define RTE_TYPE_uint32_t
typedef VAR(unsigned int, TYPEDEF) uint32_t;
#endif
#ifndef RTE_TYPE_sint32_t
#define RTE_TYPE_sint32_t
typedef VAR(int, TYPEDEF) sint32_t;
#endif
#ifndef RTE_TYPE_PosnFromSatlt
#define RTE_TYPE_PosnFromSatlt
typedef struct
{
  VAR(PosnLat_t, TYPEDEF) PosnLat;
  VAR(PosnLgt_t, TYPEDEF) PosnLgt;
  VAR(AltiFromSatlt_t, TYPEDEF) PosnAlti;
  VAR(uint32_t, TYPEDEF) PosnSpd;
  VAR(uint32_t, TYPEDEF) PosnVHozl;
  VAR(sint32_t, TYPEDEF) PosnVVert;
  VAR(uint16_t, TYPEDEF) PosnDir;
  VAR(uint8_t, TYPEDEF) TiForYr;
  VAR(uint8_t, TYPEDEF) TiForMth;
  VAR(uint8_t, TYPEDEF) TiForDay;
  VAR(uint8_t, TYPEDEF) TiForHr;
  VAR(uint8_t, TYPEDEF) TiForMins;
  VAR(uint8_t, TYPEDEF) TiForSec;
  VAR(boolean, TYPEDEF) SatltSysNo1InUse;
  VAR(boolean, TYPEDEF) SatltSysNo2InUse;
  VAR(boolean, TYPEDEF) SatltSysNo3InUse;
  VAR(boolean, TYPEDEF) SatltSysNo4InUse;
  VAR(boolean, TYPEDEF) SatltSysNo5InUse;
  VAR(boolean, TYPEDEF) SatltSysNo6InUse;
  VAR(uint8_t, TYPEDEF) SatltPosnStsPrm1;
  VAR(boolean, TYPEDEF) SatltPosnStsPrm2;
  VAR(boolean, TYPEDEF) SatltPosnStsPrm3;
  VAR(uint8_t, TYPEDEF) NoOfSatltForSysNo1;
  VAR(uint8_t, TYPEDEF) NoOfSatltForSysNo2;
  VAR(uint8_t, TYPEDEF) NoOfSatltForSysNo3;
  VAR(uint8_t, TYPEDEF) NoOfSatltForSysNo4;
  VAR(uint8_t, TYPEDEF) NoOfSatltForSysNo5;
  VAR(uint8_t, TYPEDEF) NoOfSatltForSysNo6;
  VAR(uint8_t, TYPEDEF) PrePosnDil;
  VAR(uint8_t, TYPEDEF) PreHozlDil;
  VAR(uint8_t, TYPEDEF) PreVertDil;
  VAR(uint8_t, TYPEDEF) PreTiDil;
} PosnFromSatlt;
#endif
#ifndef RTE_TYPE_PostImpctBrkgCfmdSafe1
#define RTE_TYPE_PostImpctBrkgCfmdSafe1
typedef struct
{
  VAR(uint8_t, TYPEDEF) PostImpctBrkgCfmd;
  VAR(uint8_t, TYPEDEF) CrashFrnt;
  VAR(uint8_t, TYPEDEF) CrashSideLe;
  VAR(uint8_t, TYPEDEF) CrashSideRi;
  VAR(uint8_t, TYPEDEF) CrashRe;
  VAR(uint8_t, TYPEDEF) CrashRollovr;
  VAR(uint8_t, TYPEDEF) CrashPed;
  VAR(uint8_t, TYPEDEF) CrashOz;
  VAR(uint8_t, TYPEDEF) CrashOffroadD;
  VAR(uint8_t, TYPEDEF) CrashOffroadA;
  VAR(uint8_t, TYPEDEF) CrashOffroadRT;
  VAR(uint8_t, TYPEDEF) CrashOffroadRTsevere;
  VAR(uint8_t, TYPEDEF) CrashLargeAnimal;
  VAR(uint8_t, TYPEDEF) Chks;
  VAR(uint8_t, TYPEDEF) Cntr;
} PostImpctBrkgCfmdSafe1;
#endif
#ifndef RTE_TYPE_PostImpctBrkgSuspcSafe1
#define RTE_TYPE_PostImpctBrkgSuspcSafe1
typedef struct
{
  VAR(uint8_t, TYPEDEF) SuspcPostImpctBrkg;
  VAR(uint8_t, TYPEDEF) Chks;
  VAR(uint8_t, TYPEDEF) Cntr;
} PostImpctBrkgSuspcSafe1;
#endif
#ifndef RTE_TYPE_State_array_t_6
#define RTE_TYPE_State_array_t_6
typedef VAR(VDYIoStateTypes_t, TYPEDEF) State_array_t_6[8];
#endif
#ifndef RTE_TYPE_PowerTrain_t
#define RTE_TYPE_PowerTrain_t
typedef struct
{
  VAR(TransmissionGear_t, TYPEDEF) ActualGear;
  VAR(TransmissionGear_t, TYPEDEF) TargetGear;
  VAR(boolean, TYPEDEF) EngineRunning;
  VAR(unsigned char, TYPEDEF) FillByte;
  VAR(State_array_t_6, TYPEDEF) State;
} PowerTrain_t;
#endif
#ifndef RTE_TYPE_PrecedingMaxLong
#define RTE_TYPE_PrecedingMaxLong
typedef VAR(float, TYPEDEF) PrecedingMaxLong;
#endif
#ifndef RTE_TYPE_PrecedingMaxShort
#define RTE_TYPE_PrecedingMaxShort
typedef VAR(float, TYPEDEF) PrecedingMaxShort;
#endif
#ifndef RTE_TYPE_PrecedingMin
#define RTE_TYPE_PrecedingMin
typedef VAR(float, TYPEDEF) PrecedingMin;
#endif
#ifndef RTE_TYPE_PrecedingMinWiperOn
#define RTE_TYPE_PrecedingMinWiperOn
typedef VAR(float, TYPEDEF) PrecedingMinWiperOn;
#endif
#ifndef RTE_TYPE_ProbabilityOfExistence
#define RTE_TYPE_ProbabilityOfExistence
typedef VAR(unsigned char, TYPEDEF) ProbabilityOfExistence;
#endif
#ifndef RTE_TYPE_ProductionParameter_t
#define RTE_TYPE_ProductionParameter_t
typedef struct
{
  VAR(AntennaPar_BaseType_t, TYPEDEF) AntennaPar_Base;
  VAR(PPAR_t_VCOandGyroParams, TYPEDEF) VCOandGyroParams;
  VAR(PPAR_t_Reserved1Array, TYPEDEF) a_ProdParamsReservedArray;
  VAR(PPAR_t_CustomerHardwareNumberArray, TYPEDEF) a_CustomerHardwareNumber;
  VAR(PPAR_t_SerialNumberArray, TYPEDEF) a_TemicSerialNumber;
  VAR(unsigned short, TYPEDEF) u_Alignment;
  VAR(PPAR_t_HwSampAdaptInf, TYPEDEF) HwSampAdaptInf;
  VAR(PPAR_t_HilData, TYPEDEF) HilData;
  VAR(PPAR_t_EthernetParameters, TYPEDEF) EthernetParameters;
  VAR(PPAR_t_OemSwBlockArray, TYPEDEF) a_OemSwBlock;
  VAR(PPAR_t_AngleDeviationNearArray, TYPEDEF) a_MeasAngleNearBF;
  VAR(PPAR_t_MeasAngleNearMPArray, TYPEDEF) a_MeasAngleNearMP;
  VAR(PPAR_t_ComplexIQValuesNearArray, TYPEDEF) a_ComplexIQValuesNear;
  VAR(PPAR_t_AngleDeviationFarArray, TYPEDEF) a_MeasAngleFarBF;
  VAR(PPAR_t_ComplexIQValuesFarArray, TYPEDEF) a_ComplexIQValuesFar;
  VAR(PPAR_t_DecayTargetNormSNearAzimuthArray, TYPEDEF) a_DecayTargetNormSFarAzimuth;
  VAR(unsigned char, TYPEDEF) Psw_VgaTx1Far;
  VAR(unsigned char, TYPEDEF) Psw_VgaTx2Far;
  VAR(unsigned char, TYPEDEF) Psw_VgaTx1Near;
  VAR(unsigned char, TYPEDEF) Psw_VgaTx2Near;
  VAR(unsigned char, TYPEDEF) RxGainSettings;
  VAR(PPAR_t_ElevationAngleDeviationFar, TYPEDEF) a_ElevationAngleDeviationFar;
  VAR(short, TYPEDEF) s_MsbTransDipAreaInLSBns;
} ProductionParameter_t;
#endif
#ifndef RTE_TYPE_PtALgtReqForCmftEnaType_t
#define RTE_TYPE_PtALgtReqForCmftEnaType_t
typedef VAR(unsigned char, TYPEDEF) PtALgtReqForCmftEnaType_t;
#endif
#ifndef RTE_TYPE_PtALgtReqForCmftRec1
#define RTE_TYPE_PtALgtReqForCmftRec1
typedef struct
{
  VAR(sint16_t, TYPEDEF) PtALgtReqForCmft;
  VAR(sint16_t, TYPEDEF) PtCmftLgtNegLimForJerk;
  VAR(sint16_t, TYPEDEF) PtCmftLgtPosLimForJerk;
  VAR(PtALgtReqForCmftEnaType_t, TYPEDEF) PtALgtReqForCmftEna;
} PtALgtReqForCmftRec1;
#endif
#ifndef RTE_TYPE_PtTqAtAxleAddReqRec1
#define RTE_TYPE_PtTqAtAxleAddReqRec1
typedef struct
{
  VAR(uint16_t, TYPEDEF) PtTqAtAxleAddFrntReq;
  VAR(uint16_t, TYPEDEF) PtTqAtAxleAddReReq;
  VAR(uint8_t, TYPEDEF) PtTqAtAxleAddReqChks;
  VAR(uint8_t, TYPEDEF) PtTqAtAxleAddReqCntr;
} PtTqAtAxleAddReqRec1;
#endif
#ifndef RTE_TYPE_PtTqAtAxleFrntMinReqRec1
#define RTE_TYPE_PtTqAtAxleFrntMinReqRec1
typedef struct
{
  VAR(sint16_t, TYPEDEF) PtTqAtAxleFrntMinReq;
  VAR(uint8_t, TYPEDEF) PtTqAtAxleFrntMinReqChks;
  VAR(uint8_t, TYPEDEF) PtTqAtAxleFrntMinReqCntr;
} PtTqAtAxleFrntMinReqRec1;
#endif
#ifndef RTE_TYPE_PtTqAtAxleReMinReqRec1
#define RTE_TYPE_PtTqAtAxleReMinReqRec1
typedef struct
{
  VAR(sint16_t, TYPEDEF) PtTqAtAxleReMinReq;
  VAR(uint8_t, TYPEDEF) PtTqAtAxleReMinReqChks;
  VAR(uint8_t, TYPEDEF) PtTqAtAxleReMinReqCntr;
} PtTqAtAxleReMinReqRec1;
#endif
#ifndef RTE_TYPE_PtTqAtWhlFrntActRec1
#define RTE_TYPE_PtTqAtWhlFrntActRec1
typedef struct
{
  VAR(sint16_t, TYPEDEF) PtTqAtWhlFrntLeAct;
  VAR(sint16_t, TYPEDEF) PtTqAtWhlFrntRiAct;
  VAR(sint16_t, TYPEDEF) PtTqAtAxleFrntAct;
  VAR(uint8_t, TYPEDEF) PtTqAtWhlsFrntQly;
} PtTqAtWhlFrntActRec1;
#endif
#ifndef RTE_TYPE_PtTqAtWhlReActRec1
#define RTE_TYPE_PtTqAtWhlReActRec1
typedef struct
{
  VAR(sint16_t, TYPEDEF) PtTqAtWhlReLeAct;
  VAR(sint16_t, TYPEDEF) PtTqAtWhlReRiAct;
  VAR(sint16_t, TYPEDEF) PtTqAtAxleReAct;
  VAR(uint8_t, TYPEDEF) PtTqAtWhlsReQly;
} PtTqAtWhlReActRec1;
#endif
#ifndef RTE_TYPE_PtTqMaxReqRec1
#define RTE_TYPE_PtTqMaxReqRec1
typedef struct
{
  VAR(sint16_t, TYPEDEF) PtTqMaxReq;
  VAR(uint16_t, TYPEDEF) PtTqGrdtNegForMaxReq;
  VAR(uint16_t, TYPEDEF) PtTqGrdtPosForMaxReq;
  VAR(uint8_t, TYPEDEF) PtTqReqCntr;
  VAR(uint8_t, TYPEDEF) PtTqReqChks;
} PtTqMaxReqRec1;
#endif
#ifndef RTE_TYPE_PtTqMinReqRec1
#define RTE_TYPE_PtTqMinReqRec1
typedef struct
{
  VAR(sint16_t, TYPEDEF) PtTqMinReq;
  VAR(uint16_t, TYPEDEF) PtTqGrdtNegForMinReq;
  VAR(uint16_t, TYPEDEF) PtTqGrdtPosForMinReq;
  VAR(uint8_t, TYPEDEF) PtTqReqCntr;
  VAR(uint8_t, TYPEDEF) PtTqReqChks;
} PtTqMinReqRec1;
#endif
#ifndef RTE_TYPE_PtTqReqRec1
#define RTE_TYPE_PtTqReqRec1
typedef struct
{
  VAR(sint16_t, TYPEDEF) PtTqMinReq;
  VAR(sint16_t, TYPEDEF) PtTqMaxReq;
  VAR(uint8_t, TYPEDEF) PtTqReqCntr;
  VAR(uint8_t, TYPEDEF) PtTqReqChks;
} PtTqReqRec1;
#endif
#ifndef RTE_TYPE_QuRoadBankAngle
#define RTE_TYPE_QuRoadBankAngle
typedef VAR(fQuality_t, TYPEDEF) QuRoadBankAngle;
#endif
#ifndef RTE_TYPE_QuSelfSteerGradEst
#define RTE_TYPE_QuSelfSteerGradEst
typedef VAR(fQuality_t, TYPEDEF) QuSelfSteerGradEst;
#endif
#ifndef RTE_TYPE_RCG_OpMode_t
#define RTE_TYPE_RCG_OpMode_t
typedef VAR(unsigned char, TYPEDEF) RCG_OpMode_t;
#endif
#ifndef RTE_TYPE_RCG_ControlData
#define RTE_TYPE_RCG_ControlData
typedef struct
{
  VAR(unsigned int, TYPEDEF) versionNumber;
  VAR(SignalHeader_t, TYPEDEF) sigHeader;
  VAR(RCG_OpMode_t, TYPEDEF) opMode;
} RCG_ControlData;
#endif
#ifndef RTE_TYPE_RCG_ExternObject
#define RTE_TYPE_RCG_ExternObject
typedef struct
{
  VAR(float, TYPEDEF) distanceX;
  VAR(float, TYPEDEF) distanceY;
  VAR(float, TYPEDEF) velocityRelativeX;
  VAR(float, TYPEDEF) velocityRelativeY;
  VAR(unsigned int, TYPEDEF) objectClass;
} RCG_ExternObject;
#endif
#ifndef RTE_TYPE_objectList_array_t
#define RTE_TYPE_objectList_array_t
typedef VAR(RCG_ExternObject, TYPEDEF) objectList_array_t[40];
#endif
#ifndef RTE_TYPE_RCG_ExternObjectList
#define RTE_TYPE_RCG_ExternObjectList
typedef struct
{
  VAR(unsigned int, TYPEDEF) versionNumber;
  VAR(SignalHeader_t, TYPEDEF) sigHeader;
  VAR(unsigned int, TYPEDEF) numOfObjects;
  VAR(objectList_array_t, TYPEDEF) objectList;
} RCG_ExternObjectList;
#endif
#ifndef RTE_TYPE_RHC_t_Content
#define RTE_TYPE_RHC_t_Content
typedef struct
{
  VAR(float, TYPEDEF) f_dfLpAv;
  VAR(float, TYPEDEF) f_MsbTransDipAreaInLSBns;
  VAR(unsigned short, TYPEDEF) u_DacCoarse;
  VAR(unsigned char, TYPEDEF) u_VtuneGain;
  VAR(unsigned char, TYPEDEF) u_res;
} RHC_t_Content;
#endif
#ifndef RTE_TYPE_u_Reserved_array_t
#define RTE_TYPE_u_Reserved_array_t
typedef VAR(AlgoErrorState_t, TYPEDEF) u_Reserved_array_t[1];
#endif
#ifndef RTE_TYPE_RHC_NVM_INTVER
#define RTE_TYPE_RHC_NVM_INTVER
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(RHC_t_Content, TYPEDEF) NvmData;
  VAR(unsigned char, TYPEDEF) u_DataValid;
  VAR(u_Reserved_array_t, TYPEDEF) u_reserved;
} RHC_NVM_INTVER;
#endif
#ifndef RTE_TYPE_RHC_t_RampPar
#define RTE_TYPE_RHC_t_RampPar
typedef struct
{
  VAR(float, TYPEDEF) f_RangeGateLength;
  VAR(float, TYPEDEF) f_MidFrequ;
} RHC_t_RampPar;
#endif
#ifndef RTE_TYPE_as_PathCompensation_array_t
#define RTE_TYPE_as_PathCompensation_array_t
typedef VAR(t_Complex16, TYPEDEF) as_PathCompensation_array_t[6];
#endif
#ifndef RTE_TYPE_aui16_AzimuthWindow_array_t
#define RTE_TYPE_aui16_AzimuthWindow_array_t
typedef VAR(unsigned short, TYPEDEF) aui16_AzimuthWindow_array_t[16];
#endif
#ifndef RTE_TYPE_RHC_t_AdjHwConfig
#define RTE_TYPE_RHC_t_AdjHwConfig
typedef struct
{
  VAR(unsigned int, TYPEDEF) i_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(RHC_t_RampPar, TYPEDEF) RampPar;
  VAR(float, TYPEDEF) f_TargetNormS;
  VAR(float, TYPEDEF) f_TargetNormSN;
  VAR(float, TYPEDEF) f_MonopulseBeamOffset;
  VAR(float, TYPEDEF) f_RampPeriod;
  VAR(float, TYPEDEF) f_GainReduction;
  VAR(unsigned char, TYPEDEF) u_GainReduction;
  VAR(unsigned char, TYPEDEF) u_WindowBeamIdx;
  VAR(unsigned char, TYPEDEF) DataValid;
  VAR(unsigned char, TYPEDEF) u_CurrentRfIndex;
  VAR(unsigned char, TYPEDEF) u_RangeWindowIdx;
  VAR(unsigned char, TYPEDEF) u_DopplerWindowIdx;
  VAR(unsigned char, TYPEDEF) u_MsbCorrIndex;
  VAR(as_PathCompensation_array_t, TYPEDEF) as_PathCompensation;
  VAR(aui16_AzimuthWindow_array_t, TYPEDEF) aui16_AzimuthWindow;
} RHC_t_AdjHwConfig;
#endif
#ifndef RTE_TYPE_u_OpMode_t
#define RTE_TYPE_u_OpMode_t
typedef VAR(unsigned char, TYPEDEF) u_OpMode_t;
#endif
#ifndef RTE_TYPE_u_Dummy_array_t_11
#define RTE_TYPE_u_Dummy_array_t_11
typedef VAR(unsigned char, TYPEDEF) u_Dummy_array_t_11[3];
#endif
#ifndef RTE_TYPE_RHC_t_BswIn
#define RTE_TYPE_RHC_t_BswIn
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(t_SensorTemperature, TYPEDEF) SensorTemperature;
  VAR(SYS_t_HWSample, TYPEDEF) HWSample;
  VAR(u_OpMode_t, TYPEDEF) u_OpMode;
  VAR(u_Dummy_array_t_11, TYPEDEF) u_Dummy;
  VAR(unsigned int, TYPEDEF) u_Sp1ExecTimeNearUs;
  VAR(float, TYPEDEF) f_ATICSwitchFrequ;
  VAR(float, TYPEDEF) f_RfPowerReductionNear;
} RHC_t_BswIn;
#endif
#ifndef RTE_TYPE_u_Dummy_array_t_12
#define RTE_TYPE_u_Dummy_array_t_12
typedef VAR(unsigned char, TYPEDEF) u_Dummy_array_t_12[3];
#endif
#ifndef RTE_TYPE_RHC_t_FdcMonErrors
#define RTE_TYPE_RHC_t_FdcMonErrors
typedef struct
{
  VAR(AlgoErrorState_t, TYPEDEF) u_ChirpMonRgLengthError;
  VAR(AlgoErrorState_t, TYPEDEF) u_ChirpMonMidFreqError;
  VAR(AlgoErrorState_t, TYPEDEF) u_ChirpMonRmseTooLarge;
  VAR(AlgoErrorState_t, TYPEDEF) u_ChirpMonFreqErrorSpecTooLarge;
  VAR(AlgoErrorState_t, TYPEDEF) u_ChirpMonLongTermError;
  VAR(AlgoErrorState_t, TYPEDEF) u_FdcRmseTooLarge;
  VAR(AlgoErrorState_t, TYPEDEF) u_FdcDriftFreqTooLarge;
  VAR(AlgoErrorState_t, TYPEDEF) u_FdcLongTermError;
} RHC_t_FdcMonErrors;
#endif
#ifndef RTE_TYPE_RHC_t_GeneralRhcErrors
#define RTE_TYPE_RHC_t_GeneralRhcErrors
typedef struct
{
  VAR(AlgoErrorState_t, TYPEDEF) u_AdcOffsetTooHigh;
  VAR(AlgoErrorState_t, TYPEDEF) u_AdcOverflowLowGain;
  VAR(AlgoErrorState_t, TYPEDEF) u_VcoOffsetTooHigh;
  VAR(AlgoErrorState_t, TYPEDEF) u_VcoPowerTooLow;
  VAR(AlgoErrorState_t, TYPEDEF) u_VcoPowerTooHigh;
  VAR(AlgoErrorState_t, TYPEDEF) u_VcoUpperFrequTooLow;
  VAR(AlgoErrorState_t, TYPEDEF) u_VcoLowerFrequTooHigh;
  VAR(AlgoErrorState_t, TYPEDEF) u_LoadPullingTooHighNS;
  VAR(AlgoErrorState_t, TYPEDEF) u_FrequencyBandNotCoveredNS;
  VAR(AlgoErrorState_t, TYPEDEF) u_NoChirpCalculationPossibleNS;
  VAR(AlgoErrorState_t, TYPEDEF) u_ErroneusVcoMeas;
  VAR(AlgoErrorState_t, TYPEDEF) u_CteLutDurStuckError;
  VAR(AlgoErrorState_t, TYPEDEF) u_CteLutContentionErr;
  VAR(AlgoErrorState_t, TYPEDEF) u_SmdaFifoOverflow;
  VAR(AlgoErrorState_t, TYPEDEF) u_WgmCksmErr;
  VAR(u_Reserved_array_t, TYPEDEF) u_Reserved;
} RHC_t_GeneralRhcErrors;
#endif
#ifndef RTE_TYPE_u_Reserved_array_t_0
#define RTE_TYPE_u_Reserved_array_t_0
typedef VAR(AlgoErrorState_t, TYPEDEF) u_Reserved_array_t_0[2];
#endif
#ifndef RTE_TYPE_RHC_t_RxTestErrors
#define RTE_TYPE_RHC_t_RxTestErrors
typedef struct
{
  VAR(AlgoErrorState_t, TYPEDEF) u_NoisePowerTooHigh;
  VAR(AlgoErrorState_t, TYPEDEF) u_NoisePowerLongTermError;
  VAR(AlgoErrorState_t, TYPEDEF) u_SpuriousPeaksTooHigh;
  VAR(AlgoErrorState_t, TYPEDEF) u_SpuriousPeaksLongTermError;
  VAR(AlgoErrorState_t, TYPEDEF) u_SignalPowerTooLow;
  VAR(AlgoErrorState_t, TYPEDEF) u_SignalPowerLongTermError;
  VAR(AlgoErrorState_t, TYPEDEF) u_TransferFunctionError;
  VAR(AlgoErrorState_t, TYPEDEF) u_TransferFunctionLongTermError;
  VAR(AlgoErrorState_t, TYPEDEF) u_ChannelVariationError;
  VAR(AlgoErrorState_t, TYPEDEF) u_ChannelVariationLongTermError;
  VAR(AlgoErrorState_t, TYPEDEF) u_StcFilterError;
  VAR(AlgoErrorState_t, TYPEDEF) u_StcFilterLongTermError;
  VAR(AlgoErrorState_t, TYPEDEF) u_NonlinearError;
  VAR(AlgoErrorState_t, TYPEDEF) u_NonlinearLongTermError;
  VAR(u_Reserved_array_t_0, TYPEDEF) u_Reserved;
} RHC_t_RxTestErrors;
#endif
#ifndef RTE_TYPE_RHC_t_RccControl
#define RTE_TYPE_RHC_t_RccControl
typedef struct
{
  VAR(unsigned char, TYPEDEF) u_NearScanSettings;
  VAR(unsigned char, TYPEDEF) u_NearPlateauSettings;
} RHC_t_RccControl;
#endif
#ifndef RTE_TYPE_RHC_t_BswOut
#define RTE_TYPE_RHC_t_BswOut
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(unsigned char, TYPEDEF) u_OpMode;
  VAR(u_Dummy_array_t_12, TYPEDEF) u_Dummy;
  VAR(RHC_t_FdcMonErrors, TYPEDEF) FdcMonErrorsNS;
  VAR(RHC_t_GeneralRhcErrors, TYPEDEF) GeneralRhcErrors;
  VAR(RHC_t_RxTestErrors, TYPEDEF) RxTestErrors;
  VAR(RHC_t_RccControl, TYPEDEF) RccControl;
} RHC_t_BswOut;
#endif
#ifndef RTE_TYPE_RHC_t_EventConfigRSP1
#define RTE_TYPE_RHC_t_EventConfigRSP1
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(unsigned short, TYPEDEF) u_RgStartRHC1Exec;
  VAR(unsigned short, TYPEDEF) u_RgStartRHC1PreVcoCalibNear;
  VAR(unsigned short, TYPEDEF) u_RgStartRHC1PreVcoCalibFar;
  VAR(unsigned short, TYPEDEF) u_RgStartRHC1PreVcoCalibTxOff;
  VAR(unsigned short, TYPEDEF) u_RgStartRXTest;
} RHC_t_EventConfigRSP1;
#endif
#ifndef RTE_TYPE_u_GainRxChipNear_t
#define RTE_TYPE_u_GainRxChipNear_t
typedef VAR(unsigned char, TYPEDEF) u_GainRxChipNear_t;
#endif
#ifndef RTE_TYPE_u_TxPaCodeNear_array_t
#define RTE_TYPE_u_TxPaCodeNear_array_t
typedef VAR(unsigned char, TYPEDEF) u_TxPaCodeNear_array_t[2];
#endif
#ifndef RTE_TYPE_RHC_t_RfComOut
#define RTE_TYPE_RHC_t_RfComOut
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(u_GainRxChipNear_t, TYPEDEF) u_GainRxChipNear;
  VAR(u_TxPaCodeNear_array_t, TYPEDEF) u_TxPaCodeNear;
} RHC_t_RfComOut;
#endif
#ifndef RTE_TYPE_RSP_t_RBHeader
#define RTE_TYPE_RSP_t_RBHeader
typedef struct
{
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(unsigned short, TYPEDEF) u_NofRGs;
  VAR(unsigned short, TYPEDEF) u_NofDoppler;
  VAR(unsigned short, TYPEDEF) u_MidDoppler;
  VAR(unsigned short, TYPEDEF) u_StartRG;
} RSP_t_RBHeader;
#endif
#ifndef RTE_TYPE_t_Complex8
#define RTE_TYPE_t_Complex8
typedef struct
{
  VAR(signed char, TYPEDEF) s_Real;
  VAR(signed char, TYPEDEF) s_Imag;
} t_Complex8;
#endif
#ifndef RTE_TYPE_a_Channels_array_t_1
#define RTE_TYPE_a_Channels_array_t_1
typedef VAR(t_Complex8, TYPEDEF) a_Channels_array_t_1[4];
#endif
#ifndef RTE_TYPE_RSP_t_RBSpecBeamCmplx
#define RTE_TYPE_RSP_t_RBSpecBeamCmplx
typedef struct
{
  VAR(unsigned short, TYPEDEF) u_PowerScaleFactor;
  VAR(a_Channels_array_t_1, TYPEDEF) a_Channels;
} RSP_t_RBSpecBeamCmplx;
#endif
#ifndef RTE_TYPE_RSP_t_RBSpecBeamDoppler
#define RTE_TYPE_RSP_t_RBSpecBeamDoppler
typedef VAR(RSP_t_RBSpecBeamCmplx, TYPEDEF) RSP_t_RBSpecBeamDoppler[21];
#endif
#ifndef RTE_TYPE_a_RoadBeam_array_t
#define RTE_TYPE_a_RoadBeam_array_t
typedef VAR(RSP_t_RBSpecBeamDoppler, TYPEDEF) a_RoadBeam_array_t[21];
#endif
#ifndef RTE_TYPE_RSP_RoadBeamNS
#define RTE_TYPE_RSP_RoadBeamNS
typedef struct
{
  VAR(RSP_t_RBHeader, TYPEDEF) RBListHead;
  VAR(a_RoadBeam_array_t, TYPEDEF) a_RoadBeam;
} RSP_RoadBeamNS;
#endif
#ifndef RTE_TYPE_t_Channels
#define RTE_TYPE_t_Channels
typedef VAR(t_Complex8, TYPEDEF) t_Channels[16];
#endif
#ifndef RTE_TYPE_RSP_t_Channels
#define RTE_TYPE_RSP_t_Channels
typedef struct
{
  VAR(float, TYPEDEF) f_PowerScaleFactor;
  VAR(t_Channels, TYPEDEF) a_Channels;
} RSP_t_Channels;
#endif
#ifndef RTE_TYPE_RSP_t_ChirpMonArtifact
#define RTE_TYPE_RSP_t_ChirpMonArtifact
typedef struct
{
  VAR(float, TYPEDEF) f_MaxArtifactDb;
  VAR(unsigned char, TYPEDEF) f_MaxArtifactQual;
  VAR(float, TYPEDEF) f_MaxArtifactDbInstant;
} RSP_t_ChirpMonArtifact;
#endif
#ifndef RTE_TYPE_a_FreqErrorSpecCplx_array_t
#define RTE_TYPE_a_FreqErrorSpecCplx_array_t
typedef VAR(t_Complexf32, TYPEDEF) a_FreqErrorSpecCplx_array_t[16];
#endif
#ifndef RTE_TYPE_RSP_t_ChirpMonMsbCorr
#define RTE_TYPE_RSP_t_ChirpMonMsbCorr
typedef struct
{
  VAR(a_FreqErrorSpecCplx_array_t, TYPEDEF) a_FreqErrorSpecCplx;
} RSP_t_ChirpMonMsbCorr;
#endif
#ifndef RTE_TYPE_u_Dummy_array_t_13
#define RTE_TYPE_u_Dummy_array_t_13
typedef VAR(unsigned char, TYPEDEF) u_Dummy_array_t_13[2];
#endif
#ifndef RTE_TYPE_RSP_t_ClustListHeader
#define RTE_TYPE_RSP_t_ClustListHeader
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(AlgoDataTimeStamp_t, TYPEDEF) u_TimeStamp;
  VAR(float, TYPEDEF) f_AmbFreeDopplerRange;
  VAR(unsigned int, TYPEDEF) u_NofClusters;
  VAR(float, TYPEDEF) f_RangeGateLength;
  VAR(float, TYPEDEF) f_RangeLimit;
  VAR(float, TYPEDEF) f_MaximumSensorRange;
  VAR(float, TYPEDEF) f_MinimumSensorRange;
  VAR(float, TYPEDEF) f_NearRangeGhostRatio;
  VAR(float, TYPEDEF) f_NearRangeGhostQuality;
  VAR(boolean, TYPEDEF) b_ExtraDistInfluencedByLargePeak;
  VAR(boolean, TYPEDEF) b_MaxRangeInfluencedByLargePeak;
  VAR(u_Dummy_array_t_13, TYPEDEF) u_Dummy;
} RSP_t_ClustListHeader;
#endif
#ifndef RTE_TYPE_a_AzAng_array_t
#define RTE_TYPE_a_AzAng_array_t
typedef VAR(float, TYPEDEF) a_AzAng_array_t[2];
#endif
#ifndef RTE_TYPE_a_Pdh0_array_t
#define RTE_TYPE_a_Pdh0_array_t
typedef VAR(unsigned char, TYPEDEF) a_Pdh0_array_t[8];
#endif
#ifndef RTE_TYPE_RSP_t_Cluster
#define RTE_TYPE_RSP_t_Cluster
typedef struct
{
  VAR(float, TYPEDEF) f_VrelRad;
  VAR(float, TYPEDEF) f_RangeRad;
  VAR(float, TYPEDEF) f_RangeExtens;
  VAR(a_AzAng_array_t, TYPEDEF) a_AzAng;
  VAR(t_Complex8, TYPEDEF) ComplMaxBeam;
  VAR(t_Complex8, TYPEDEF) ComplMonoPulseBeam;
  VAR(float, TYPEDEF) f_RcsRaw;
  VAR(float, TYPEDEF) f_AzAngVar;
  VAR(float, TYPEDEF) f_VrelRadVar;
  VAR(float, TYPEDEF) f_RangeRadVar;
  VAR(float, TYPEDEF) f_RangeExtrapol;
  VAR(a_Pdh0_array_t, TYPEDEF) a_Pdh0;
  VAR(unsigned short, TYPEDEF) u_IdxPreCluster;
  VAR(unsigned short, TYPEDEF) u_ByteAlignment;
} RSP_t_Cluster;
#endif
#ifndef RTE_TYPE_a_Clusters_array_t_1
#define RTE_TYPE_a_Clusters_array_t_1
typedef VAR(RSP_t_Cluster, TYPEDEF) a_Clusters_array_t_1[768];
#endif
#ifndef RTE_TYPE_RSP_t_ClusterListNS
#define RTE_TYPE_RSP_t_ClusterListNS
typedef struct
{
  VAR(RSP_t_ClustListHeader, TYPEDEF) ClustListHead;
  VAR(a_Clusters_array_t_1, TYPEDEF) a_Clusters;
} RSP_t_ClusterListNS;
#endif
#ifndef RTE_TYPE_RSP_t_FdcMonResult
#define RTE_TYPE_RSP_t_FdcMonResult
typedef struct
{
  VAR(float, TYPEDEF) f_ChirpMonRgLength;
  VAR(float, TYPEDEF) f_ChirpMonMidFreq;
  VAR(float, TYPEDEF) f_ChirpMonRmse;
  VAR(float, TYPEDEF) f_ChirpMonFreqErrorSpecMinDev;
  VAR(unsigned char, TYPEDEF) u_ChirpMonFreqErrorSpecQual;
  VAR(float, TYPEDEF) f_FdcRmse;
  VAR(float, TYPEDEF) f_FdcDriftFreq;
} RSP_t_FdcMonResult;
#endif
#ifndef RTE_TYPE_RSP_t_FdcMonResultHeader
#define RTE_TYPE_RSP_t_FdcMonResultHeader
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
} RSP_t_FdcMonResultHeader;
#endif
#ifndef RTE_TYPE_RSP_t_FdcMonResultNS
#define RTE_TYPE_RSP_t_FdcMonResultNS
typedef struct
{
  VAR(RSP_t_FdcMonResultHeader, TYPEDEF) FdcMonResultHeader;
  VAR(RSP_t_ChirpMonArtifact, TYPEDEF) ChirpMonArtifact;
  VAR(RSP_t_ChirpMonMsbCorr, TYPEDEF) ChirpMonMsbCorr;
  VAR(RSP_t_FdcMonResult, TYPEDEF) FdcMonResult;
} RSP_t_FdcMonResultNS;
#endif
#ifndef RTE_TYPE_RSP_t_OpMode
#define RTE_TYPE_RSP_t_OpMode
typedef VAR(unsigned char, TYPEDEF) RSP_t_OpMode;
#endif
#ifndef RTE_TYPE_SYS_t_Scans
#define RTE_TYPE_SYS_t_Scans
typedef VAR(unsigned char, TYPEDEF) SYS_t_Scans;
#endif
#ifndef RTE_TYPE_RSP_t_NRGParams
#define RTE_TYPE_RSP_t_NRGParams
typedef struct
{
  VAR(float, TYPEDEF) f_TimeFilterConst;
  VAR(float, TYPEDEF) f_MaxRangeGate;
  VAR(float, TYPEDEF) f_MinDopplerGate;
  VAR(float, TYPEDEF) f_MinRcs;
} RSP_t_NRGParams;
#endif
#ifndef RTE_TYPE_RSP_t_InputActl
#define RTE_TYPE_RSP_t_InputActl
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_InterfaceVersion;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(RSP_t_OpMode, TYPEDEF) RSPOpMode;
  VAR(SYS_t_Scans, TYPEDEF) ScanMode;
  VAR(SYS_t_HWSample, TYPEDEF) HWSample;
  VAR(RSP_t_NRGParams, TYPEDEF) NearRangeGhostParams;
  VAR(boolean, TYPEDEF) b_ExtendedCycle;
} RSP_t_InputActl;
#endif
#ifndef RTE_TYPE_t_NoiseMin
#define RTE_TYPE_t_NoiseMin
typedef struct
{
  VAR(float, TYPEDEF) f_NoiseMin;
  VAR(boolean, TYPEDEF) b_InfluencedByLargePeak;
} t_NoiseMin;
#endif
#ifndef RTE_TYPE_a_NoiseMinBeam_array_t
#define RTE_TYPE_a_NoiseMinBeam_array_t
typedef VAR(t_NoiseMin, TYPEDEF) a_NoiseMinBeam_array_t[16];
#endif
#ifndef RTE_TYPE_a_NoiseMaxBeam_array_t
#define RTE_TYPE_a_NoiseMaxBeam_array_t
typedef VAR(float, TYPEDEF) a_NoiseMaxBeam_array_t[16];
#endif
#ifndef RTE_TYPE_RSP_t_Noise
#define RTE_TYPE_RSP_t_Noise
typedef struct
{
  VAR(a_NoiseMinBeam_array_t, TYPEDEF) a_NoiseMinBeam;
  VAR(a_NoiseMaxBeam_array_t, TYPEDEF) a_NoiseMaxBeam;
  VAR(unsigned int, TYPEDEF) u_InterferenceCounter1;
  VAR(unsigned int, TYPEDEF) u_InterferenceCounter2;
  VAR(unsigned int, TYPEDEF) u_InterferenceThresMax;
  VAR(unsigned int, TYPEDEF) u_InterferenceThresMean;
  VAR(float, TYPEDEF) f_ThresSnr;
} RSP_t_Noise;
#endif
#ifndef RTE_TYPE_RSP_t_NoiseHeader
#define RTE_TYPE_RSP_t_NoiseHeader
typedef struct
{
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
} RSP_t_NoiseHeader;
#endif
#ifndef RTE_TYPE_RSP_t_NoiseNS
#define RTE_TYPE_RSP_t_NoiseNS
typedef struct
{
  VAR(RSP_t_NoiseHeader, TYPEDEF) NoiseHeader;
  VAR(RSP_t_Noise, TYPEDEF) Noise;
} RSP_t_NoiseNS;
#endif
#ifndef RTE_TYPE_u_Dummy_array_t_14
#define RTE_TYPE_u_Dummy_array_t_14
typedef VAR(unsigned char, TYPEDEF) u_Dummy_array_t_14[2];
#endif
#ifndef RTE_TYPE_RSP_t_OutputRhc
#define RTE_TYPE_RSP_t_OutputRhc
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(unsigned char, TYPEDEF) u_ChangeRfIndex;
  VAR(unsigned char, TYPEDEF) u_EMCInterference;
  VAR(u_Dummy_array_t_14, TYPEDEF) u_Dummy;
} RSP_t_OutputRhc;
#endif
#ifndef RTE_TYPE_a_SpecPow_array_t
#define RTE_TYPE_a_SpecPow_array_t
typedef VAR(unsigned short, TYPEDEF) a_SpecPow_array_t[16];
#endif
#ifndef RTE_TYPE_a_SpecPowIdxDopplerPrev_array_t
#define RTE_TYPE_a_SpecPowIdxDopplerPrev_array_t
typedef VAR(unsigned short, TYPEDEF) a_SpecPowIdxDopplerPrev_array_t[16];
#endif
#ifndef RTE_TYPE_a_SpecPowIdxDopplerNext_array_t
#define RTE_TYPE_a_SpecPowIdxDopplerNext_array_t
typedef VAR(unsigned short, TYPEDEF) a_SpecPowIdxDopplerNext_array_t[16];
#endif
#ifndef RTE_TYPE_a_SpecPowIdxRangePrev_array_t
#define RTE_TYPE_a_SpecPowIdxRangePrev_array_t
typedef VAR(unsigned short, TYPEDEF) a_SpecPowIdxRangePrev_array_t[16];
#endif
#ifndef RTE_TYPE_a_SpecPowIdxRangeNext_array_t
#define RTE_TYPE_a_SpecPowIdxRangeNext_array_t
typedef VAR(unsigned short, TYPEDEF) a_SpecPowIdxRangeNext_array_t[16];
#endif
#ifndef RTE_TYPE_a_ChannelsDopplerPrev_array_t
#define RTE_TYPE_a_ChannelsDopplerPrev_array_t
typedef VAR(t_Complex8, TYPEDEF) a_ChannelsDopplerPrev_array_t[8];
#endif
#ifndef RTE_TYPE_a_ChannelsDopplerNext_array_t
#define RTE_TYPE_a_ChannelsDopplerNext_array_t
typedef VAR(t_Complex8, TYPEDEF) a_ChannelsDopplerNext_array_t[8];
#endif
#ifndef RTE_TYPE_a_Channels_array_t
#define RTE_TYPE_a_Channels_array_t
typedef VAR(t_Complex8, TYPEDEF) a_Channels_array_t[8];
#endif
#ifndef RTE_TYPE_u_ByteAlignment_array_t_0
#define RTE_TYPE_u_ByteAlignment_array_t_0
typedef VAR(unsigned char, TYPEDEF) u_ByteAlignment_array_t_0[10];
#endif
#ifndef RTE_TYPE_RSP_t_Peak
#define RTE_TYPE_RSP_t_Peak
typedef struct
{
  VAR(a_SpecPow_array_t, TYPEDEF) a_SpecPow;
  VAR(a_SpecPowIdxDopplerPrev_array_t, TYPEDEF) a_SpecPowIdxDopplerPrev;
  VAR(a_SpecPowIdxDopplerNext_array_t, TYPEDEF) a_SpecPowIdxDopplerNext;
  VAR(a_SpecPowIdxRangePrev_array_t, TYPEDEF) a_SpecPowIdxRangePrev;
  VAR(a_SpecPowIdxRangeNext_array_t, TYPEDEF) a_SpecPowIdxRangeNext;
  VAR(a_ChannelsDopplerPrev_array_t, TYPEDEF) a_ChannelsDopplerPrev;
  VAR(a_ChannelsDopplerNext_array_t, TYPEDEF) a_ChannelsDopplerNext;
  VAR(a_Channels_array_t, TYPEDEF) a_Channels;
  VAR(unsigned short, TYPEDEF) u_BitFieldBeams;
  VAR(unsigned short, TYPEDEF) u_IdxDoppler;
  VAR(unsigned short, TYPEDEF) u_PowMax;
  VAR(u_ByteAlignment_array_t_0, TYPEDEF) u_ByteAlignment;
} RSP_t_Peak;
#endif
#ifndef RTE_TYPE_a_Peaks_array_t
#define RTE_TYPE_a_Peaks_array_t
typedef VAR(RSP_t_Peak, TYPEDEF) a_Peaks_array_t[64];
#endif
#ifndef RTE_TYPE_RSP_t_PeakListNS
#define RTE_TYPE_RSP_t_PeakListNS
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(a_Peaks_array_t, TYPEDEF) a_Peaks;
} RSP_t_PeakListNS;
#endif
#ifndef RTE_TYPE_a_IntBeamBin_array_t
#define RTE_TYPE_a_IntBeamBin_array_t
typedef VAR(float, TYPEDEF) a_IntBeamBin_array_t[2];
#endif
#ifndef RTE_TYPE_a_Pdh0_array_t_0
#define RTE_TYPE_a_Pdh0_array_t_0
typedef VAR(unsigned char, TYPEDEF) a_Pdh0_array_t_0[8];
#endif
#ifndef RTE_TYPE_RSP_t_PreCluster
#define RTE_TYPE_RSP_t_PreCluster
typedef struct
{
  VAR(float, TYPEDEF) f_IntRangeBin;
  VAR(float, TYPEDEF) f_IntDopplerBin;
  VAR(a_IntBeamBin_array_t, TYPEDEF) a_IntBeamBin;
  VAR(float, TYPEDEF) f_IntRangeBinLength;
  VAR(float, TYPEDEF) f_IntPowerLog;
  VAR(a_Pdh0_array_t_0, TYPEDEF) a_Pdh0;
  VAR(float, TYPEDEF) f_SNR;
} RSP_t_PreCluster;
#endif
#ifndef RTE_TYPE_u_Dummy_array_t_15
#define RTE_TYPE_u_Dummy_array_t_15
typedef VAR(unsigned char, TYPEDEF) u_Dummy_array_t_15[2];
#endif
#ifndef RTE_TYPE_a_PathCompensation_array_t_0
#define RTE_TYPE_a_PathCompensation_array_t_0
typedef VAR(t_Complex16, TYPEDEF) a_PathCompensation_array_t_0[6];
#endif
#ifndef RTE_TYPE_a_AzimuthWindow_array_t
#define RTE_TYPE_a_AzimuthWindow_array_t
typedef VAR(unsigned short, TYPEDEF) a_AzimuthWindow_array_t[16];
#endif
#ifndef RTE_TYPE_t_ContextData
#define RTE_TYPE_t_ContextData
typedef struct
{
  VAR(float, TYPEDEF) f_PulseRepetitionTime;
  VAR(float, TYPEDEF) f_RangeGateLength;
  VAR(float, TYPEDEF) f_MidFrequency;
  VAR(float, TYPEDEF) f_TargetNormS;
  VAR(unsigned char, TYPEDEF) u_GainReduction;
  VAR(unsigned char, TYPEDEF) u_CurrentRfIndex;
  VAR(u_Dummy_array_t_15, TYPEDEF) u_Dummy;
  VAR(a_PathCompensation_array_t_0, TYPEDEF) a_PathCompensation;
  VAR(a_AzimuthWindow_array_t, TYPEDEF) a_AzimuthWindow;
  VAR(float, TYPEDEF) f_PowerScalingFactor;
} t_ContextData;
#endif
#ifndef RTE_TYPE_RSP_t_PreClusterHeader
#define RTE_TYPE_RSP_t_PreClusterHeader
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(AlgoDataTimeStamp_t, TYPEDEF) u_TimeStamp;
  VAR(unsigned int, TYPEDEF) u_NofClusters;
  VAR(t_ContextData, TYPEDEF) ContextData;
} RSP_t_PreClusterHeader;
#endif
#ifndef RTE_TYPE_a_Clusters_array_t_2
#define RTE_TYPE_a_Clusters_array_t_2
typedef VAR(RSP_t_PreCluster, TYPEDEF) a_Clusters_array_t_2[768];
#endif
#ifndef RTE_TYPE_RSP_t_PreClusterListNS
#define RTE_TYPE_RSP_t_PreClusterListNS
typedef struct
{
  VAR(RSP_t_PreClusterHeader, TYPEDEF) PreClustHead;
  VAR(a_Clusters_array_t_2, TYPEDEF) a_Clusters;
} RSP_t_PreClusterListNS;
#endif
#ifndef RTE_TYPE_a_NoiseBeam_array_t
#define RTE_TYPE_a_NoiseBeam_array_t
typedef VAR(unsigned short, TYPEDEF) a_NoiseBeam_array_t[16];
#endif
#ifndef RTE_TYPE_a_MedianBeam_array_t
#define RTE_TYPE_a_MedianBeam_array_t
typedef VAR(unsigned short, TYPEDEF) a_MedianBeam_array_t[16];
#endif
#ifndef RTE_TYPE_a_PowMaxBeam_array_t
#define RTE_TYPE_a_PowMaxBeam_array_t
typedef VAR(unsigned short, TYPEDEF) a_PowMaxBeam_array_t[16];
#endif
#ifndef RTE_TYPE_RSP_t_RangeGateInfo
#define RTE_TYPE_RSP_t_RangeGateInfo
typedef struct
{
  VAR(a_NoiseBeam_array_t, TYPEDEF) a_NoiseBeam;
  VAR(a_MedianBeam_array_t, TYPEDEF) a_MedianBeam;
  VAR(a_PowMaxBeam_array_t, TYPEDEF) a_PowMaxBeam;
  VAR(unsigned short, TYPEDEF) u_PowMax;
  VAR(unsigned short, TYPEDEF) u_NofPeaks;
  VAR(unsigned short, TYPEDEF) u_IdxPeakList;
  VAR(unsigned short, TYPEDEF) u_FourByteAlignment;
} RSP_t_RangeGateInfo;
#endif
#ifndef RTE_TYPE_a_RangeGateInfo_array_t
#define RTE_TYPE_a_RangeGateInfo_array_t
typedef VAR(RSP_t_RangeGateInfo, TYPEDEF) a_RangeGateInfo_array_t[256];
#endif
#ifndef RTE_TYPE_RSP_t_RangeGateInfoListNS
#define RTE_TYPE_RSP_t_RangeGateInfoListNS
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(a_RangeGateInfo_array_t, TYPEDEF) a_RangeGateInfo;
} RSP_t_RangeGateInfoListNS;
#endif
#ifndef RTE_TYPE_reserved_array_t_0
#define RTE_TYPE_reserved_array_t_0
typedef VAR(unsigned char, TYPEDEF) reserved_array_t_0[1];
#endif
#ifndef RTE_TYPE_RSP_t_RoadBeamResult
#define RTE_TYPE_RSP_t_RoadBeamResult
typedef struct
{
  VAR(float, TYPEDEF) fElAng;
  VAR(unsigned char, TYPEDEF) iQuality;
  VAR(unsigned char, TYPEDEF) RoadVisibility;
  VAR(unsigned char, TYPEDEF) BeamCrossingCounter;
  VAR(reserved_array_t_0, TYPEDEF) reserved;
} RSP_t_RoadBeamResult;
#endif
#ifndef RTE_TYPE_RSP_t_RspToEmHeader
#define RTE_TYPE_RSP_t_RspToEmHeader
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
} RSP_t_RspToEmHeader;
#endif
#ifndef RTE_TYPE_RSP_t_RspToEmNS
#define RTE_TYPE_RSP_t_RspToEmNS
typedef struct
{
  VAR(RSP_t_RspToEmHeader, TYPEDEF) RspToEmHeader;
  VAR(RSP_t_RoadBeamResult, TYPEDEF) RoadBeamResult;
} RSP_t_RspToEmNS;
#endif
#ifndef RTE_TYPE_a_Channels_array_t_0
#define RTE_TYPE_a_Channels_array_t_0
typedef VAR(t_Complex8, TYPEDEF) a_Channels_array_t_0[8];
#endif
#ifndef RTE_TYPE_RSP_t_SpecBeamCmplx
#define RTE_TYPE_RSP_t_SpecBeamCmplx
typedef struct
{
  VAR(float, TYPEDEF) f_PowerScaleFactor;
  VAR(a_Channels_array_t_0, TYPEDEF) a_Channels;
} RSP_t_SpecBeamCmplx;
#endif
#ifndef RTE_TYPE_RSP_t_SpecBeamCmplxHeader
#define RTE_TYPE_RSP_t_SpecBeamCmplxHeader
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
} RSP_t_SpecBeamCmplxHeader;
#endif
#ifndef RTE_TYPE_a_SpecBeamCmplx_array_t
#define RTE_TYPE_a_SpecBeamCmplx_array_t
typedef VAR(RSP_t_SpecBeamCmplx, TYPEDEF) a_SpecBeamCmplx_array_t[768];
#endif
#ifndef RTE_TYPE_RSP_t_SpecBeamCmplxListNS
#define RTE_TYPE_RSP_t_SpecBeamCmplxListNS
typedef struct
{
  VAR(RSP_t_SpecBeamCmplxHeader, TYPEDEF) Header;
  VAR(a_SpecBeamCmplx_array_t, TYPEDEF) a_SpecBeamCmplx;
} RSP_t_SpecBeamCmplxListNS;
#endif
#ifndef RTE_TYPE_RSP_t_SptTestOut
#define RTE_TYPE_RSP_t_SptTestOut
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(AlgoErrorState_t, TYPEDEF) u_ShortTermError;
  VAR(AlgoErrorState_t, TYPEDEF) u_LongTermError;
} RSP_t_SptTestOut;
#endif
#ifndef RTE_TYPE_RTE_HLAF_DimmingStatus
#define RTE_TYPE_RTE_HLAF_DimmingStatus
typedef VAR(unsigned char, TYPEDEF) RTE_HLAF_DimmingStatus;
#endif
#ifndef RTE_TYPE_RTE_HLAF_FunctionStatus
#define RTE_TYPE_RTE_HLAF_FunctionStatus
typedef VAR(unsigned char, TYPEDEF) RTE_HLAF_FunctionStatus;
#endif
#ifndef RTE_TYPE_RTE_HLA_TrafficStyle
#define RTE_TYPE_RTE_HLA_TrafficStyle
typedef VAR(unsigned char, TYPEDEF) RTE_HLA_TrafficStyle;
#endif
#ifndef RTE_TYPE_RTE_HLAR_WeatherState
#define RTE_TYPE_RTE_HLAR_WeatherState
typedef VAR(unsigned char, TYPEDEF) RTE_HLAR_WeatherState;
#endif
#ifndef RTE_TYPE_RTE_HLAR_Tunnel
#define RTE_TYPE_RTE_HLAR_Tunnel
typedef VAR(unsigned char, TYPEDEF) RTE_HLAR_Tunnel;
#endif
#ifndef RTE_TYPE_RTE_HLAF_SpeedState
#define RTE_TYPE_RTE_HLAF_SpeedState
typedef VAR(unsigned char, TYPEDEF) RTE_HLAF_SpeedState;
#endif
#ifndef RTE_TYPE_RTE_HLA_SceneInfo
#define RTE_TYPE_RTE_HLA_SceneInfo
typedef VAR(unsigned char, TYPEDEF) RTE_HLA_SceneInfo;
#endif
#ifndef RTE_TYPE_RTE_HLAF_HeadlightControl_Common_t
#define RTE_TYPE_RTE_HLAF_HeadlightControl_Common_t
typedef struct
{
  VAR(RTE_HLA_TrafficStyle, TYPEDEF) TrafficStyle;
  VAR(RTE_HLAR_CityState, TYPEDEF) CityState;
  VAR(RTE_HLAR_WeatherState, TYPEDEF) WeatherState;
  VAR(RTE_HLAR_Tunnel, TYPEDEF) TunnelState;
  VAR(RTE_HLAF_MotorwayState, TYPEDEF) MotorwayState;
  VAR(RTE_HLAR_BrightnessState, TYPEDEF) BrightnessState;
  VAR(RTE_HLA_SensMode, TYPEDEF) SensMode;
  VAR(RTE_HLAF_SpeedState, TYPEDEF) SpeedState;
  VAR(RTE_HLA_SceneInfo, TYPEDEF) SceneInfo;
} RTE_HLAF_HeadlightControl_Common_t;
#endif
#ifndef RTE_TYPE_RTE_HLAF_MatrixTurnOffReason
#define RTE_TYPE_RTE_HLAF_MatrixTurnOffReason
typedef VAR(unsigned short, TYPEDEF) RTE_HLAF_MatrixTurnOffReason;
#endif
#ifndef RTE_TYPE_RTE_HLAF_Matrix_t
#define RTE_TYPE_RTE_HLAF_Matrix_t
typedef struct
{
  VAR(GFA, TYPEDEF) GFA[5];
  VAR(unsigned char, TYPEDEF) nGFA;
  VAR(RTE_HLAF_SignalStatus, TYPEDEF) GFAStatus;
  VAR(RTE_HLAF_HighBeamState, TYPEDEF) HighBeamState;
  VAR(float, TYPEDEF) LowBeam_Dist;
  VAR(float, TYPEDEF) LowBeam_Ang;
  VAR(RTE_HLAF_ObjStatus, TYPEDEF) LowBeam_Status;
  VAR(RTE_HLAF_MatrixTurnOffReason, TYPEDEF) TurnOffReason;
} RTE_HLAF_Matrix_t;
#endif
#ifndef RTE_TYPE_RTE_HLAF_LightDimming_t
#define RTE_TYPE_RTE_HLAF_LightDimming_t
typedef struct
{
  VAR(RTE_HLAF_DimmingStatus, TYPEDEF) DimmingStatus;
  VAR(unsigned char, TYPEDEF) Padding;
  VAR(DimmingArea_array_t, TYPEDEF) DimmingArea;
} RTE_HLAF_LightDimming_t;
#endif
#ifndef RTE_TYPE_RTE_HLAF_HeadlightControl_t
#define RTE_TYPE_RTE_HLAF_HeadlightControl_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(RTE_HLAF_FunctionStatus, TYPEDEF) hlaFunctionStatus;
  VAR(RTE_HLAF_HeadlightControl_Common_t, TYPEDEF) Common;
  VAR(RTE_HLAF_Matrix_t, TYPEDEF) Matrix;
  VAR(RTE_HLAF_LightDimming_t, TYPEDEF) Dimming;
} RTE_HLAF_HeadlightControl_t;
#endif
#ifndef RTE_TYPE_RainSensor_t
#define RTE_TYPE_RainSensor_t
typedef VAR(boolean, TYPEDEF) RainSensor_t;
#endif
#ifndef RTE_TYPE_ReCrnrStiff
#define RTE_TYPE_ReCrnrStiff
typedef VAR(float, TYPEDEF) ReCrnrStiff;
#endif
#ifndef RTE_TYPE_RearLeft
#define RTE_TYPE_RearLeft
typedef VAR(unsigned short, TYPEDEF) RearLeft;
#endif
#ifndef RTE_TYPE_RearRight
#define RTE_TYPE_RearRight
typedef VAR(unsigned short, TYPEDEF) RearRight;
#endif
#ifndef RTE_TYPE_RearWhlAngle
#define RTE_TYPE_RearWhlAngle
typedef VAR(float, TYPEDEF) RearWhlAngle;
#endif
#ifndef RTE_TYPE_ReductThreshLevel1
#define RTE_TYPE_ReductThreshLevel1
typedef VAR(float, TYPEDEF) ReductThreshLevel1;
#endif
#ifndef RTE_TYPE_ReductThreshLevel2
#define RTE_TYPE_ReductThreshLevel2
typedef VAR(float, TYPEDEF) ReductThreshLevel2;
#endif
#ifndef RTE_TYPE_binVelRatio_array_t
#define RTE_TYPE_binVelRatio_array_t
typedef VAR(unsigned char, TYPEDEF) binVelRatio_array_t[81];
#endif
#ifndef RTE_TYPE_RefSpeed_t
#define RTE_TYPE_RefSpeed_t
typedef struct
{
  VAR(binVelRatio_array_t, TYPEDEF) binVelRatio;
  VAR(unsigned char, TYPEDEF) binVelRatOutLo;
  VAR(unsigned char, TYPEDEF) binVelRatOutHi;
  VAR(unsigned char, TYPEDEF) cntSample;
  VAR(float, TYPEDEF) refEgoVelo;
} RefSpeed_t;
#endif
#ifndef RTE_TYPE_ResponseCurve_t
#define RTE_TYPE_ResponseCurve_t
typedef VAR(unsigned char, TYPEDEF) ResponseCurve_t;
#endif
#ifndef RTE_TYPE_RoadBankAngle
#define RTE_TYPE_RoadBankAngle
typedef VAR(fAngle_t, TYPEDEF) RoadBankAngle;
#endif
#ifndef RTE_TYPE_RoadBorder_t
#define RTE_TYPE_RoadBorder_t
typedef struct
{
  VAR(ClothoidParameters_t, TYPEDEF) ClothoidParams;
  VAR(QualityMeasures_t, TYPEDEF) QualityMeas;
  VAR(float, TYPEDEF) f_LateralOffset;
  VAR(float, TYPEDEF) f_LatStdDevFiltered;
} RoadBorder_t;
#endif
#ifndef RTE_TYPE_eCustomRoadType_t
#define RTE_TYPE_eCustomRoadType_t
typedef VAR(unsigned char, TYPEDEF) eCustomRoadType_t;
#endif
#ifndef RTE_TYPE_RoadCustomOutput_t
#define RTE_TYPE_RoadCustomOutput_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(boolean, TYPEDEF) bTunnelMode;
  VAR(eCustomRoadType_t, TYPEDEF) eCustomRoadType;
} RoadCustomOutput_t;
#endif
#ifndef RTE_TYPE_RoadEstimation_t
#define RTE_TYPE_RoadEstimation_t
typedef struct
{
  VAR(CoupledRoad_t, TYPEDEF) CoupledRoad;
  VAR(RoadBorder_t, TYPEDEF) RoadBorderLeft;
  VAR(RoadBorder_t, TYPEDEF) RoadBorderRight;
} RoadEstimation_t;
#endif
#ifndef RTE_TYPE_RoadInclnRec1
#define RTE_TYPE_RoadInclnRec1
typedef struct
{
  VAR(float32_t, TYPEDEF) RoadIncln;
  VAR(uint8_t, TYPEDEF) RoadInclnQly;
} RoadInclnRec1;
#endif
#ifndef RTE_TYPE_eRoadTypeClass_t
#define RTE_TYPE_eRoadTypeClass_t
typedef VAR(unsigned char, TYPEDEF) eRoadTypeClass_t;
#endif
#ifndef RTE_TYPE_eRoadWorksClass_t
#define RTE_TYPE_eRoadWorksClass_t
typedef VAR(unsigned char, TYPEDEF) eRoadWorksClass_t;
#endif
#ifndef RTE_TYPE_RoadType_t
#define RTE_TYPE_RoadType_t
typedef struct
{
  VAR(eRoadTypeClass_t, TYPEDEF) eRoadTypeClass;
  VAR(float, TYPEDEF) fRoadTypeClassConf;
  VAR(eRoadWorksClass_t, TYPEDEF) eRoadWorksClass;
  VAR(float, TYPEDEF) fRoadWorksClassConf;
} RoadType_t;
#endif
#ifndef RTE_TYPE_Traffic_t
#define RTE_TYPE_Traffic_t
typedef struct
{
  VAR(eTrafficOrientation_t, TYPEDEF) eTrafficOrientation;
  VAR(float, TYPEDEF) fTimeToNextWriteAllowed;
  VAR(boolean, TYPEDEF) bWriteToNVM;
} Traffic_t;
#endif
#ifndef RTE_TYPE_Road_t
#define RTE_TYPE_Road_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(LaneWidth_t, TYPEDEF) LaneWidth;
  VAR(LaneMatrix_t, TYPEDEF) LaneMatrix;
  VAR(RoadEstimation_t, TYPEDEF) RoadEstimation;
  VAR(FusedRoadBorder_t, TYPEDEF) FusedRoadBorder;
  VAR(Traffic_t, TYPEDEF) Traffic;
  VAR(RoadType_t, TYPEDEF) RoadType;
} Road_t;
#endif
#ifndef RTE_TYPE_RollAgCmpRec1
#define RTE_TYPE_RollAgCmpRec1
typedef struct
{
  VAR(sint16_t, TYPEDEF) RollAgCmp;
  VAR(uint8_t, TYPEDEF) RollAgCmpQly;
} RollAgCmpRec1;
#endif
#ifndef RTE_TYPE_RollAgGlbRec1
#define RTE_TYPE_RollAgGlbRec1
typedef struct
{
  VAR(float32_t, TYPEDEF) Val;
  VAR(uint8_t, TYPEDEF) Qf;
} RollAgGlbRec1;
#endif
#ifndef RTE_TYPE_RollAngle
#define RTE_TYPE_RollAngle
typedef VAR(float, TYPEDEF) RollAngle;
#endif
#ifndef RTE_TYPE_RscDataWithCmpSafe1
#define RTE_TYPE_RscDataWithCmpSafe1
typedef struct
{
  VAR(float32_t, TYPEDEF) YawRateGrdt;
  VAR(uint8_t, TYPEDEF) YawRateQf;
  VAR(float32_t, TYPEDEF) RollRateGrdt;
  VAR(sint16_t, TYPEDEF) RollRateWithCmp;
  VAR(uint8_t, TYPEDEF) RollRateQf;
  VAR(uint8_t, TYPEDEF) Chks;
  VAR(uint8_t, TYPEDEF) Cntr;
} RscDataWithCmpSafe1;
#endif
#ifndef RTE_TYPE_RteDate_t
#define RTE_TYPE_RteDate_t
typedef struct
{
  VAR(AlgoSignalState_t, TYPEDEF) signalState;
  VAR(unsigned char, TYPEDEF) day;
  VAR(unsigned char, TYPEDEF) month;
  VAR(unsigned short, TYPEDEF) year;
} RteDate_t;
#endif
#ifndef RTE_TYPE_RteGpsPosition_t
#define RTE_TYPE_RteGpsPosition_t
typedef struct
{
  VAR(AlgoSignalState_t, TYPEDEF) signalState;
  VAR(float, TYPEDEF) latit;
  VAR(float, TYPEDEF) longit;
} RteGpsPosition_t;
#endif
#ifndef RTE_TYPE_RteTimeOfDay_t
#define RTE_TYPE_RteTimeOfDay_t
typedef struct
{
  VAR(AlgoSignalState_t, TYPEDEF) signalState;
  VAR(unsigned char, TYPEDEF) hour;
  VAR(unsigned char, TYPEDEF) minute;
  VAR(unsigned char, TYPEDEF) second;
} RteTimeOfDay_t;
#endif
#ifndef RTE_TYPE_aTsaRteRegionCode
#define RTE_TYPE_aTsaRteRegionCode
typedef VAR(unsigned char, TYPEDEF) aTsaRteRegionCode[8];
#endif
#ifndef RTE_TYPE_RteMapInformation_t
#define RTE_TYPE_RteMapInformation_t
typedef struct
{
  VAR(AlgoSignalState_t, TYPEDEF) signalState;
  VAR(unsigned char, TYPEDEF) MapAgeInYears;
  VAR(MapProvider_t, TYPEDEF) MapProvider;
  VAR(unsigned short, TYPEDEF) CountryCode;
  VAR(aTsaRteRegionCode, TYPEDEF) RegionCode;
} RteMapInformation_t;
#endif
#ifndef RTE_TYPE_RteInputGPS_t
#define RTE_TYPE_RteInputGPS_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(RteDate_t, TYPEDEF) date;
  VAR(RteTimeOfDay_t, TYPEDEF) timeOfDay;
  VAR(RteGpsPosition_t, TYPEDEF) gpsPosition;
  VAR(RteMapInformation_t, TYPEDEF) mapInfo;
} RteInputGPS_t;
#endif
#ifndef RTE_TYPE_RumBox_t
#define RTE_TYPE_RumBox_t
typedef struct
{
  VAR(float, TYPEDEF) fTopLeftXpx;
  VAR(float, TYPEDEF) fTopLeftYpx;
  VAR(float, TYPEDEF) fBottomRightXpx;
  VAR(float, TYPEDEF) fBottomRightYpx;
} RumBox_t;
#endif
#ifndef RTE_TYPE_RumClass_t
#define RTE_TYPE_RumClass_t
typedef VAR(unsigned char, TYPEDEF) RumClass_t;
#endif
#ifndef RTE_TYPE_fClassProbability_array_t
#define RTE_TYPE_fClassProbability_array_t
typedef VAR(float, TYPEDEF) fClassProbability_array_t[4];
#endif
#ifndef RTE_TYPE_RumClassifiedBox_t
#define RTE_TYPE_RumClassifiedBox_t
typedef struct
{
  VAR(float, TYPEDEF) fTopLeftXpx;
  VAR(float, TYPEDEF) fTopLeftYpx;
  VAR(float, TYPEDEF) fBottomRightXpx;
  VAR(float, TYPEDEF) fBottomRightYpx;
  VAR(fClassProbability_array_t, TYPEDEF) fClassProbability;
} RumClassifiedBox_t;
#endif
#ifndef RTE_TYPE_aClassProbability_array_t
#define RTE_TYPE_aClassProbability_array_t
typedef VAR(float, TYPEDEF) aClassProbability_array_t[6];
#endif
#ifndef RTE_TYPE_aPoseProbability_array_t
#define RTE_TYPE_aPoseProbability_array_t
typedef VAR(float, TYPEDEF) aPoseProbability_array_t[4];
#endif
#ifndef RTE_TYPE_RumDominantDirection_t
#define RTE_TYPE_RumDominantDirection_t
typedef VAR(unsigned int, TYPEDEF) RumDominantDirection_t;
#endif
#ifndef RTE_TYPE_RumClusterBox_t
#define RTE_TYPE_RumClusterBox_t
typedef struct
{
  VAR(RumBox_t, TYPEDEF) box;
  VAR(float, TYPEDEF) fStdDevXpx;
  VAR(float, TYPEDEF) fStdDevYpx;
  VAR(float, TYPEDEF) fStdDevSizeDomDirpx;
  VAR(float, TYPEDEF) fBottomRightYpx;
  VAR(aClassProbability_array_t, TYPEDEF) aClassProbability;
  VAR(aPoseProbability_array_t, TYPEDEF) aPoseProbability;
  VAR(RumDominantDirection_t, TYPEDEF) eDominantDirection;
} RumClusterBox_t;
#endif
#ifndef RTE_TYPE_RumCluster_t
#define RTE_TYPE_RumCluster_t
typedef struct
{
  VAR(boolean, TYPEDEF) bIsValid;
  VAR(int, TYPEDEF) sIdx;
  VAR(RumClusterBox_t, TYPEDEF) RumClusterBox;
} RumCluster_t;
#endif
#ifndef RTE_TYPE_RumCluster_array_t
#define RTE_TYPE_RumCluster_array_t
typedef VAR(RumCluster_t, TYPEDEF) RumCluster_array_t[80];
#endif
#ifndef RTE_TYPE_RumMeasHeader_t
#define RTE_TYPE_RumMeasHeader_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) uValidImageAreaLeft;
  VAR(unsigned short, TYPEDEF) uValidImageAreaRight;
  VAR(unsigned short, TYPEDEF) uValidImageAreaTop;
  VAR(unsigned short, TYPEDEF) uValidImageAreaBottom;
} RumMeasHeader_t;
#endif
#ifndef RTE_TYPE_RumClusters_t
#define RTE_TYPE_RumClusters_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(unsigned int, TYPEDEF) uErrorCode;
  VAR(int, TYPEDEF) sNrOfRelevantClusters;
  VAR(RumMeasHeader_t, TYPEDEF) RumMeasHeader;
  VAR(RumCluster_array_t, TYPEDEF) RumCluster;
} RumClusters_t;
#endif
#ifndef RTE_TYPE_RumImageTrackedPedestrian_t
#define RTE_TYPE_RumImageTrackedPedestrian_t
typedef struct
{
  VAR(boolean, TYPEDEF) bIsValid;
  VAR(float, TYPEDEF) fTopLeftXpx_in;
  VAR(float, TYPEDEF) fTopLeftYpx_in;
  VAR(float, TYPEDEF) fBottomRightXpx_in;
  VAR(float, TYPEDEF) fBottomRightYpx_in;
  VAR(float, TYPEDEF) scale;
  VAR(float, TYPEDEF) shift_x;
  VAR(float, TYPEDEF) shift_y;
  VAR(float, TYPEDEF) fMatchingQuality;
  VAR(float, TYPEDEF) fObjFlowValidationQuality;
  VAR(float, TYPEDEF) fObjFlowValidationConfidence;
} RumImageTrackedPedestrian_t;
#endif
#ifndef RTE_TYPE_RumImageTrackedPedestrian_array_t
#define RTE_TYPE_RumImageTrackedPedestrian_array_t
typedef VAR(RumImageTrackedPedestrian_t, TYPEDEF) RumImageTrackedPedestrian_array_t[15];
#endif
#ifndef RTE_TYPE_uTrackingFlags_t
#define RTE_TYPE_uTrackingFlags_t
typedef VAR(unsigned char, TYPEDEF) uTrackingFlags_t;
#endif
#ifndef RTE_TYPE_uMotionFlags_t
#define RTE_TYPE_uMotionFlags_t
typedef VAR(unsigned char, TYPEDEF) uMotionFlags_t;
#endif
#ifndef RTE_TYPE_uSearchFlags_t
#define RTE_TYPE_uSearchFlags_t
typedef VAR(unsigned char, TYPEDEF) uSearchFlags_t;
#endif
#ifndef RTE_TYPE_RumImgProcRq_t
#define RTE_TYPE_RumImgProcRq_t
typedef struct
{
  VAR(uTrackingFlags_t, TYPEDEF) uTrackingFlags;
  VAR(uMotionFlags_t, TYPEDEF) uMotionFlags;
  VAR(uSearchFlags_t, TYPEDEF) uSearchFlags;
  VAR(float, TYPEDEF) fStdDevPosX;
  VAR(float, TYPEDEF) fStdDevPosY;
  VAR(float, TYPEDEF) fStdDevSize;
  VAR(unsigned char, TYPEDEF) uPriority;
  VAR(RumBox_t, TYPEDEF) priorBox;
  VAR(RumBox_t, TYPEDEF) sourceBox;
  VAR(unsigned char, TYPEDEF) uGenObjId;
} RumImgProcRq_t;
#endif
#ifndef RTE_TYPE_RumImgProcRq_array_t
#define RTE_TYPE_RumImgProcRq_array_t
typedef VAR(RumImgProcRq_t, TYPEDEF) RumImgProcRq_array_t[30];
#endif
#ifndef RTE_TYPE_RumImgProcRqs_t
#define RTE_TYPE_RumImgProcRqs_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(RumImgProcRq_array_t, TYPEDEF) RumImgProcRq;
} RumImgProcRqs_t;
#endif
#ifndef RTE_TYPE_RumImgProc_TemplTrackRsp_t
#define RTE_TYPE_RumImgProc_TemplTrackRsp_t
typedef struct
{
  VAR(boolean, TYPEDEF) bIsValid;
  VAR(float, TYPEDEF) fScale;
  VAR(float, TYPEDEF) fShift_x;
  VAR(float, TYPEDEF) fShift_y;
  VAR(float, TYPEDEF) fStdDevScale;
  VAR(float, TYPEDEF) fStdDevShiftXpx;
  VAR(float, TYPEDEF) fStdDevShiftYpx;
} RumImgProc_TemplTrackRsp_t;
#endif
#ifndef RTE_TYPE_RumImgProc_Rsp_t
#define RTE_TYPE_RumImgProc_Rsp_t
typedef struct
{
  VAR(boolean, TYPEDEF) bIsValid;
  VAR(float, TYPEDEF) bConfidence;
  VAR(float, TYPEDEF) bStdDevConfidence;
} RumImgProc_Rsp_t;
#endif
#ifndef RTE_TYPE_bSearchPerformed_t
#define RTE_TYPE_bSearchPerformed_t
typedef VAR(unsigned char, TYPEDEF) bSearchPerformed_t;
#endif
#ifndef RTE_TYPE_bSearchPerformed_array_t
#define RTE_TYPE_bSearchPerformed_array_t
typedef VAR(bSearchPerformed_t, TYPEDEF) bSearchPerformed_array_t[6];
#endif
#ifndef RTE_TYPE_RumImgProcRsp_t
#define RTE_TYPE_RumImgProcRsp_t
typedef struct
{
  VAR(RumBox_t, TYPEDEF) sourceBox;
  VAR(RumImgProc_TemplTrackRsp_t, TYPEDEF) templateTrackingRsp;
  VAR(RumImgProc_Rsp_t, TYPEDEF) walkBoostRsp;
  VAR(RumImgProc_Rsp_t, TYPEDEF) turnLeftRsp;
  VAR(RumImgProc_Rsp_t, TYPEDEF) turnRightRsp;
  VAR(RumImgProc_Rsp_t, TYPEDEF) brakeLightRsp;
  VAR(bSearchPerformed_array_t, TYPEDEF) bSearchPerformed;
} RumImgProcRsp_t;
#endif
#ifndef RTE_TYPE_RumImgProcRsp_array_t
#define RTE_TYPE_RumImgProcRsp_array_t
typedef VAR(RumImgProcRsp_t, TYPEDEF) RumImgProcRsp_array_t[30];
#endif
#ifndef RTE_TYPE_RumImgProcRsps_t
#define RTE_TYPE_RumImgProcRsps_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(RumImgProcRsp_array_t, TYPEDEF) RumImgProcRsp;
} RumImgProcRsps_t;
#endif
#ifndef RTE_TYPE_RumPedestrian_t
#define RTE_TYPE_RumPedestrian_t
typedef struct
{
  VAR(boolean, TYPEDEF) bIsValid;
  VAR(int, TYPEDEF) sIdx;
  VAR(RumClassifiedBox_t, TYPEDEF) RumClassifiedBox;
} RumPedestrian_t;
#endif
#ifndef RTE_TYPE_RumPedestrian_array_t
#define RTE_TYPE_RumPedestrian_array_t
typedef VAR(RumPedestrian_t, TYPEDEF) RumPedestrian_array_t[15];
#endif
#ifndef RTE_TYPE_RumPedClusteredPedestrians_t
#define RTE_TYPE_RumPedClusteredPedestrians_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(unsigned int, TYPEDEF) uErrorCode;
  VAR(int, TYPEDEF) sNrOfRelevantPedestrians;
  VAR(RumPedestrian_array_t, TYPEDEF) RumPedestrian;
} RumPedClusteredPedestrians_t;
#endif
#ifndef RTE_TYPE_RumPedImageTrackedPedestrians_t
#define RTE_TYPE_RumPedImageTrackedPedestrians_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(unsigned int, TYPEDEF) uErrorCode;
  VAR(int, TYPEDEF) sNrOfRelevantPedestrians;
  VAR(RumImageTrackedPedestrian_array_t, TYPEDEF) RumImageTrackedPedestrian;
} RumPedImageTrackedPedestrians_t;
#endif
#ifndef RTE_TYPE_RumPedObjectClass_t
#define RTE_TYPE_RumPedObjectClass_t
typedef VAR(unsigned char, TYPEDEF) RumPedObjectClass_t;
#endif
#ifndef RTE_TYPE_RumPose_t
#define RTE_TYPE_RumPose_t
typedef VAR(unsigned char, TYPEDEF) RumPose_t;
#endif
#ifndef RTE_TYPE_RumTemplateTrackingState_t
#define RTE_TYPE_RumTemplateTrackingState_t
typedef VAR(unsigned char, TYPEDEF) RumTemplateTrackingState_t;
#endif
#ifndef RTE_TYPE_RumTemplateTrackRequestArray
#define RTE_TYPE_RumTemplateTrackRequestArray
typedef struct
{
  VAR(RumTemplateTrackingState_t, TYPEDEF) uStateFlag;
  VAR(float, TYPEDEF) fTopLeftXpxPrior;
  VAR(float, TYPEDEF) fTopLeftYpxPrior;
  VAR(float, TYPEDEF) fBottomRightXpxPrior;
  VAR(float, TYPEDEF) fBottomRightYpxPrior;
  VAR(float, TYPEDEF) fTopLeftXpxSource;
  VAR(float, TYPEDEF) fTopLeftYpxSource;
  VAR(float, TYPEDEF) fBottomRightXpxSource;
  VAR(float, TYPEDEF) fBottomRightYpxSource;
} RumTemplateTrackRequestArray;
#endif
#ifndef RTE_TYPE_RumTemplateTrackRequest_array_t
#define RTE_TYPE_RumTemplateTrackRequest_array_t
typedef VAR(RumTemplateTrackRequestArray, TYPEDEF) RumTemplateTrackRequest_array_t[12];
#endif
#ifndef RTE_TYPE_RumTemplateTrackRequests_t
#define RTE_TYPE_RumTemplateTrackRequests_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(RumTemplateTrackRequest_array_t, TYPEDEF) RumTemplateTrackRequest;
} RumTemplateTrackRequests_t;
#endif
#ifndef RTE_TYPE_RumTemplateTrackResponseArray
#define RTE_TYPE_RumTemplateTrackResponseArray
typedef struct
{
  VAR(boolean, TYPEDEF) bIsValid;
  VAR(float, TYPEDEF) fTopLeftXpxSource;
  VAR(float, TYPEDEF) fTopLeftYpxSource;
  VAR(float, TYPEDEF) fBottomRightXpxSource;
  VAR(float, TYPEDEF) fBottomRightYpxSource;
  VAR(float, TYPEDEF) fScale;
  VAR(float, TYPEDEF) fShiftXpx;
  VAR(float, TYPEDEF) fSchiftYpx;
  VAR(float, TYPEDEF) stdScale;
  VAR(float, TYPEDEF) stdShiftXpx;
  VAR(float, TYPEDEF) stdShiftYpx;
} RumTemplateTrackResponseArray;
#endif
#ifndef RTE_TYPE_RumTemplateTrackResponse_array_t
#define RTE_TYPE_RumTemplateTrackResponse_array_t
typedef VAR(RumTemplateTrackResponseArray, TYPEDEF) RumTemplateTrackResponse_array_t[12];
#endif
#ifndef RTE_TYPE_RumTemplateTrackResponses_t
#define RTE_TYPE_RumTemplateTrackResponses_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(RumTemplateTrackResponse_array_t, TYPEDEF) RumTemplateTrackResponse;
} RumTemplateTrackResponses_t;
#endif
#ifndef RTE_TYPE_RumVclAssocList_t
#define RTE_TYPE_RumVclAssocList_t
typedef struct
{
  VAR(int, TYPEDEF) EMObjId;
  VAR(int, TYPEDEF) VCLObjId;
} RumVclAssocList_t;
#endif
#ifndef RTE_TYPE_RumVclAssocList_array_t
#define RTE_TYPE_RumVclAssocList_array_t
typedef VAR(RumVclAssocList_t, TYPEDEF) RumVclAssocList_array_t[80];
#endif
#ifndef RTE_TYPE_RumVclBoundingBox_t
#define RTE_TYPE_RumVclBoundingBox_t
typedef struct
{
  VAR(float, TYPEDEF) fXL;
  VAR(float, TYPEDEF) fXLStd;
  VAR(float, TYPEDEF) fXR;
  VAR(float, TYPEDEF) fXRStd;
  VAR(float, TYPEDEF) fYT;
  VAR(float, TYPEDEF) fYTStd;
  VAR(float, TYPEDEF) fYB;
  VAR(float, TYPEDEF) fYBStd;
  VAR(float, TYPEDEF) fLeftCovPerc;
  VAR(float, TYPEDEF) fRighttCovPerc;
} RumVclBoundingBox_t;
#endif
#ifndef RTE_TYPE_eRumVclMeasType_t
#define RTE_TYPE_eRumVclMeasType_t
typedef VAR(unsigned char, TYPEDEF) eRumVclMeasType_t;
#endif
#ifndef RTE_TYPE_RumVclInfo_t
#define RTE_TYPE_RumVclInfo_t
typedef struct
{
  VAR(boolean, TYPEDEF) bIsValid;
  VAR(eRumVclMeasType_t, TYPEDEF) eMeasType;
  VAR(float, TYPEDEF) fMeasQuality;
  VAR(int, TYPEDEF) iMeasToObjID;
} RumVclInfo_t;
#endif
#ifndef RTE_TYPE_eRumVclObjPose_t
#define RTE_TYPE_eRumVclObjPose_t
typedef VAR(unsigned char, TYPEDEF) eRumVclObjPose_t;
#endif
#ifndef RTE_TYPE_RumVclType_t
#define RTE_TYPE_RumVclType_t
typedef struct
{
  VAR(int, TYPEDEF) eObjClass;
  VAR(float, TYPEDEF) fObjClassConf;
  VAR(float, TYPEDEF) fObjectConf;
  VAR(eRumVclObjPose_t, TYPEDEF) eObjPose;
  VAR(float, TYPEDEF) fPoseConf;
  VAR(unsigned int, TYPEDEF) uConfirmationBitfield;
} RumVclType_t;
#endif
#ifndef RTE_TYPE_RumVclDiff_t
#define RTE_TYPE_RumVclDiff_t
typedef struct
{
  VAR(float, TYPEDEF) fDTime;
  VAR(float, TYPEDEF) fDx;
  VAR(float, TYPEDEF) fDy;
  VAR(float, TYPEDEF) fDScale;
  VAR(float, TYPEDEF) fDxVar;
  VAR(float, TYPEDEF) fDyVar;
  VAR(float, TYPEDEF) fDScaleVar;
  VAR(float, TYPEDEF) fCovDxDy;
  VAR(float, TYPEDEF) fCovDxDScale;
  VAR(float, TYPEDEF) fCovDyDScale;
  VAR(float, TYPEDEF) fDPitch;
  VAR(float, TYPEDEF) fDPitchVar;
  VAR(float, TYPEDEF) fDError;
  VAR(float, TYPEDEF) fDErrorVar;
} RumVclDiff_t;
#endif
#ifndef RTE_TYPE_RumVclDiffMeas_t
#define RTE_TYPE_RumVclDiffMeas_t
typedef struct
{
  VAR(RumVclInfo_t, TYPEDEF) Info;
  VAR(RumVclBoundingBox_t, TYPEDEF) BoundingBox;
  VAR(RumVclType_t, TYPEDEF) Type;
  VAR(RumVclDiff_t, TYPEDEF) RumVclDiff;
} RumVclDiffMeas_t;
#endif
#ifndef RTE_TYPE_RumVclDiffMeas_array_t
#define RTE_TYPE_RumVclDiffMeas_array_t
typedef VAR(RumVclDiffMeas_t, TYPEDEF) RumVclDiffMeas_array_t[20];
#endif
#ifndef RTE_TYPE_RumVclEdgeMeas_t
#define RTE_TYPE_RumVclEdgeMeas_t
typedef struct
{
  VAR(RumVclInfo_t, TYPEDEF) Info;
  VAR(RumVclBoundingBox_t, TYPEDEF) BoundingBox;
  VAR(RumVclType_t, TYPEDEF) Type;
} RumVclEdgeMeas_t;
#endif
#ifndef RTE_TYPE_RumVclEdgeMeas_array_t
#define RTE_TYPE_RumVclEdgeMeas_array_t
typedef VAR(RumVclEdgeMeas_t, TYPEDEF) RumVclEdgeMeas_array_t[20];
#endif
#ifndef RTE_TYPE_eRumVclLightCond_t
#define RTE_TYPE_eRumVclLightCond_t
typedef VAR(unsigned char, TYPEDEF) eRumVclLightCond_t;
#endif
#ifndef RTE_TYPE_RumVclMeasHeader_t
#define RTE_TYPE_RumVclMeasHeader_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) uVisImgLeft;
  VAR(unsigned short, TYPEDEF) uVisImgRight;
  VAR(unsigned short, TYPEDEF) uVisImgTop;
  VAR(unsigned short, TYPEDEF) uVisImgBottom;
  VAR(int, TYPEDEF) sServDeg;
  VAR(unsigned int, TYPEDEF) uServDegFlags;
  VAR(eRumVclLightCond_t, TYPEDEF) lightCond;
  VAR(int, TYPEDEF) sDummy1;
  VAR(int, TYPEDEF) sDummy2;
  VAR(int, TYPEDEF) sDummy3;
  VAR(int, TYPEDEF) sDummy4;
  VAR(int, TYPEDEF) sDummy5;
  VAR(float, TYPEDEF) fDummy1;
  VAR(float, TYPEDEF) fDummy2;
  VAR(float, TYPEDEF) fDummy3;
  VAR(float, TYPEDEF) fDummy4;
  VAR(float, TYPEDEF) fDummy5;
} RumVclMeasHeader_t;
#endif
#ifndef RTE_TYPE_RumVclMeasList_t
#define RTE_TYPE_RumVclMeasList_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(RumVclMeasHeader_t, TYPEDEF) vclMeasHeader;
  VAR(RumVclEdgeMeas_array_t, TYPEDEF) RumVclEdgeMeas;
  VAR(RumVclDiffMeas_array_t, TYPEDEF) RumVclDiffMeas;
  VAR(RumVclAssocList_array_t, TYPEDEF) RumVclAssocList;
} RumVclMeasList_t;
#endif
#ifndef RTE_TYPE_SCTL_t_StateName
#define RTE_TYPE_SCTL_t_StateName
typedef VAR(unsigned char, TYPEDEF) SCTL_t_StateName;
#endif
#ifndef RTE_TYPE_SInt16
#define RTE_TYPE_SInt16
typedef VAR(short, TYPEDEF) SInt16;
#endif
#ifndef RTE_TYPE_SInt32
#define RTE_TYPE_SInt32
typedef VAR(int, TYPEDEF) SInt32;
#endif
#ifndef RTE_TYPE_SInt8
#define RTE_TYPE_SInt8
typedef VAR(signed char, TYPEDEF) SInt8;
#endif
#ifndef RTE_TYPE_t_u_DistanceLong
#define RTE_TYPE_t_u_DistanceLong
typedef VAR(unsigned short, TYPEDEF) t_u_DistanceLong;
#endif
#ifndef RTE_TYPE_t_e_SLA_SpeedLimitNextType
#define RTE_TYPE_t_e_SLA_SpeedLimitNextType
typedef VAR(unsigned char, TYPEDEF) t_e_SLA_SpeedLimitNextType;
#endif
#ifndef RTE_TYPE_SLAData_t
#define RTE_TYPE_SLAData_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(t_u_DistanceLong, TYPEDEF) u_SLA_SpeedLimitNextDistance;
  VAR(unsigned char, TYPEDEF) u_SLA_SpeedLimitNext;
  VAR(t_e_SLA_SpeedLimitNextType, TYPEDEF) e_SLA_SpeedLimitNextType;
  VAR(unsigned char, TYPEDEF) u_SLA_SpeedLimitNow;
  VAR(SpeedUnitEnum_t, TYPEDEF) e_SLA_SpeedLimitUnit;
  VAR(t_NavStreetType, TYPEDEF) e_StreetType;
  VAR(boolean, TYPEDEF) b_SLA_ConsiderNewNowSign;
} SLAData_t;
#endif
#ifndef RTE_TYPE_a_WinFft1FS_array_t
#define RTE_TYPE_a_WinFft1FS_array_t
typedef VAR(t_Complex16, TYPEDEF) a_WinFft1FS_array_t[256];
#endif
#ifndef RTE_TYPE_a_WinFft1NS_array_t
#define RTE_TYPE_a_WinFft1NS_array_t
typedef VAR(t_Complex16, TYPEDEF) a_WinFft1NS_array_t[512];
#endif
#ifndef RTE_TYPE_a_WinFft2FS_array_t
#define RTE_TYPE_a_WinFft2FS_array_t
typedef VAR(t_Complex16, TYPEDEF) a_WinFft2FS_array_t[512];
#endif
#ifndef RTE_TYPE_a_WinFft2NS_array_t
#define RTE_TYPE_a_WinFft2NS_array_t
typedef VAR(t_Complex16, TYPEDEF) a_WinFft2NS_array_t[256];
#endif
#ifndef RTE_TYPE_a_UnitTwiddle_array_t
#define RTE_TYPE_a_UnitTwiddle_array_t
typedef VAR(t_Complex16, TYPEDEF) a_UnitTwiddle_array_t[512];
#endif
#ifndef RTE_TYPE_a_FdcConstants_array_t
#define RTE_TYPE_a_FdcConstants_array_t
typedef VAR(t_Complex16, TYPEDEF) a_FdcConstants_array_t[16];
#endif
#ifndef RTE_TYPE_SPT_t_Constants
#define RTE_TYPE_SPT_t_Constants
typedef struct
{
  VAR(a_WinFft1FS_array_t, TYPEDEF) a_WinFft1FS;
  VAR(a_WinFft1NS_array_t, TYPEDEF) a_WinFft1NS;
  VAR(a_WinFft2FS_array_t, TYPEDEF) a_WinFft2FS;
  VAR(a_WinFft2NS_array_t, TYPEDEF) a_WinFft2NS;
  VAR(a_UnitTwiddle_array_t, TYPEDEF) a_UnitTwiddle;
  VAR(a_FdcConstants_array_t, TYPEDEF) a_FdcConstants;
} SPT_t_Constants;
#endif
#ifndef RTE_TYPE_a_HistEntry_array_t
#define RTE_TYPE_a_HistEntry_array_t
typedef VAR(unsigned short, TYPEDEF) a_HistEntry_array_t[64];
#endif
#ifndef RTE_TYPE_SPT_t_Histogram_64
#define RTE_TYPE_SPT_t_Histogram_64
typedef struct
{
  VAR(a_HistEntry_array_t, TYPEDEF) a_HistEntry;
} SPT_t_Histogram_64;
#endif
#ifndef RTE_TYPE_a_Histogram_array_t
#define RTE_TYPE_a_Histogram_array_t
typedef VAR(SPT_t_Histogram_64, TYPEDEF) a_Histogram_array_t[2];
#endif
#ifndef RTE_TYPE_SPT_t_HistInterfSupp
#define RTE_TYPE_SPT_t_HistInterfSupp
typedef struct
{
  VAR(a_Histogram_array_t, TYPEDEF) a_Histogram;
} SPT_t_HistInterfSupp;
#endif
#ifndef RTE_TYPE_a_Window1_array_t
#define RTE_TYPE_a_Window1_array_t
typedef VAR(t_Complex16, TYPEDEF) a_Window1_array_t[512];
#endif
#ifndef RTE_TYPE_a_PN3_Tx1_array_t
#define RTE_TYPE_a_PN3_Tx1_array_t
typedef VAR(t_Complex16, TYPEDEF) a_PN3_Tx1_array_t[512];
#endif
#ifndef RTE_TYPE_a_PN3_Tx2_array_t
#define RTE_TYPE_a_PN3_Tx2_array_t
typedef VAR(t_Complex16, TYPEDEF) a_PN3_Tx2_array_t[512];
#endif
#ifndef RTE_TYPE_a_FdcVec_array_t
#define RTE_TYPE_a_FdcVec_array_t
typedef VAR(t_Complex16, TYPEDEF) a_FdcVec_array_t[512];
#endif
#ifndef RTE_TYPE_a_CalibRx_array_t
#define RTE_TYPE_a_CalibRx_array_t
typedef VAR(t_Complex16, TYPEDEF) a_CalibRx_array_t[6];
#endif
#ifndef RTE_TYPE_SPT_t_Input
#define RTE_TYPE_SPT_t_Input
typedef struct
{
  VAR(a_Window1_array_t, TYPEDEF) a_Window1;
  VAR(a_PN3_Tx1_array_t, TYPEDEF) a_PN3_Tx1;
  VAR(a_PN3_Tx2_array_t, TYPEDEF) a_PN3_Tx2;
  VAR(a_FdcVec_array_t, TYPEDEF) a_FdcVec;
  VAR(a_CalibRx_array_t, TYPEDEF) a_CalibRx;
} SPT_t_Input;
#endif
#ifndef RTE_TYPE_a_ThrBeam_array_t
#define RTE_TYPE_a_ThrBeam_array_t
typedef VAR(unsigned short, TYPEDEF) a_ThrBeam_array_t[16];
#endif
#ifndef RTE_TYPE_SPT_t_SP23TcmIn
#define RTE_TYPE_SPT_t_SP23TcmIn
typedef struct
{
  VAR(a_ThrBeam_array_t, TYPEDEF) a_ThrBeam;
} SPT_t_SP23TcmIn;
#endif
#ifndef RTE_TYPE_t_PeakIndices
#define RTE_TYPE_t_PeakIndices
typedef struct
{
  VAR(unsigned short, TYPEDEF) u_IdxDoppler;
  VAR(unsigned short, TYPEDEF) u_BitfieldBeams;
} t_PeakIndices;
#endif
#ifndef RTE_TYPE_a_PeakIndicesBuf
#define RTE_TYPE_a_PeakIndicesBuf
typedef VAR(t_PeakIndices, TYPEDEF) a_PeakIndicesBuf[512];
#endif
#ifndef RTE_TYPE_a_PeakIndices_array_t
#define RTE_TYPE_a_PeakIndices_array_t
typedef VAR(a_PeakIndicesBuf, TYPEDEF) a_PeakIndices_array_t[2];
#endif
#ifndef RTE_TYPE_a_MaxDopplerBuf
#define RTE_TYPE_a_MaxDopplerBuf
typedef VAR(unsigned short, TYPEDEF) a_MaxDopplerBuf[512];
#endif
#ifndef RTE_TYPE_a_MaxDoppler_array_t
#define RTE_TYPE_a_MaxDoppler_array_t
typedef VAR(a_MaxDopplerBuf, TYPEDEF) a_MaxDoppler_array_t[2];
#endif
#ifndef RTE_TYPE_a_MaxBeam_array_t
#define RTE_TYPE_a_MaxBeam_array_t
typedef VAR(unsigned short, TYPEDEF) a_MaxBeam_array_t[16];
#endif
#ifndef RTE_TYPE_a_Reserved_array_t
#define RTE_TYPE_a_Reserved_array_t
typedef VAR(unsigned short, TYPEDEF) a_Reserved_array_t[16];
#endif
#ifndef RTE_TYPE_a_HistBeamBuf
#define RTE_TYPE_a_HistBeamBuf
typedef VAR(unsigned short, TYPEDEF) a_HistBeamBuf[48];
#endif
#ifndef RTE_TYPE_a_HistoBeam_array_t
#define RTE_TYPE_a_HistoBeam_array_t
typedef VAR(a_HistBeamBuf, TYPEDEF) a_HistoBeam_array_t[16];
#endif
#ifndef RTE_TYPE_SPT_t_SP23TcmOut
#define RTE_TYPE_SPT_t_SP23TcmOut
typedef struct
{
  VAR(a_PeakIndices_array_t, TYPEDEF) a_PeakIndices;
  VAR(a_MaxDoppler_array_t, TYPEDEF) a_MaxDoppler;
  VAR(a_MaxBeam_array_t, TYPEDEF) a_MaxBeam;
  VAR(a_Reserved_array_t, TYPEDEF) a_Reserved;
  VAR(a_HistoBeam_array_t, TYPEDEF) a_HistoBeam;
} SPT_t_SP23TcmOut;
#endif
#ifndef RTE_TYPE_s_ADCSamplesBuf_array_t_0
#define RTE_TYPE_s_ADCSamplesBuf_array_t_0
typedef VAR(short, TYPEDEF) s_ADCSamplesBuf_array_t_0[3696];
#endif
#ifndef RTE_TYPE_a_ADCSamples_array_t
#define RTE_TYPE_a_ADCSamples_array_t
typedef VAR(s_ADCSamplesBuf_array_t_0, TYPEDEF) a_ADCSamples_array_t[2];
#endif
#ifndef RTE_TYPE_SPT_t_SdmaBufferFS
#define RTE_TYPE_SPT_t_SdmaBufferFS
typedef struct
{
  VAR(a_ADCSamples_array_t, TYPEDEF) a_ADCSamples;
} SPT_t_SdmaBufferFS;
#endif
#ifndef RTE_TYPE_s_ADCSamplesBuf
#define RTE_TYPE_s_ADCSamplesBuf
typedef VAR(short, TYPEDEF) s_ADCSamplesBuf[1904];
#endif
#ifndef RTE_TYPE_a_ADCSamples_array_t_0
#define RTE_TYPE_a_ADCSamples_array_t_0
typedef VAR(s_ADCSamplesBuf, TYPEDEF) a_ADCSamples_array_t_0[2];
#endif
#ifndef RTE_TYPE_SPT_t_SdmaBufferNS
#define RTE_TYPE_SPT_t_SdmaBufferNS
typedef struct
{
  VAR(a_ADCSamples_array_t_0, TYPEDEF) a_ADCSamples;
  VAR(s_ADCSamplesBuf_array_t_0, TYPEDEF) s_ADCSamplesBuf;
} SPT_t_SdmaBufferNS;
#endif
#ifndef RTE_TYPE_a_Cp6CompValues_array_t
#define RTE_TYPE_a_Cp6CompValues_array_t
typedef VAR(unsigned int, TYPEDEF) a_Cp6CompValues_array_t[114644];
#endif
#ifndef RTE_TYPE_SPT_t_Sp1OutFS
#define RTE_TYPE_SPT_t_Sp1OutFS
typedef struct
{
  VAR(a_Cp6CompValues_array_t, TYPEDEF) a_Cp6CompValues;
} SPT_t_Sp1OutFS;
#endif
#ifndef RTE_TYPE_a_Cp6CompValues_array_t_0
#define RTE_TYPE_a_Cp6CompValues_array_t_0
typedef VAR(unsigned int, TYPEDEF) a_Cp6CompValues_array_t_0[122880];
#endif
#ifndef RTE_TYPE_SPT_t_Sp1OutNS
#define RTE_TYPE_SPT_t_Sp1OutNS
typedef struct
{
  VAR(a_Cp6CompValues_array_t_0, TYPEDEF) a_Cp6CompValues;
} SPT_t_Sp1OutNS;
#endif
#ifndef RTE_TYPE_t_SpecBeamCmplx
#define RTE_TYPE_t_SpecBeamCmplx
typedef VAR(t_Complex8, TYPEDEF) t_SpecBeamCmplx[16];
#endif
#ifndef RTE_TYPE_t_SpecDopplerBeamCmplxFS
#define RTE_TYPE_t_SpecDopplerBeamCmplxFS
typedef VAR(t_SpecBeamCmplx, TYPEDEF) t_SpecDopplerBeamCmplxFS[512];
#endif
#ifndef RTE_TYPE_a_SpecDopplerBeamCmplxFS_array_t
#define RTE_TYPE_a_SpecDopplerBeamCmplxFS_array_t
typedef VAR(t_SpecDopplerBeamCmplxFS, TYPEDEF) a_SpecDopplerBeamCmplxFS_array_t[2];
#endif
#ifndef RTE_TYPE_SPT_t_SpecRGDopplerBeamCmplxFS
#define RTE_TYPE_SPT_t_SpecRGDopplerBeamCmplxFS
typedef struct
{
  VAR(a_SpecDopplerBeamCmplxFS_array_t, TYPEDEF) a_SpecDopplerBeamCmplxFS;
} SPT_t_SpecRGDopplerBeamCmplxFS;
#endif
#ifndef RTE_TYPE_t_SpecDopplerBeamCmplxNS
#define RTE_TYPE_t_SpecDopplerBeamCmplxNS
typedef VAR(t_SpecBeamCmplx, TYPEDEF) t_SpecDopplerBeamCmplxNS[256];
#endif
#ifndef RTE_TYPE_a_SpecDopplerBeamCmplxNS_array_t
#define RTE_TYPE_a_SpecDopplerBeamCmplxNS_array_t
typedef VAR(t_SpecDopplerBeamCmplxNS, TYPEDEF) a_SpecDopplerBeamCmplxNS_array_t[2];
#endif
#ifndef RTE_TYPE_SPT_t_SpecRGDopplerBeamCmplxNS
#define RTE_TYPE_SPT_t_SpecRGDopplerBeamCmplxNS
typedef struct
{
  VAR(a_SpecDopplerBeamCmplxNS_array_t, TYPEDEF) a_SpecDopplerBeamCmplxNS;
} SPT_t_SpecRGDopplerBeamCmplxNS;
#endif
#ifndef RTE_TYPE_t_SpecBeamPow
#define RTE_TYPE_t_SpecBeamPow
typedef VAR(unsigned short, TYPEDEF) t_SpecBeamPow[16];
#endif
#ifndef RTE_TYPE_t_SpecDopplerBeamPowFS
#define RTE_TYPE_t_SpecDopplerBeamPowFS
typedef VAR(t_SpecBeamPow, TYPEDEF) t_SpecDopplerBeamPowFS[512];
#endif
#ifndef RTE_TYPE_a_SpecDopplerBeamPowFS_array_t
#define RTE_TYPE_a_SpecDopplerBeamPowFS_array_t
typedef VAR(t_SpecDopplerBeamPowFS, TYPEDEF) a_SpecDopplerBeamPowFS_array_t[2];
#endif
#ifndef RTE_TYPE_SPT_t_SpecRGDopplerBeamPowFS
#define RTE_TYPE_SPT_t_SpecRGDopplerBeamPowFS
typedef struct
{
  VAR(a_SpecDopplerBeamPowFS_array_t, TYPEDEF) a_SpecDopplerBeamPowFS;
} SPT_t_SpecRGDopplerBeamPowFS;
#endif
#ifndef RTE_TYPE_t_SpecDopplerBeamPowNS
#define RTE_TYPE_t_SpecDopplerBeamPowNS
typedef VAR(t_SpecBeamPow, TYPEDEF) t_SpecDopplerBeamPowNS[256];
#endif
#ifndef RTE_TYPE_a_SpecDopplerBeamPowNS_array_t
#define RTE_TYPE_a_SpecDopplerBeamPowNS_array_t
typedef VAR(t_SpecDopplerBeamPowNS, TYPEDEF) a_SpecDopplerBeamPowNS_array_t[2];
#endif
#ifndef RTE_TYPE_SPT_t_SpecRGDopplerBeamPowNS
#define RTE_TYPE_SPT_t_SpecRGDopplerBeamPowNS
typedef struct
{
  VAR(a_SpecDopplerBeamPowNS_array_t, TYPEDEF) a_SpecDopplerBeamPowNS;
} SPT_t_SpecRGDopplerBeamPowNS;
#endif
#ifndef RTE_TYPE_SR_RTE_Brightness_t
#define RTE_TYPE_SR_RTE_Brightness_t
typedef VAR(unsigned int, TYPEDEF) SR_RTE_Brightness_t;
#endif
#ifndef RTE_TYPE_SR_RTE_CalibrationStatus_t
#define RTE_TYPE_SR_RTE_CalibrationStatus_t
typedef VAR(unsigned int, TYPEDEF) SR_RTE_CalibrationStatus_t;
#endif
#ifndef RTE_TYPE_SR_RTE_Cce_Probabilities_t
#define RTE_TYPE_SR_RTE_Cce_Probabilities_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) countryId;
  VAR(unsigned short, TYPEDEF) probability;
} SR_RTE_Cce_Probabilities_t;
#endif
#ifndef RTE_TYPE_aCommunicationBuffer
#define RTE_TYPE_aCommunicationBuffer
typedef VAR(unsigned char, TYPEDEF) aCommunicationBuffer[1590500];
#endif
#ifndef RTE_TYPE_SR_RTE_Communication_Buffer_t
#define RTE_TYPE_SR_RTE_Communication_Buffer_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(aCommunicationBuffer, TYPEDEF) bufferAbst;
} SR_RTE_Communication_Buffer_t;
#endif
#ifndef RTE_TYPE_aCurrentNumErrors
#define RTE_TYPE_aCurrentNumErrors
typedef VAR(unsigned char, TYPEDEF) aCurrentNumErrors[4];
#endif
#ifndef RTE_TYPE_SR_RTE_HealthStatus_t
#define RTE_TYPE_SR_RTE_HealthStatus_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) meanFramedroprate;
  VAR(unsigned int, TYPEDEF) currentNumErrors;
  VAR(aCurrentNumErrors, TYPEDEF) firstErrors;
  VAR(unsigned int, TYPEDEF) totalNumErrors;
  VAR(unsigned int, TYPEDEF) resetCounter;
  VAR(SR_RTE_ApplicationControlFlow_t, TYPEDEF) applicationControlFlow;
} SR_RTE_HealthStatus_t;
#endif
#ifndef RTE_TYPE_SR_RTE_OutSignGeometry_t
#define RTE_TYPE_SR_RTE_OutSignGeometry_t
typedef VAR(unsigned int, TYPEDEF) SR_RTE_OutSignGeometry_t;
#endif
#ifndef RTE_TYPE_SR_RTE_OutSupplSignPosition_t
#define RTE_TYPE_SR_RTE_OutSupplSignPosition_t
typedef VAR(unsigned int, TYPEDEF) SR_RTE_OutSupplSignPosition_t;
#endif
#ifndef RTE_TYPE_SR_RTE_OutputROIInformation_t
#define RTE_TYPE_SR_RTE_OutputROIInformation_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) inputImageWidth;
  VAR(unsigned int, TYPEDEF) inputImageHeight;
  VAR(unsigned int, TYPEDEF) offsetX;
  VAR(unsigned int, TYPEDEF) offsetY;
  VAR(unsigned int, TYPEDEF) width;
  VAR(unsigned int, TYPEDEF) height;
  VAR(float, TYPEDEF) pointOfExX;
  VAR(float, TYPEDEF) pointOfExY;
  VAR(SR_RTE_Brightness_t, TYPEDEF) brightness;
} SR_RTE_OutputROIInformation_t;
#endif
#ifndef RTE_TYPE_classId_t
#define RTE_TYPE_classId_t
typedef VAR(unsigned int, TYPEDEF) classId_t;
#endif
#ifndef RTE_TYPE_additionalInfo_array_t
#define RTE_TYPE_additionalInfo_array_t
typedef VAR(int, TYPEDEF) additionalInfo_array_t[3];
#endif
#ifndef RTE_TYPE_SR_RTE_OutputResultClass_t
#define RTE_TYPE_SR_RTE_OutputResultClass_t
typedef struct
{
  VAR(classId_t, TYPEDEF) classId;
  VAR(additionalInfo_array_t, TYPEDEF) additionalInfo;
  VAR(float, TYPEDEF) recogReliability;
} SR_RTE_OutputResultClass_t;
#endif
#ifndef RTE_TYPE_SR_RTE_OutputResultTrackStatus_t
#define RTE_TYPE_SR_RTE_OutputResultTrackStatus_t
typedef VAR(unsigned int, TYPEDEF) SR_RTE_OutputResultTrackStatus_t;
#endif
#ifndef RTE_TYPE_aOutputResults
#define RTE_TYPE_aOutputResults
typedef VAR(SR_RTE_OutputResultClass_t, TYPEDEF) aOutputResults[5];
#endif
#ifndef RTE_TYPE_SR_RTE_OutputResult_t
#define RTE_TYPE_SR_RTE_OutputResult_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) num;
  VAR(aOutputResults, TYPEDEF) results;
} SR_RTE_OutputResult_t;
#endif
#ifndef RTE_TYPE_SR_RTE_OutputTrackAlgo_t
#define RTE_TYPE_SR_RTE_OutputTrackAlgo_t
typedef VAR(unsigned int, TYPEDEF) SR_RTE_OutputTrackAlgo_t;
#endif
#ifndef RTE_TYPE_aRteCceProbabilities
#define RTE_TYPE_aRteCceProbabilities
typedef VAR(SR_RTE_Cce_Probabilities_t, TYPEDEF) aRteCceProbabilities[12];
#endif
#ifndef RTE_TYPE_SR_RTE_OutputResultTrack_t
#define RTE_TYPE_SR_RTE_OutputResultTrack_t
typedef struct
{
  VAR(int, TYPEDEF) id;
  VAR(unsigned int, TYPEDEF) trackStatus;
  VAR(unsigned int, TYPEDEF) trackCharacteristics;
  VAR(int, TYPEDEF) current;
  VAR(int, TYPEDEF) x;
  VAR(int, TYPEDEF) y;
  VAR(int, TYPEDEF) w;
  VAR(int, TYPEDEF) h;
  VAR(SR_RTE_OutputResult_t, TYPEDEF) mainClass;
  VAR(SR_RTE_OutSignGeometry_t, TYPEDEF) signGeometry;
  VAR(SR_RTE_OutputResult_t, TYPEDEF) supplClass1;
  VAR(SR_RTE_OutSupplSignPosition_t, TYPEDEF) supplPosition1;
  VAR(SR_RTE_OutputResult_t, TYPEDEF) supplClass2;
  VAR(SR_RTE_OutSupplSignPosition_t, TYPEDEF) supplPosition2;
  VAR(float, TYPEDEF) worldPosX;
  VAR(float, TYPEDEF) worldPosY;
  VAR(float, TYPEDEF) worldPosZ;
  VAR(float, TYPEDEF) deltaWorldPosX;
  VAR(float, TYPEDEF) deltaWorldPosY;
  VAR(float, TYPEDEF) deltaWorldPosZ;
  VAR(float, TYPEDEF) worldWidth;
  VAR(float, TYPEDEF) worldHeight;
  VAR(float, TYPEDEF) deltaWorldWidth;
  VAR(float, TYPEDEF) threeDQuality;
  VAR(int, TYPEDEF) wholeLength;
  VAR(SR_RTE_OutputTrackAlgo_t, TYPEDEF) threeDAlgo;
  VAR(aRteCceProbabilities, TYPEDEF) countryCodeProbability;
} SR_RTE_OutputResultTrack_t;
#endif
#ifndef RTE_TYPE_SR_RTE_OutputTimestamp_t
#define RTE_TYPE_SR_RTE_OutputTimestamp_t
typedef struct
{
  VAR(int, TYPEDEF) sec;
  VAR(int, TYPEDEF) usec;
} SR_RTE_OutputTimestamp_t;
#endif
#ifndef RTE_TYPE_SR_RTE_OutputTrackCharacteristic_t
#define RTE_TYPE_SR_RTE_OutputTrackCharacteristic_t
typedef VAR(unsigned int, TYPEDEF) SR_RTE_OutputTrackCharacteristic_t;
#endif
#ifndef RTE_TYPE_srStatus_t
#define RTE_TYPE_srStatus_t
typedef VAR(unsigned int, TYPEDEF) srStatus_t;
#endif
#ifndef RTE_TYPE_aRteOutputTracks
#define RTE_TYPE_aRteOutputTracks
typedef VAR(SR_RTE_OutputResultTrack_t, TYPEDEF) aRteOutputTracks[16];
#endif
#ifndef RTE_TYPE_SR_RTE_Output_t
#define RTE_TYPE_SR_RTE_Output_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(unsigned int, TYPEDEF) rteWrpVersion;
  VAR(unsigned int, TYPEDEF) frameNumber;
  VAR(unsigned int, TYPEDEF) numberOfResultTracks;
  VAR(SR_RTE_CalibrationStatus_t, TYPEDEF) calibrationStatus;
  VAR(srStatus_t, TYPEDEF) srStatus;
  VAR(SR_RTE_HealthStatus_t, TYPEDEF) healthStatus;
  VAR(SR_RTE_OutputTimestamp_t, TYPEDEF) frameTimestamp;
  VAR(aRteOutputTracks, TYPEDEF) track;
  VAR(SR_RTE_OutputROIInformation_t, TYPEDEF) roiInformation;
} SR_RTE_Output_t;
#endif
#ifndef RTE_TYPE_SYS_t_u_HwSample
#define RTE_TYPE_SYS_t_u_HwSample
typedef VAR(unsigned short, TYPEDEF) SYS_t_u_HwSample;
#endif
#ifndef RTE_TYPE_SYS_t_u_Project
#define RTE_TYPE_SYS_t_u_Project
typedef VAR(unsigned short, TYPEDEF) SYS_t_u_Project;
#endif
#ifndef RTE_TYPE_SceneInfo
#define RTE_TYPE_SceneInfo
typedef VAR(RTE_HLA_SceneInfo, TYPEDEF) SceneInfo;
#endif
#ifndef RTE_TYPE_SelfSteerGrad
#define RTE_TYPE_SelfSteerGrad
typedef VAR(float, TYPEDEF) SelfSteerGrad;
#endif
#ifndef RTE_TYPE_SelfSteerGradEst
#define RTE_TYPE_SelfSteerGradEst
typedef VAR(float, TYPEDEF) SelfSteerGradEst;
#endif
#ifndef RTE_TYPE_SenOpMode_t
#define RTE_TYPE_SenOpMode_t
typedef VAR(unsigned int, TYPEDEF) SenOpMode_t;
#endif
#ifndef RTE_TYPE_SensMode
#define RTE_TYPE_SensMode
typedef VAR(RTE_HLA_SensMode, TYPEDEF) SensMode;
#endif
#ifndef RTE_TYPE_State_array_t_2
#define RTE_TYPE_State_array_t_2
typedef VAR(VDYIoStateTypes_t, TYPEDEF) State_array_t_2[8];
#endif
#ifndef RTE_TYPE_SensorMounting_t
#define RTE_TYPE_SensorMounting_t
typedef struct
{
  VAR(State_array_t_2, TYPEDEF) State;
  VAR(float, TYPEDEF) LatPos;
  VAR(float, TYPEDEF) LongPos;
  VAR(float, TYPEDEF) VertPos;
  VAR(float, TYPEDEF) LongPosToCoG;
  VAR(float, TYPEDEF) PitchAngle;
  VAR(Orientation_t, TYPEDEF) Orientation;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
  VAR(float, TYPEDEF) RollAngle;
  VAR(float, TYPEDEF) YawAngle;
} SensorMounting_t;
#endif
#ifndef RTE_TYPE_SensorSource_nu_t
#define RTE_TYPE_SensorSource_nu_t
typedef VAR(unsigned char, TYPEDEF) SensorSource_nu_t;
#endif
#ifndef RTE_TYPE_Sensor_t
#define RTE_TYPE_Sensor_t
typedef struct
{
  VAR(State_array_t_7, TYPEDEF) State;
  VAR(float, TYPEDEF) CoverDamping;
  VAR(float, TYPEDEF) fCoverageAngle;
  VAR(float, TYPEDEF) fLobeAngle;
  VAR(float, TYPEDEF) fCycleTime;
  VAR(unsigned char, TYPEDEF) uNoOfScans;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
} Sensor_t;
#endif
#ifndef RTE_TYPE_State_array_t_3
#define RTE_TYPE_State_array_t_3
typedef VAR(VDYIoStateTypes_t, TYPEDEF) State_array_t_3[8];
#endif
#ifndef RTE_TYPE_Sensor_t_bk
#define RTE_TYPE_Sensor_t_bk
typedef struct
{
  VAR(State_array_t_3, TYPEDEF) State;
  VAR(float, TYPEDEF) CoverDamping;
  VAR(float, TYPEDEF) fCoverageAngle;
  VAR(float, TYPEDEF) fLobeAngle;
  VAR(float, TYPEDEF) fCycleTime;
  VAR(unsigned char, TYPEDEF) uNoOfScans;
} Sensor_t_bk;
#endif
#ifndef RTE_TYPE_SftyDecelGroupSafe1
#define RTE_TYPE_SftyDecelGroupSafe1
typedef struct
{
  VAR(uint8_t, TYPEDEF) AsySftyDecelReq;
  VAR(boolean, TYPEDEF) AsySftyEnaDecel;
  VAR(uint8_t, TYPEDEF) SftyDecelGroupSafeChks;
  VAR(uint8_t, TYPEDEF) SftyDecelGroupSafeCntr;
} SftyDecelGroupSafe1;
#endif
#ifndef RTE_TYPE_SftyGainGroupSafe1
#define RTE_TYPE_SftyGainGroupSafe1
typedef struct
{
  VAR(uint8_t, TYPEDEF) AsyBrkGainReq;
  VAR(uint8_t, TYPEDEF) AsyBrkGainMaxDecel;
  VAR(boolean, TYPEDEF) AsyBrkGainEna;
  VAR(uint8_t, TYPEDEF) SftyGainGroupSafeChks;
  VAR(uint8_t, TYPEDEF) SftyGainGroupSafeCntr;
} SftyGainGroupSafe1;
#endif
#ifndef RTE_TYPE_SftySteerLockSts_t
#define RTE_TYPE_SftySteerLockSts_t
typedef VAR(unsigned char, TYPEDEF) SftySteerLockSts_t;
#endif
#ifndef RTE_TYPE_SideSlipAngle
#define RTE_TYPE_SideSlipAngle
typedef VAR(float, TYPEDEF) SideSlipAngle;
#endif
#ifndef RTE_TYPE_SideSlipAngleExt
#define RTE_TYPE_SideSlipAngleExt
typedef VAR(float, TYPEDEF) SideSlipAngleExt;
#endif
#ifndef RTE_TYPE_SigState_t
#define RTE_TYPE_SigState_t
typedef VAR(unsigned char, TYPEDEF) SigState_t;
#endif
#ifndef RTE_TYPE_SignalInputErrors_t
#define RTE_TYPE_SignalInputErrors_t
typedef struct
{
  VAR(VDYErrState_t, TYPEDEF) InputSignalError;
  VAR(VDYErrState_t, TYPEDEF) InputSignalPeakError;
} SignalInputErrors_t;
#endif
#ifndef RTE_TYPE_SlowOvertaking
#define RTE_TYPE_SlowOvertaking
typedef VAR(float, TYPEDEF) SlowOvertaking;
#endif
#ifndef RTE_TYPE_SnsrForLvlWdSplyStRec
#define RTE_TYPE_SnsrForLvlWdSplyStRec
typedef struct
{
  VAR(InvldVld_t, TYPEDEF) SnsrSplyVld;
  VAR(boolean, TYPEDEF) SnsrSplySt;
} SnsrForLvlWdSplyStRec;
#endif
#ifndef RTE_TYPE_SnsrForLvlWdVehLvlRec
#define RTE_TYPE_SnsrForLvlWdVehLvlRec
typedef struct
{
  VAR(uint16_t, TYPEDEF) SnsrFrnt;
  VAR(uint16_t, TYPEDEF) SnsrRe;
  VAR(InvldVld_t, TYPEDEF) SnsrVld;
} SnsrForLvlWdVehLvlRec;
#endif
#ifndef RTE_TYPE_SoCGsActState_t
#define RTE_TYPE_SoCGsActState_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_GsActState;
} SoCGsActState_t;
#endif
#ifndef RTE_TYPE_SpdRotlForWhlsAtAxleFrntSafe1
#define RTE_TYPE_SpdRotlForWhlsAtAxleFrntSafe1
typedef struct
{
  VAR(uint16_t, TYPEDEF) SpdRotlForWhlsAtAxleFrnt;
  VAR(uint8_t, TYPEDEF) SpdRotlForWhlsAtAxleFrntChks;
  VAR(uint8_t, TYPEDEF) SpdRotlForWhlsAtAxleFrntCntr;
} SpdRotlForWhlsAtAxleFrntSafe1;
#endif
#ifndef RTE_TYPE_SpeedState
#define RTE_TYPE_SpeedState
typedef VAR(RTE_HLAF_SpeedState, TYPEDEF) SpeedState;
#endif
#ifndef RTE_TYPE_SpeedUnit_t
#define RTE_TYPE_SpeedUnit_t
typedef VAR(unsigned char, TYPEDEF) SpeedUnit_t;
#endif
#ifndef RTE_TYPE_SpeedUnit
#define RTE_TYPE_SpeedUnit
typedef VAR(SpeedUnit_t, TYPEDEF) SpeedUnit;
#endif
#ifndef RTE_TYPE_SpeedoSpeed
#define RTE_TYPE_SpeedoSpeed
typedef VAR(float, TYPEDEF) SpeedoSpeed;
#endif
#ifndef RTE_TYPE_ang_array_t
#define RTE_TYPE_ang_array_t
typedef VAR(float, TYPEDEF) ang_array_t[2];
#endif
#ifndef RTE_TYPE_rat_array_t
#define RTE_TYPE_rat_array_t
typedef VAR(float, TYPEDEF) rat_array_t[2];
#endif
#ifndef RTE_TYPE_swa_t
#define RTE_TYPE_swa_t
typedef struct
{
  VAR(ang_array_t, TYPEDEF) ang;
  VAR(rat_array_t, TYPEDEF) rat;
} swa_t;
#endif
#ifndef RTE_TYPE_vel_array_t
#define RTE_TYPE_vel_array_t
typedef VAR(float, TYPEDEF) vel_array_t[2];
#endif
#ifndef RTE_TYPE_rat_array_t_0
#define RTE_TYPE_rat_array_t_0
typedef VAR(float, TYPEDEF) rat_array_t_0[2];
#endif
#ifndef RTE_TYPE_vel_t
#define RTE_TYPE_vel_t
typedef struct
{
  VAR(vel_array_t, TYPEDEF) vel;
  VAR(rat_array_t_0, TYPEDEF) rat;
} vel_t;
#endif
#ifndef RTE_TYPE_StRatio_t
#define RTE_TYPE_StRatio_t
typedef struct
{
  VAR(swa_t, TYPEDEF) swa;
  VAR(vel_t, TYPEDEF) vel;
} StRatio_t;
#endif
#ifndef RTE_TYPE_StWheelAngle
#define RTE_TYPE_StWheelAngle
typedef VAR(float, TYPEDEF) StWheelAngle;
#endif
#ifndef RTE_TYPE_State_array_t
#define RTE_TYPE_State_array_t
typedef VAR(VDYIoStateTypes_t, TYPEDEF) State_array_t[9];
#endif
#ifndef RTE_TYPE_State_array_t_0
#define RTE_TYPE_State_array_t_0
typedef VAR(VDYIoStateTypes_t, TYPEDEF) State_array_t_0[32];
#endif
#ifndef RTE_TYPE_State_array_t_1
#define RTE_TYPE_State_array_t_1
typedef VAR(VDYIoStateTypes_t, TYPEDEF) State_array_t_1[28];
#endif
#ifndef RTE_TYPE_State_array_t_4
#define RTE_TYPE_State_array_t_4
typedef VAR(VDYIoStateTypes_t, TYPEDEF) State_array_t_4[32];
#endif
#ifndef RTE_TYPE_State_array_t_5
#define RTE_TYPE_State_array_t_5
typedef VAR(VDYIoStateTypes_t, TYPEDEF) State_array_t_5[32];
#endif
#ifndef RTE_TYPE_Std_ReturnType
#define RTE_TYPE_Std_ReturnType
typedef VAR(unsigned char, TYPEDEF) Std_ReturnType;
#endif
#ifndef RTE_TYPE_SteerLockStsUnit_t
#define RTE_TYPE_SteerLockStsUnit_t
typedef VAR(unsigned char, TYPEDEF) SteerLockStsUnit_t;
#endif
#ifndef RTE_TYPE_SteerLockSts
#define RTE_TYPE_SteerLockSts
typedef struct
{
  VAR(BoltSteerLockSts_t, TYPEDEF) Bolt;
  VAR(SteerLockStsUnit_t, TYPEDEF) Unit;
  VAR(FltSteerLockSts_t, TYPEDEF) Fault;
  VAR(SftySteerLockSts_t, TYPEDEF) Safety;
} SteerLockSts;
#endif
#ifndef RTE_TYPE_SteerWhlSnsrSafe1
#define RTE_TYPE_SteerWhlSnsrSafe1
typedef struct
{
  VAR(sint16_t, TYPEDEF) SteerWhlAg;
  VAR(sint16_t, TYPEDEF) SteerWhlAgSpd;
  VAR(GenQf_t, TYPEDEF) SteerWhlSnsrQf;
  VAR(uint8_t, TYPEDEF) SteerWhlSnsrChks;
  VAR(uint8_t, TYPEDEF) SteerWhlSnsrCntr;
} SteerWhlSnsrSafe1;
#endif
#ifndef RTE_TYPE_SteerWhlTqRec
#define RTE_TYPE_SteerWhlTqRec
typedef struct
{
  VAR(sint16_t, TYPEDEF) SteerWhlTq;
  VAR(GenQf_t, TYPEDEF) SteerWhlTqQf;
} SteerWhlTqRec;
#endif
#ifndef RTE_TYPE_SteeringVariant_t
#define RTE_TYPE_SteeringVariant_t
typedef VAR(unsigned char, TYPEDEF) SteeringVariant_t;
#endif
#ifndef RTE_TYPE_SteeringVariant
#define RTE_TYPE_SteeringVariant
typedef VAR(SteeringVariant_t, TYPEDEF) SteeringVariant;
#endif
#ifndef RTE_TYPE_SuspPosnVertAg_t
#define RTE_TYPE_SuspPosnVertAg_t
typedef VAR(float, TYPEDEF) SuspPosnVertAg_t;
#endif
#ifndef RTE_TYPE_SuspPosnVertAgRec1
#define RTE_TYPE_SuspPosnVertAgRec1
typedef struct
{
  VAR(SuspPosnVertAg_t, TYPEDEF) SuspPosnVertAg;
  VAR(GenQf_t, TYPEDEF) GenQf;
} SuspPosnVertAgRec1;
#endif
#ifndef RTE_TYPE_SuspPosnVert_t
#define RTE_TYPE_SuspPosnVert_t
typedef VAR(float, TYPEDEF) SuspPosnVert_t;
#endif
#ifndef RTE_TYPE_SuspPosnVertLeRec
#define RTE_TYPE_SuspPosnVertLeRec
typedef struct
{
  VAR(SuspPosnVert_t, TYPEDEF) SuspPosnVertLeFrnt;
  VAR(SuspPosnVert_t, TYPEDEF) SuspPosnVertLeRe;
  VAR(GenQf_t, TYPEDEF) SuspPosnVertLeFrntQf;
  VAR(GenQf_t, TYPEDEF) SuspPosnVertLeReQf;
} SuspPosnVertLeRec;
#endif
#ifndef RTE_TYPE_SuspPosnVertRiRec
#define RTE_TYPE_SuspPosnVertRiRec
typedef struct
{
  VAR(SuspPosnVert_t, TYPEDEF) SuspPosnVertRiFrnt;
  VAR(SuspPosnVert_t, TYPEDEF) SuspPosnVertRiRe;
  VAR(GenQf_t, TYPEDEF) SuspPosnVertRiFrntQf;
  VAR(GenQf_t, TYPEDEF) SuspPosnVertRiReQf;
  VAR(uint8_t, TYPEDEF) SuspPosnVertRiChks;
} SuspPosnVertRiRec;
#endif
#ifndef RTE_TYPE_SuspPosnVertRiRec1
#define RTE_TYPE_SuspPosnVertRiRec1
typedef struct
{
  VAR(SuspPosnVert_t, TYPEDEF) SuspPosnVertRiFrnt;
  VAR(SuspPosnVert_t, TYPEDEF) SuspPosnVertRiRe;
  VAR(GenQf_t, TYPEDEF) SuspPosnVertRiFrntQf;
  VAR(GenQf_t, TYPEDEF) SuspPosnVertRiReQf;
} SuspPosnVertRiRec1;
#endif
#ifndef RTE_TYPE_SwaCurve_t
#define RTE_TYPE_SwaCurve_t
typedef struct
{
  VAR(fCurve_t, TYPEDEF) Curve;
} SwaCurve_t;
#endif
#ifndef RTE_TYPE_Swa_t
#define RTE_TYPE_Swa_t
typedef struct
{
  VAR(fAngle_t, TYPEDEF) Offset;
  VAR(fVariance_t, TYPEDEF) Variance;
  VAR(int, TYPEDEF) State;
} Swa_t;
#endif
#ifndef RTE_TYPE_SysPerfMonStates_t
#define RTE_TYPE_SysPerfMonStates_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(boolean, TYPEDEF) bResetBlockageCriteria;
  VAR(AlgoErrorState_t, TYPEDEF) uSPMSelfTestState;
  VAR(AlgoErrorState_t, TYPEDEF) uSPMBlockageState;
} SysPerfMonStates_t;
#endif
#ifndef RTE_TYPE_SysU
#define RTE_TYPE_SysU
typedef struct
{
  VAR(uint8_t, TYPEDEF) SysU;
  VAR(GenQf_t, TYPEDEF) SysUQf;
} SysU;
#endif
#ifndef RTE_TYPE_TA19FCRDCLS_t
#define RTE_TYPE_TA19FCRDCLS_t
typedef VAR(unsigned char, TYPEDEF) TA19FCRDCLS_t;
#endif
#ifndef RTE_TYPE_TA19NSPDTYP_t
#define RTE_TYPE_TA19NSPDTYP_t
typedef VAR(unsigned char, TYPEDEF) TA19NSPDTYP_t;
#endif
#ifndef RTE_TYPE_TA19NSPLSGN_t
#define RTE_TYPE_TA19NSPLSGN_t
typedef VAR(unsigned char, TYPEDEF) TA19NSPLSGN_t;
#endif
#ifndef RTE_TYPE_TA19_BRANCH_t
#define RTE_TYPE_TA19_BRANCH_t
typedef VAR(unsigned char, TYPEDEF) TA19_BRANCH_t;
#endif
#ifndef RTE_TYPE_TA19_BUILTUP_t
#define RTE_TYPE_TA19_BUILTUP_t
typedef VAR(unsigned char, TYPEDEF) TA19_BUILTUP_t;
#endif
#ifndef RTE_TYPE_TA19_LINKCLS_t
#define RTE_TYPE_TA19_LINKCLS_t
typedef VAR(unsigned char, TYPEDEF) TA19_LINKCLS_t;
#endif
#ifndef RTE_TYPE_TA19_LYT_t
#define RTE_TYPE_TA19_LYT_t
typedef VAR(unsigned char, TYPEDEF) TA19_LYT_t;
#endif
#ifndef RTE_TYPE_TA19_MTCHCONF_t
#define RTE_TYPE_TA19_MTCHCONF_t
typedef VAR(unsigned char, TYPEDEF) TA19_MTCHCONF_t;
#endif
#ifndef RTE_TYPE_TA19_NENTLNK_t
#define RTE_TYPE_TA19_NENTLNK_t
typedef VAR(unsigned char, TYPEDEF) TA19_NENTLNK_t;
#endif
#ifndef RTE_TYPE_TA19_RDCLS_t
#define RTE_TYPE_TA19_RDCLS_t
typedef VAR(unsigned char, TYPEDEF) TA19_RDCLS_t;
#endif
#ifndef RTE_TYPE_TA19_RDC_t
#define RTE_TYPE_TA19_RDC_t
typedef VAR(unsigned char, TYPEDEF) TA19_RDC_t;
#endif
#ifndef RTE_TYPE_TA19_RDSTR_t
#define RTE_TYPE_TA19_RDSTR_t
typedef VAR(unsigned char, TYPEDEF) TA19_RDSTR_t;
#endif
#ifndef RTE_TYPE_TA19_ROUTSTS_t
#define RTE_TYPE_TA19_ROUTSTS_t
typedef VAR(unsigned char, TYPEDEF) TA19_ROUTSTS_t;
#endif
#ifndef RTE_TYPE_TCIInput_t
#define RTE_TYPE_TCIInput_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(float, TYPEDEF) f_DriveOffDistance;
  VAR(boolean, TYPEDEF) TCI_b_On;
} TCIInput_t;
#endif
#ifndef RTE_TYPE_TCI_State_t
#define RTE_TYPE_TCI_State_t
typedef VAR(unsigned char, TYPEDEF) TCI_State_t;
#endif
#ifndef RTE_TYPE_TCI_HMIDriveOffState_t
#define RTE_TYPE_TCI_HMIDriveOffState_t
typedef VAR(unsigned char, TYPEDEF) TCI_HMIDriveOffState_t;
#endif
#ifndef RTE_TYPE_TCIOutput_t
#define RTE_TYPE_TCIOutput_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(TCI_State_t, TYPEDEF) TCI_State;
  VAR(TCI_HMIDriveOffState_t, TYPEDEF) TCI_HMIDriveOffState;
  VAR(boolean, TYPEDEF) TCI_b_BuzReq;
  VAR(boolean, TYPEDEF) TCI_b_HMIDriveOff;
} TCIOutput_t;
#endif
#ifndef RTE_TYPE_TCSCtrl
#define RTE_TYPE_TCSCtrl
typedef VAR(bool8, TYPEDEF) TCSCtrl;
#endif
#ifndef RTE_TYPE_TJAObjGen_t
#define RTE_TYPE_TJAObjGen_t
typedef struct
{
  VAR(SelectedTargetObjDetected_nu_t, TYPEDEF) SelectedTargetObjDetected_nu;
  VAR(a_reserve_array_t, TYPEDEF) array_reserved1;
  VAR(float, TYPEDEF) MovementRelAclX_mps2;
  VAR(float, TYPEDEF) MovementRelVelX_mps;
  VAR(float, TYPEDEF) MovementRelAclY_mps2;
  VAR(float, TYPEDEF) MovementRelVelY_mps;
  VAR(float, TYPEDEF) PositionPosX_m;
  VAR(float, TYPEDEF) PositionPosY_m;
  VAR(float, TYPEDEF) PositionPosXStdDev_m;
  VAR(float, TYPEDEF) PositionPosYStdDev_m;
  VAR(unsigned char, TYPEDEF) ObjQuality_nu;
  VAR(unsigned char, TYPEDEF) u_reserved2;
  VAR(ObjRecognClassType_nu_t, TYPEDEF) ObjRecognClassType_nu;
  VAR(ObjRecognMeasState_nu_t, TYPEDEF) ObjRecognMeasState_nu;
  VAR(float, TYPEDEF) DimensionsWidth_m;
  VAR(SensorSource_nu_t, TYPEDEF) SensorSource_nu;
  VAR(a_reserve_array_t, TYPEDEF) array_reserved3;
  VAR(unsigned int, TYPEDEF) Tstamp_us;
  VAR(unsigned char, TYPEDEF) ObjRecognExtendedQualifier_nu;
  VAR(a_reserve_array_t, TYPEDEF) array_reserved4;
} TJAObjGen_t;
#endif
#ifndef RTE_TYPE_TJATargetObj_t
#define RTE_TYPE_TJATargetObj_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(TJAObjGen_t, TYPEDEF) TJAObjGen;
  VAR(ACCTraceTrajectory_t, TYPEDEF) ACCTraceTrajectory;
} TJATargetObj_t;
#endif
#ifndef RTE_TYPE_TLR_e_Class
#define RTE_TYPE_TLR_e_Class
typedef VAR(unsigned short, TYPEDEF) TLR_e_Class;
#endif
#ifndef RTE_TYPE_TLR_e_ClassMode
#define RTE_TYPE_TLR_e_ClassMode
typedef VAR(unsigned short, TYPEDEF) TLR_e_ClassMode;
#endif
#ifndef RTE_TYPE_TLR_e_Color
#define RTE_TYPE_TLR_e_Color
typedef VAR(unsigned char, TYPEDEF) TLR_e_Color;
#endif
#ifndef RTE_TYPE_TLR_e_LightMode
#define RTE_TYPE_TLR_e_LightMode
typedef VAR(unsigned char, TYPEDEF) TLR_e_LightMode;
#endif
#ifndef RTE_TYPE_TLR_e_MeasStatus
#define RTE_TYPE_TLR_e_MeasStatus
typedef VAR(unsigned char, TYPEDEF) TLR_e_MeasStatus;
#endif
#ifndef RTE_TYPE_TLR_e_RejectionReason
#define RTE_TYPE_TLR_e_RejectionReason
typedef VAR(unsigned int, TYPEDEF) TLR_e_RejectionReason;
#endif
#ifndef RTE_TYPE_TLR_e_TimeOfDay
#define RTE_TYPE_TLR_e_TimeOfDay
typedef VAR(unsigned char, TYPEDEF) TLR_e_TimeOfDay;
#endif
#ifndef RTE_TYPE_TLR_t_ClassConfArray
#define RTE_TYPE_TLR_t_ClassConfArray
typedef VAR(unsigned char, TYPEDEF) TLR_t_ClassConfArray[60];
#endif
#ifndef RTE_TYPE_TLR_t_ClassLUTArray
#define RTE_TYPE_TLR_t_ClassLUTArray
typedef VAR(TLR_e_Class, TYPEDEF) TLR_t_ClassLUTArray[60];
#endif
#ifndef RTE_TYPE_TLR_t_Point2D_t
#define RTE_TYPE_TLR_t_Point2D_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) u_X;
  VAR(unsigned short, TYPEDEF) u_Y;
} TLR_t_Point2D_t;
#endif
#ifndef RTE_TYPE_TLR_t_Roi_t
#define RTE_TYPE_TLR_t_Roi_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) u_X;
  VAR(unsigned short, TYPEDEF) u_Y;
  VAR(unsigned short, TYPEDEF) u_Width;
  VAR(unsigned short, TYPEDEF) u_Height;
} TLR_t_Roi_t;
#endif
#ifndef RTE_TYPE_TLR_t_FctRoi_t
#define RTE_TYPE_TLR_t_FctRoi_t
typedef struct
{
  VAR(TLR_t_Point2D_t, TYPEDEF) r_Offset2CRoi;
  VAR(TLR_t_Point2D_t, TYPEDEF) r_FoE;
  VAR(TLR_t_Roi_t, TYPEDEF) r_Roi;
} TLR_t_FctRoi_t;
#endif
#ifndef RTE_TYPE_TLR_t_Roif_t
#define RTE_TYPE_TLR_t_Roif_t
typedef struct
{
  VAR(float, TYPEDEF) f_X;
  VAR(float, TYPEDEF) f_Y;
  VAR(float, TYPEDEF) f_Width;
  VAR(float, TYPEDEF) f_Height;
} TLR_t_Roif_t;
#endif
#ifndef RTE_TYPE_TLR_t_Point2Df_t
#define RTE_TYPE_TLR_t_Point2Df_t
typedef struct
{
  VAR(float, TYPEDEF) f_X;
  VAR(float, TYPEDEF) f_Y;
} TLR_t_Point2Df_t;
#endif
#ifndef RTE_TYPE_TLR_t_OutputTrack
#define RTE_TYPE_TLR_t_OutputTrack
typedef struct
{
  VAR(unsigned char, TYPEDEF) u_Id;
  VAR(unsigned char, TYPEDEF) u_LmkId;
  VAR(unsigned int, TYPEDEF) u_TrackLength;
  VAR(TLR_t_Roi_t, TYPEDEF) r_Bbox;
  VAR(TLR_t_Roif_t, TYPEDEF) r_BboxSubpixel;
  VAR(TLR_t_Point2Df_t, TYPEDEF) r_Pos;
  VAR(TLR_e_MeasStatus, TYPEDEF) e_MeasStatus;
  VAR(TLR_e_RejectionReason, TYPEDEF) e_Reason4Rejection;
  VAR(unsigned char, TYPEDEF) u_Confidence;
  VAR(TLR_e_Color, TYPEDEF) e_Color;
  VAR(TLR_e_LightMode, TYPEDEF) e_LightMode;
  VAR(TLR_e_Class, TYPEDEF) e_Class;
  VAR(TLR_e_ClassMode, TYPEDEF) e_ClassMode;
  VAR(unsigned char, TYPEDEF) u_ClassConfidence;
  VAR(TLR_t_ClassConfArray, TYPEDEF) a_ClassConf;
} TLR_t_OutputTrack;
#endif
#ifndef RTE_TYPE_TLR_t_OutputTrackList
#define RTE_TYPE_TLR_t_OutputTrackList
typedef VAR(TLR_t_OutputTrack, TYPEDEF) TLR_t_OutputTrackList[20];
#endif
#ifndef RTE_TYPE_TLR_t_Output_t
#define RTE_TYPE_TLR_t_Output_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(TLR_t_FctRoi_t, TYPEDEF) r_Roi;
  VAR(TLR_e_TimeOfDay, TYPEDEF) e_TimeOfDay;
  VAR(unsigned char, TYPEDEF) u_FeatureMaster;
  VAR(unsigned int, TYPEDEF) u_NumTracks;
  VAR(TLR_t_ClassLUTArray, TYPEDEF) a_ClassLUT;
  VAR(TLR_t_OutputTrackList, TYPEDEF) a_TrackList;
} TLR_t_Output_t;
#endif
#ifndef RTE_TYPE_TSARteWwaStatus_t
#define RTE_TYPE_TSARteWwaStatus_t
typedef VAR(unsigned char, TYPEDEF) TSARteWwaStatus_t;
#endif
#ifndef RTE_TYPE_signalState_t
#define RTE_TYPE_signalState_t
typedef VAR(unsigned char, TYPEDEF) signalState_t;
#endif
#ifndef RTE_TYPE_TSARte_drivingDistance_t
#define RTE_TYPE_TSARte_drivingDistance_t
typedef struct
{
  VAR(signalState_t, TYPEDEF) signalState;
  VAR(float, TYPEDEF) value;
} TSARte_drivingDistance_t;
#endif
#ifndef RTE_TYPE_TrafficStyle_t
#define RTE_TYPE_TrafficStyle_t
typedef VAR(unsigned char, TYPEDEF) TrafficStyle_t;
#endif
#ifndef RTE_TYPE_spdLmt_array_t_0
#define RTE_TYPE_spdLmt_array_t_0
typedef VAR(SLASpdLim_t, TYPEDEF) spdLmt_array_t_0[2];
#endif
#ifndef RTE_TYPE_TSA_SLATE_Input_t
#define RTE_TYPE_TSA_SLATE_Input_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(TrafficStyle_t, TYPEDEF) trafficStyle;
  VAR(spdLmt_array_t_0, TYPEDEF) spdLmt;
} TSA_SLATE_Input_t;
#endif
#ifndef RTE_TYPE_TargetControlCommand_t
#define RTE_TYPE_TargetControlCommand_t
typedef struct
{
  VAR(boolean, TYPEDEF) b_Enable;
  VAR(unsigned char, TYPEDEF) u_HeadwaySetting;
} TargetControlCommand_t;
#endif
#ifndef RTE_TYPE_TargetControlCommandPort_t
#define RTE_TYPE_TargetControlCommandPort_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(TargetControlCommand_t, TYPEDEF) t_Command;
  VAR(FunctionDegradation_t, TYPEDEF) t_Degrade;
} TargetControlCommandPort_t;
#endif
#ifndef RTE_TYPE_TargetControlState_t
#define RTE_TYPE_TargetControlState_t
typedef struct
{
  VAR(boolean, TYPEDEF) b_Ready;
  VAR(boolean, TYPEDEF) b_Active;
  VAR(boolean, TYPEDEF) b_TargetDetected;
  VAR(boolean, TYPEDEF) b_ControlAlert;
  VAR(unsigned char, TYPEDEF) u_DistanceRequested;
  VAR(unsigned char, TYPEDEF) u_DistanceTarget;
  VAR(unsigned char, TYPEDEF) u_SpeedTarget;
} TargetControlState_t;
#endif
#ifndef RTE_TYPE_TargetControlStatePort_t
#define RTE_TYPE_TargetControlStatePort_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(TargetControlState_t, TYPEDEF) t_State;
} TargetControlStatePort_t;
#endif
#ifndef RTE_TYPE_af_RelLongDistErr_array_t
#define RTE_TYPE_af_RelLongDistErr_array_t
typedef VAR(float, TYPEDEF) af_RelLongDistErr_array_t[8];
#endif
#ifndef RTE_TYPE_af_RelLongPrefAcc_array_t
#define RTE_TYPE_af_RelLongPrefAcc_array_t
typedef VAR(float, TYPEDEF) af_RelLongPrefAcc_array_t[8];
#endif
#ifndef RTE_TYPE_TargetPreferences_t
#define RTE_TYPE_TargetPreferences_t
typedef struct
{
  VAR(float, TYPEDEF) f_RelLongDistReference;
  VAR(float, TYPEDEF) f_RelLongDistIntrusion;
  VAR(float, TYPEDEF) f_RelLongDistAlert;
  VAR(af_RelLongDistErr_array_t, TYPEDEF) af_RelLongDistErr;
  VAR(af_RelLongPrefAcc_array_t, TYPEDEF) af_RelLongPrefAcc;
  VAR(unsigned char, TYPEDEF) u_RelLongDistErrorDynSize;
  VAR(unsigned char, TYPEDEF) u_RelLongDistErrZeroIndex;
  VAR(boolean, TYPEDEF) b_ActiveIntrusionCtrl;
} TargetPreferences_t;
#endif
#ifndef RTE_TYPE_TargetVehicle_t
#define RTE_TYPE_TargetVehicle_t
typedef struct
{
  VAR(float, TYPEDEF) f_RelLongAccel;
  VAR(float, TYPEDEF) f_RelLongVelo;
  VAR(float, TYPEDEF) f_RelLongDist;
} TargetVehicle_t;
#endif
#ifndef RTE_TYPE_TargetFollowCommand_t
#define RTE_TYPE_TargetFollowCommand_t
typedef struct
{
  VAR(ControlLimitations_t, TYPEDEF) t_CtrLimit;
  VAR(TargetPreferences_t, TYPEDEF) t_TarPref;
  VAR(TargetVehicle_t, TYPEDEF) t_TarVeh;
  VAR(boolean, TYPEDEF) b_Enable;
} TargetFollowCommand_t;
#endif
#ifndef RTE_TYPE_at_TFC_array_t
#define RTE_TYPE_at_TFC_array_t
typedef VAR(TargetFollowCommand_t, TYPEDEF) at_TFC_array_t[6];
#endif
#ifndef RTE_TYPE_TargetFollowCommandPort_t
#define RTE_TYPE_TargetFollowCommandPort_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(at_TFC_array_t, TYPEDEF) at_TFC;
} TargetFollowCommandPort_t;
#endif
#ifndef RTE_TYPE_TargetFollowState_t
#define RTE_TYPE_TargetFollowState_t
typedef struct
{
  VAR(float, TYPEDEF) f_LongDecelMax;
  VAR(boolean, TYPEDEF) b_Active;
  VAR(boolean, TYPEDEF) b_Limited;
  VAR(boolean, TYPEDEF) b_ControlAlert;
} TargetFollowState_t;
#endif
#ifndef RTE_TYPE_at_TFS_array_t
#define RTE_TYPE_at_TFS_array_t
typedef VAR(TargetFollowState_t, TYPEDEF) at_TFS_array_t[6];
#endif
#ifndef RTE_TYPE_TargetFollowStatePort_t
#define RTE_TYPE_TargetFollowStatePort_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(at_TFS_array_t, TYPEDEF) at_TFS;
} TargetFollowStatePort_t;
#endif
#ifndef RTE_TYPE_TestMode
#define RTE_TYPE_TestMode
typedef VAR(RTE_HLA_TestMode, TYPEDEF) TestMode;
#endif
#ifndef RTE_TYPE_TrackWidthFront
#define RTE_TYPE_TrackWidthFront
typedef VAR(float, TYPEDEF) TrackWidthFront;
#endif
#ifndef RTE_TYPE_TrackWidthRear
#define RTE_TYPE_TrackWidthRear
typedef VAR(float, TYPEDEF) TrackWidthRear;
#endif
#ifndef RTE_TYPE_TrafficStyle
#define RTE_TYPE_TrafficStyle
typedef VAR(RTE_HLA_TrafficStyle, TYPEDEF) TrafficStyle;
#endif
#ifndef RTE_TYPE_TrajServiceQualifier_nu
#define RTE_TYPE_TrajServiceQualifier_nu
typedef VAR(TrajServiceQualifier_nu_t, TYPEDEF) TrajServiceQualifier_nu;
#endif
#ifndef RTE_TYPE_TrsmActrSnsrPosn1
#define RTE_TYPE_TrsmActrSnsrPosn1
typedef VAR(unsigned char, TYPEDEF) TrsmActrSnsrPosn1;
#endif
#ifndef RTE_TYPE_TrsmActrSnsrPosnSafe1
#define RTE_TYPE_TrsmActrSnsrPosnSafe1
typedef struct
{
  VAR(TrsmActrSnsrPosn1, TYPEDEF) TrsmActrSnsrPosn;
  VAR(uint8_t, TYPEDEF) Cntr;
  VAR(uint8_t, TYPEDEF) Chks;
} TrsmActrSnsrPosnSafe1;
#endif
#ifndef RTE_TYPE_TrsmNSafe1
#define RTE_TYPE_TrsmNSafe1
typedef struct
{
  VAR(uint16_t, TYPEDEF) TrsmNInp;
  VAR(uint16_t, TYPEDEF) TrsmNOutp;
  VAR(boolean, TYPEDEF) TrsmNInpOk;
  VAR(boolean, TYPEDEF) TrsmNOutpOk;
  VAR(uint8_t, TYPEDEF) TrsmNCntr;
  VAR(uint8_t, TYPEDEF) TrsmNChks;
} TrsmNSafe1;
#endif
#ifndef RTE_TYPE_TrsmStAxleReActr1
#define RTE_TYPE_TrsmStAxleReActr1
typedef VAR(unsigned char, TYPEDEF) TrsmStAxleReActr1;
#endif
#ifndef RTE_TYPE_True_False_s_t
#define RTE_TYPE_True_False_s_t
typedef VAR(unsigned char, TYPEDEF) True_False_s_t;
#endif
#ifndef RTE_TYPE_TsaRteActivationStatus_t
#define RTE_TYPE_TsaRteActivationStatus_t
typedef VAR(unsigned char, TYPEDEF) TsaRteActivationStatus_t;
#endif
#ifndef RTE_TYPE_TsaRteConditionFlag_t
#define RTE_TYPE_TsaRteConditionFlag_t
typedef VAR(unsigned char, TYPEDEF) TsaRteConditionFlag_t;
#endif
#ifndef RTE_TYPE_TsaRteCurrentMotorway_t
#define RTE_TYPE_TsaRteCurrentMotorway_t
typedef VAR(unsigned char, TYPEDEF) TsaRteCurrentMotorway_t;
#endif
#ifndef RTE_TYPE_TsaRteCurrentUrbanArea_t
#define RTE_TYPE_TsaRteCurrentUrbanArea_t
typedef VAR(unsigned char, TYPEDEF) TsaRteCurrentUrbanArea_t;
#endif
#ifndef RTE_TYPE_TsaRteCustomBzrReq_t
#define RTE_TYPE_TsaRteCustomBzrReq_t
typedef VAR(unsigned char, TYPEDEF) TsaRteCustomBzrReq_t;
#endif
#ifndef RTE_TYPE_TsaRteCustomGrayLevel_t
#define RTE_TYPE_TsaRteCustomGrayLevel_t
typedef VAR(unsigned char, TYPEDEF) TsaRteCustomGrayLevel_t;
#endif
#ifndef RTE_TYPE_TsaRteCustomHighlightStatus_t
#define RTE_TYPE_TsaRteCustomHighlightStatus_t
typedef VAR(unsigned char, TYPEDEF) TsaRteCustomHighlightStatus_t;
#endif
#ifndef RTE_TYPE_TsaRteWarnCfg_t
#define RTE_TYPE_TsaRteWarnCfg_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) uOverSpeedHysteresisThresholdStart;
  VAR(unsigned char, TYPEDEF) uOverSpeedHysteresisThresholdEnd;
} TsaRteWarnCfg_t;
#endif
#ifndef RTE_TYPE_TsaRteFuncRestraint_t
#define RTE_TYPE_TsaRteFuncRestraint_t
typedef struct
{
  VAR(boolean, TYPEDEF) bRestraint_IcyState;
  VAR(boolean, TYPEDEF) bRestraint_RainState;
  VAR(boolean, TYPEDEF) bRestraint_ExitInUse;
  VAR(boolean, TYPEDEF) bRestraint_SUEInitFromTachoUnit;
  VAR(boolean, TYPEDEF) bRestraint_drivingDistanceUsage;
} TsaRteFuncRestraint_t;
#endif
#ifndef RTE_TYPE_TsaRteCustomInput_t
#define RTE_TYPE_TsaRteCustomInput_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(boolean, TYPEDEF) bTsaDeactivateCCELearning;
  VAR(TsaRteWarnCfg_t, TYPEDEF) sWarnCfg;
  VAR(TsaRteFuncRestraint_t, TYPEDEF) FunctionRestraintConditions;
} TsaRteCustomInput_t;
#endif
#ifndef RTE_TYPE_TsaRteCustomNoticeMethod_t
#define RTE_TYPE_TsaRteCustomNoticeMethod_t
typedef VAR(unsigned char, TYPEDEF) TsaRteCustomNoticeMethod_t;
#endif
#ifndef RTE_TYPE_TsaRteCustomOutput_t
#define RTE_TYPE_TsaRteCustomOutput_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
} TsaRteCustomOutput_t;
#endif
#ifndef RTE_TYPE_TsaRteCustomOvSpdStartVal_t
#define RTE_TYPE_TsaRteCustomOvSpdStartVal_t
typedef VAR(unsigned char, TYPEDEF) TsaRteCustomOvSpdStartVal_t;
#endif
#ifndef RTE_TYPE_TsaRteCustomSignClass_t
#define RTE_TYPE_TsaRteCustomSignClass_t
typedef VAR(unsigned char, TYPEDEF) TsaRteCustomSignClass_t;
#endif
#ifndef RTE_TYPE_TsaRteCustomSpeedUnit_t
#define RTE_TYPE_TsaRteCustomSpeedUnit_t
typedef VAR(unsigned char, TYPEDEF) TsaRteCustomSpeedUnit_t;
#endif
#ifndef RTE_TYPE_TsaRteCustomSupplSignClass_t
#define RTE_TYPE_TsaRteCustomSupplSignClass_t
typedef VAR(unsigned char, TYPEDEF) TsaRteCustomSupplSignClass_t;
#endif
#ifndef RTE_TYPE_TsaRteExitRampFlag_t
#define RTE_TYPE_TsaRteExitRampFlag_t
typedef VAR(unsigned char, TYPEDEF) TsaRteExitRampFlag_t;
#endif
#ifndef RTE_TYPE_TsaRteDebugInformation_t
#define RTE_TYPE_TsaRteDebugInformation_t
typedef struct
{
  VAR(unsigned short, TYPEDEF) uCounterSignsRight;
  VAR(unsigned short, TYPEDEF) uCounterSignsLeft;
  VAR(TsaRteConditionFlag_t, TYPEDEF) eTurnConditionFlag;
  VAR(TsaRteConditionFlag_t, TYPEDEF) eIceConditionFlag;
  VAR(TsaRteConditionFlag_t, TYPEDEF) eRainConditionFlag;
  VAR(TsaRteExitRampFlag_t, TYPEDEF) eExitRampDetectedFlag;
  VAR(TsaRteExitRampFlag_t, TYPEDEF) eExitRampInUseFlag;
  VAR(boolean, TYPEDEF) bOvertakingDetectedFlag;
  VAR(boolean, TYPEDEF) TA19_JP_EXPYFLG;
} TsaRteDebugInformation_t;
#endif
#ifndef RTE_TYPE_TsaRteEstimationResults_t
#define RTE_TYPE_TsaRteEstimationResults_t
typedef struct
{
  VAR(int, TYPEDEF) countryCode;
  VAR(TsaRteTrafficStyle_t, TYPEDEF) trafficStyle;
  VAR(TsaRteSpeedUnit_t, TYPEDEF) spdUnt;
  VAR(int, TYPEDEF) estCountryCode;
  VAR(TsaRteTrafficStyle_t, TYPEDEF) estTrafficStyle;
  VAR(TsaRteSpeedUnit_t, TYPEDEF) estSpdUnt;
  VAR(unsigned char, TYPEDEF) uSpeedUnitConfidence;
  VAR(unsigned char, TYPEDEF) uTrafficStyleConfidence;
  VAR(unsigned char, TYPEDEF) uCountryCodeConfidence;
} TsaRteEstimationResults_t;
#endif
#ifndef RTE_TYPE_e_naviFrwInfo_t
#define RTE_TYPE_e_naviFrwInfo_t
typedef VAR(unsigned char, TYPEDEF) e_naviFrwInfo_t;
#endif
#ifndef RTE_TYPE_e_naviLinkClass_t
#define RTE_TYPE_e_naviLinkClass_t
typedef VAR(unsigned char, TYPEDEF) e_naviLinkClass_t;
#endif
#ifndef RTE_TYPE_e_naviTollStation_t
#define RTE_TYPE_e_naviTollStation_t
typedef VAR(unsigned char, TYPEDEF) e_naviTollStation_t;
#endif
#ifndef RTE_TYPE_e_naviTimeSpdStatus_t
#define RTE_TYPE_e_naviTimeSpdStatus_t
typedef VAR(unsigned char, TYPEDEF) e_naviTimeSpdStatus_t;
#endif
#ifndef RTE_TYPE_e_naviTunnel_t
#define RTE_TYPE_e_naviTunnel_t
typedef VAR(unsigned char, TYPEDEF) e_naviTunnel_t;
#endif
#ifndef RTE_TYPE_TsaRteInputNaviHI17_t
#define RTE_TYPE_TsaRteInputNaviHI17_t
typedef struct
{
  VAR(boolean, TYPEDEF) b_naviFusionOK;
  VAR(unsigned char, TYPEDEF) u_naviSpeedLimit;
  VAR(TsaRteSpeedUnit_t, TYPEDEF) e_naviSpeedUnit;
  VAR(e_naviFrwInfo_t, TYPEDEF) e_naviFrwInfo;
  VAR(e_naviLinkClass_t, TYPEDEF) e_naviLinkClass;
  VAR(e_naviTollStation_t, TYPEDEF) e_naviTollStation;
  VAR(e_naviTimeSpdStatus_t, TYPEDEF) e_naviTimeSpdStatus;
  VAR(unsigned char, TYPEDEF) u_naviTimeSpdVal;
  VAR(e_naviTunnel_t, TYPEDEF) e_naviTunnel;
} TsaRteInputNaviHI17_t;
#endif
#ifndef RTE_TYPE_eNav_CurrRoadType_t
#define RTE_TYPE_eNav_CurrRoadType_t
typedef VAR(unsigned char, TYPEDEF) eNav_CurrRoadType_t;
#endif
#ifndef RTE_TYPE_e_NavSpeedLimitStatus_t
#define RTE_TYPE_e_NavSpeedLimitStatus_t
typedef VAR(unsigned char, TYPEDEF) e_NavSpeedLimitStatus_t;
#endif
#ifndef RTE_TYPE_TsaRteInputNaviSW19CN_t
#define RTE_TYPE_TsaRteInputNaviSW19CN_t
typedef struct
{
  VAR(boolean, TYPEDEF) b_naviFusionON;
  VAR(unsigned char, TYPEDEF) u_naviSpeedLimit;
  VAR(TsaRteSpeedUnit_t, TYPEDEF) spdUnt;
  VAR(eNav_CurrRoadType_t, TYPEDEF) eNav_CurrRoadType;
  VAR(e_NavSpeedLimitStatus_t, TYPEDEF) e_NavSpeedLimitStatus;
} TsaRteInputNaviSW19CN_t;
#endif
#ifndef RTE_TYPE_naviSpeedLimitTA19EU
#define RTE_TYPE_naviSpeedLimitTA19EU
typedef struct
{
  VAR(unsigned char, TYPEDEF) value;
  VAR(TA19NSPDTYP_t, TYPEDEF) type;
  VAR(TA19NSPLSGN_t, TYPEDEF) supplSign;
} naviSpeedLimitTA19EU;
#endif
#ifndef RTE_TYPE_roadClass_array_t
#define RTE_TYPE_roadClass_array_t
typedef VAR(TA19_RDCLS_t, TYPEDEF) roadClass_array_t[5];
#endif
#ifndef RTE_TYPE_linkClass_array_t
#define RTE_TYPE_linkClass_array_t
typedef VAR(TA19_LINKCLS_t, TYPEDEF) linkClass_array_t[5];
#endif
#ifndef RTE_TYPE_roadStructure_array_t
#define RTE_TYPE_roadStructure_array_t
typedef VAR(TA19_RDSTR_t, TYPEDEF) roadStructure_array_t[5];
#endif
#ifndef RTE_TYPE_builtupFlag_array_t
#define RTE_TYPE_builtupFlag_array_t
typedef VAR(TA19_BUILTUP_t, TYPEDEF) builtupFlag_array_t[5];
#endif
#ifndef RTE_TYPE_noEntryLink_array_t
#define RTE_TYPE_noEntryLink_array_t
typedef VAR(TA19_NENTLNK_t, TYPEDEF) noEntryLink_array_t[5];
#endif
#ifndef RTE_TYPE_TsaRteInputNaviTA19EU_t
#define RTE_TYPE_TsaRteInputNaviTA19EU_t
typedef struct
{
  VAR(naviSpeedLimitTA19EU, TYPEDEF) naviSpeedLimitTA19EU[6];
  VAR(boolean, TYPEDEF) TSR_Navifusion_ON_Flag_EU;
  VAR(boolean, TYPEDEF) TSR_Restraint_Condition_Of_AVN;
  VAR(boolean, TYPEDEF) TSR_Navifusion_Map_valid;
  VAR(boolean, TYPEDEF) TSR_Navifusion_Speed_valid;
  VAR(TA19FCRDCLS_t, TYPEDEF) frc;
  VAR(roadClass_array_t, TYPEDEF) roadClass;
  VAR(linkClass_array_t, TYPEDEF) linkClass;
  VAR(roadStructure_array_t, TYPEDEF) roadStructure;
  VAR(builtupFlag_array_t, TYPEDEF) builtupFlag;
  VAR(noEntryLink_array_t, TYPEDEF) noEntryLink;
  VAR(unsigned short, TYPEDEF) remainDist;
  VAR(TsaRteSpeedUnit_t, TYPEDEF) spdUnt;
  VAR(TA19_MTCHCONF_t, TYPEDEF) matchingConf;
  VAR(TA19_ROUTSTS_t, TYPEDEF) routSts;
  VAR(unsigned char, TYPEDEF) mapAge;
  VAR(unsigned char, TYPEDEF) numOfLanes;
} TsaRteInputNaviTA19EU_t;
#endif
#ifndef RTE_TYPE_TsaRteInputNaviTA19JP_t
#define RTE_TYPE_TsaRteInputNaviTA19JP_t
typedef struct
{
  VAR(boolean, TYPEDEF) TSR_Navifusion_ON_Flag_JP;
  VAR(TA19_RDC_t, TYPEDEF) eRoadClass;
  VAR(TA19_LYT_t, TYPEDEF) eLinkType;
  VAR(boolean, TYPEDEF) bDriveWay;
  VAR(boolean, TYPEDEF) bMotorwayMap;
  VAR(boolean, TYPEDEF) bTunnel;
  VAR(TA19_BRANCH_t, TYPEDEF) eBranch;
  VAR(unsigned char, TYPEDEF) uConfidence;
} TsaRteInputNaviTA19JP_t;
#endif
#ifndef RTE_TYPE_TsaRteNaviProvider_t
#define RTE_TYPE_TsaRteNaviProvider_t
typedef VAR(unsigned char, TYPEDEF) TsaRteNaviProvider_t;
#endif
#ifndef RTE_TYPE_e_subStructureFilled_t
#define RTE_TYPE_e_subStructureFilled_t
typedef VAR(unsigned char, TYPEDEF) e_subStructureFilled_t;
#endif
#ifndef RTE_TYPE_TsaRteInputNavigation_t
#define RTE_TYPE_TsaRteInputNavigation_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(unsigned short, TYPEDEF) u_countryCode;
  VAR(TsaRteNaviProvider_t, TYPEDEF) e_naviProvider;
  VAR(e_subStructureFilled_t, TYPEDEF) e_subStructureFilled;
  VAR(TsaRteInputNaviHI17_t, TYPEDEF) InputNaviHI17;
  VAR(TsaRteInputNaviTA19EU_t, TYPEDEF) InputNaviTA19EU;
  VAR(TsaRteInputNaviTA19JP_t, TYPEDEF) InputNaviTA19JP;
  VAR(TsaRteInputNaviSW19CN_t, TYPEDEF) InputNaviSW19CN;
} TsaRteInputNavigation_t;
#endif
#ifndef RTE_TYPE_TsaRteNpaStatus_t
#define RTE_TYPE_TsaRteNpaStatus_t
typedef VAR(unsigned char, TYPEDEF) TsaRteNpaStatus_t;
#endif
#ifndef RTE_TYPE_TsaRteNpaSupplSignValState_t
#define RTE_TYPE_TsaRteNpaSupplSignValState_t
typedef VAR(unsigned char, TYPEDEF) TsaRteNpaSupplSignValState_t;
#endif
#ifndef RTE_TYPE_eventType_t
#define RTE_TYPE_eventType_t
typedef VAR(unsigned char, TYPEDEF) eventType_t;
#endif
#ifndef RTE_TYPE_TsaRteWarning_t
#define RTE_TYPE_TsaRteWarning_t
typedef VAR(unsigned char, TYPEDEF) TsaRteWarning_t;
#endif
#ifndef RTE_TYPE_TsaRteTrafficSignDebugInformation_t
#define RTE_TYPE_TsaRteTrafficSignDebugInformation_t
typedef struct
{
  VAR(float, TYPEDEF) fSignHeight;
  VAR(float, TYPEDEF) fSignLateralOffset;
  VAR(float, TYPEDEF) fSignDistanceClassified;
  VAR(float, TYPEDEF) fSignPassedDistance;
  VAR(unsigned char, TYPEDEF) uSignRepostCounter;
} TsaRteTrafficSignDebugInformation_t;
#endif
#ifndef RTE_TYPE_TsaRteOutputGwwResult_t
#define RTE_TYPE_TsaRteOutputGwwResult_t
typedef struct
{
  VAR(float, TYPEDEF) distance;
  VAR(float, TYPEDEF) timeToCollision;
  VAR(eventType_t, TYPEDEF) eventType;
  VAR(TsaRteActivationStatus_t, TYPEDEF) activationStatus;
  VAR(TsaRteWarning_t, TYPEDEF) warning;
  VAR(TsaRteTrafficSignDebugInformation_t, TYPEDEF) sTrafficSignDebugInfo;
} TsaRteOutputGwwResult_t;
#endif
#ifndef RTE_TYPE_TsaRteSignVal_t
#define RTE_TYPE_TsaRteSignVal_t
typedef VAR(unsigned char, TYPEDEF) TsaRteSignVal_t;
#endif
#ifndef RTE_TYPE_TsaRteOutputNpaResult_t
#define RTE_TYPE_TsaRteOutputNpaResult_t
typedef struct
{
  VAR(TsaRteNpaStatus_t, TYPEDEF) noPassingStatus;
  VAR(TsaRteSignVal_t, TYPEDEF) noPassingValidity;
  VAR(TsaRteNpaSupplSignValState_t, TYPEDEF) noPassingSupplSignVal;
  VAR(TsaRteWarning_t, TYPEDEF) warning;
  VAR(TsaRteTrafficSignDebugInformation_t, TYPEDEF) sTrafficSignDebugInfo;
} TsaRteOutputNpaResult_t;
#endif
#ifndef RTE_TYPE_signType_t
#define RTE_TYPE_signType_t
typedef VAR(unsigned char, TYPEDEF) signType_t;
#endif
#ifndef RTE_TYPE_TsaRteSlaSupSgnVal_t
#define RTE_TYPE_TsaRteSlaSupSgnVal_t
typedef VAR(unsigned char, TYPEDEF) TsaRteSlaSupSgnVal_t;
#endif
#ifndef RTE_TYPE_TsaRteSlaSpdLmt_t
#define RTE_TYPE_TsaRteSlaSpdLmt_t
typedef struct
{
  VAR(signType_t, TYPEDEF) signType;
  VAR(unsigned char, TYPEDEF) spdLmtValue;
  VAR(TsaRteSignVal_t, TYPEDEF) spdLmtValidity;
  VAR(TsaRteSlaSupSgnVal_t, TYPEDEF) supplSignValidityState;
  VAR(TsaRteSpeedUnit_t, TYPEDEF) spdUnit;
  VAR(TsaRteWarning_t, TYPEDEF) warning;
  VAR(unsigned char, TYPEDEF) uConfidence;
  VAR(TsaRteTrafficSignDebugInformation_t, TYPEDEF) sTrafficSignDebugInfo;
} TsaRteSlaSpdLmt_t;
#endif
#ifndef RTE_TYPE_aRteSlaSpdLmt
#define RTE_TYPE_aRteSlaSpdLmt
typedef VAR(TsaRteSlaSpdLmt_t, TYPEDEF) aRteSlaSpdLmt[3];
#endif
#ifndef RTE_TYPE_TsaRteOutputSlaResult_t
#define RTE_TYPE_TsaRteOutputSlaResult_t
typedef struct
{
  VAR(aRteSlaSpdLmt, TYPEDEF) spdLmt;
} TsaRteOutputSlaResult_t;
#endif
#ifndef RTE_TYPE_TsaRteRwfStatus_t
#define RTE_TYPE_TsaRteRwfStatus_t
typedef VAR(unsigned char, TYPEDEF) TsaRteRwfStatus_t;
#endif
#ifndef RTE_TYPE_TsaRteRwfIndicators_t
#define RTE_TYPE_TsaRteRwfIndicators_t
typedef VAR(unsigned char, TYPEDEF) TsaRteRwfIndicators_t;
#endif
#ifndef RTE_TYPE_TsaRteOutputRwfResult_t
#define RTE_TYPE_TsaRteOutputRwfResult_t
typedef struct
{
  VAR(TsaRteRwfStatus_t, TYPEDEF) roadWorksStatus;
  VAR(TsaRteRwfIndicators_t, TYPEDEF) roadWorksIndicators;
  VAR(int, TYPEDEF) roadWorkSpeedValue;
  VAR(float, TYPEDEF) roadWorkReActDist;
  VAR(boolean, TYPEDEF) roadWorkEndFlag;
} TsaRteOutputRwfResult_t;
#endif
#ifndef RTE_TYPE_TsaRteOutputWwaResult_t
#define RTE_TYPE_TsaRteOutputWwaResult_t
typedef struct
{
  VAR(TSARteWwaStatus_t, TYPEDEF) wrongWayStatus;
  VAR(TSARteWwaStatus_t, TYPEDEF) wrongWayLastStatus;
  VAR(float, TYPEDEF) wrongWayChangeDist;
  VAR(TsaRteTrafficSignDebugInformation_t, TYPEDEF) sTrafficSignDebugInfo;
  VAR(boolean, TYPEDEF) bNoEntryDetected;
} TsaRteOutputWwaResult_t;
#endif
#ifndef RTE_TYPE_TsaRteStreet_t
#define RTE_TYPE_TsaRteStreet_t
typedef VAR(unsigned char, TYPEDEF) TsaRteStreet_t;
#endif
#ifndef RTE_TYPE_TsaRteUrbanAreaChange_t
#define RTE_TYPE_TsaRteUrbanAreaChange_t
typedef VAR(unsigned char, TYPEDEF) TsaRteUrbanAreaChange_t;
#endif
#ifndef RTE_TYPE_TsaRteRoadInfo_t
#define RTE_TYPE_TsaRteRoadInfo_t
typedef struct
{
  VAR(TsaRteStreet_t, TYPEDEF) estimatedStreetType;
  VAR(TsaRteCurrentMotorway_t, TYPEDEF) currentMotorway;
  VAR(TsaRteCurrentUrbanArea_t, TYPEDEF) currentUrbanArea;
  VAR(TsaRteUrbanAreaChange_t, TYPEDEF) urbanAreaChange;
  VAR(float, TYPEDEF) distToUrbanAreaChange;
} TsaRteRoadInfo_t;
#endif
#ifndef RTE_TYPE_TsaRteOutputResults_t
#define RTE_TYPE_TsaRteOutputResults_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(unsigned int, TYPEDEF) rteWrpVersion;
  VAR(TsaRteOutputSlaResult_t, TYPEDEF) slaResults;
  VAR(TsaRteOutputNpaResult_t, TYPEDEF) npaResults;
  VAR(TsaRteOutputRwfResult_t, TYPEDEF) rwfResults;
  VAR(TsaRteOutputWwaResult_t, TYPEDEF) wwaResults;
  VAR(TsaRteOutputGwwResult_t, TYPEDEF) gwaResults;
  VAR(TsaRteEstimationResults_t, TYPEDEF) countryResults;
  VAR(TsaRteRoadInfo_t, TYPEDEF) roadInfo;
  VAR(TsaRteDebugInformation_t, TYPEDEF) debugInformation;
} TsaRteOutputResults_t;
#endif
#ifndef RTE_TYPE_TunnelState
#define RTE_TYPE_TunnelState
typedef VAR(RTE_HLAR_Tunnel, TYPEDEF) TunnelState;
#endif
#ifndef RTE_TYPE_TurnOffReason
#define RTE_TYPE_TurnOffReason
typedef VAR(RTE_HLAF_MatrixTurnOffReason, TYPEDEF) TurnOffReason;
#endif
#ifndef RTE_TYPE_TurnSignal_t
#define RTE_TYPE_TurnSignal_t
typedef VAR(unsigned char, TYPEDEF) TurnSignal_t;
#endif
#ifndef RTE_TYPE_TurnSignal
#define RTE_TYPE_TurnSignal
typedef VAR(TurnSignal_t, TYPEDEF) TurnSignal;
#endif
#ifndef RTE_TYPE_U1
#define RTE_TYPE_U1
typedef VAR(unsigned char, TYPEDEF) U1;
#endif
#ifndef RTE_TYPE_UDWInputCustom_t
#define RTE_TYPE_UDWInputCustom_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(DAWRawInputs_t, TYPEDEF) DAWRawInputs;
} UDWInputCustom_t;
#endif
#ifndef RTE_TYPE_eUdwActivationSwitch_t
#define RTE_TYPE_eUdwActivationSwitch_t
typedef VAR(unsigned char, TYPEDEF) eUdwActivationSwitch_t;
#endif
#ifndef RTE_TYPE_udw_alert_sensitivity_t
#define RTE_TYPE_udw_alert_sensitivity_t
typedef VAR(unsigned char, TYPEDEF) udw_alert_sensitivity_t;
#endif
#ifndef RTE_TYPE_udw_suppress_warn_t
#define RTE_TYPE_udw_suppress_warn_t
typedef VAR(unsigned char, TYPEDEF) udw_suppress_warn_t;
#endif
#ifndef RTE_TYPE_udw_interrupt_warn_t
#define RTE_TYPE_udw_interrupt_warn_t
typedef VAR(unsigned char, TYPEDEF) udw_interrupt_warn_t;
#endif
#ifndef RTE_TYPE_udw_Data_input_t
#define RTE_TYPE_udw_Data_input_t
typedef struct
{
  VAR(eUdwActivationSwitch_t, TYPEDEF) Activation;
  VAR(udw_alert_sensitivity_t, TYPEDEF) Sensitivity;
  VAR(udw_suppress_warn_t, TYPEDEF) SupressWarning;
  VAR(unsigned int, TYPEDEF) VehicleTimer;
  VAR(udw_interrupt_warn_t, TYPEDEF) InterruptWarning;
} udw_Data_input_t;
#endif
#ifndef RTE_TYPE_UDWInputGeneric_t
#define RTE_TYPE_UDWInputGeneric_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(udw_Data_input_t, TYPEDEF) udw_Data_input;
} UDWInputGeneric_t;
#endif
#ifndef RTE_TYPE_udw_Warning_t
#define RTE_TYPE_udw_Warning_t
typedef VAR(unsigned char, TYPEDEF) udw_Warning_t;
#endif
#ifndef RTE_TYPE_udw_attention_level_t
#define RTE_TYPE_udw_attention_level_t
typedef VAR(unsigned char, TYPEDEF) udw_attention_level_t;
#endif
#ifndef RTE_TYPE_udw_status_t
#define RTE_TYPE_udw_status_t
typedef VAR(unsigned char, TYPEDEF) udw_status_t;
#endif
#ifndef RTE_TYPE_UDW_Suppress_reason_t
#define RTE_TYPE_UDW_Suppress_reason_t
typedef struct
{
  VAR(boolean, TYPEDEF) DRIVER_ACTIVE;
  VAR(boolean, TYPEDEF) INIT;
  VAR(boolean, TYPEDEF) MUTE;
  VAR(boolean, TYPEDEF) OUT_OF_SPEED_RANGE;
  VAR(boolean, TYPEDEF) OTHER_WARN_ACTIVE;
  VAR(boolean, TYPEDEF) DELAY_AFTER_WARN;
  VAR(boolean, TYPEDEF) SIGNALS_OUT_OF_RANGE;
} UDW_Suppress_reason_t;
#endif
#ifndef RTE_TYPE_UDWOutputGeneric_t
#define RTE_TYPE_UDWOutputGeneric_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(udw_alert_sensitivity_t, TYPEDEF) Sensitivity;
  VAR(eUdwActivationSwitch_t, TYPEDEF) Activated;
  VAR(udw_Warning_t, TYPEDEF) DisplayWarning;
  VAR(udw_attention_level_t, TYPEDEF) AttentionLevel;
  VAR(boolean, TYPEDEF) TimeReset;
  VAR(udw_Warning_t, TYPEDEF) BuzzerWarning;
  VAR(udw_status_t, TYPEDEF) FunctionStatus;
  VAR(UDW_Suppress_reason_t, TYPEDEF) UDW_Suppress_reason;
} UDWOutputGeneric_t;
#endif
#ifndef RTE_TYPE_UInt16
#define RTE_TYPE_UInt16
typedef VAR(unsigned short, TYPEDEF) UInt16;
#endif
#ifndef RTE_TYPE_UInt32
#define RTE_TYPE_UInt32
typedef VAR(unsigned int, TYPEDEF) UInt32;
#endif
#ifndef RTE_TYPE_UInt64Rec
#define RTE_TYPE_UInt64Rec
typedef struct
{
  VAR(uint8_t, TYPEDEF) Byte0;
  VAR(uint8_t, TYPEDEF) Byte1;
  VAR(uint8_t, TYPEDEF) Byte2;
  VAR(uint8_t, TYPEDEF) Byte3;
  VAR(uint8_t, TYPEDEF) Byte4;
  VAR(uint8_t, TYPEDEF) Byte5;
  VAR(uint8_t, TYPEDEF) Byte6;
  VAR(uint8_t, TYPEDEF) Byte7;
} UInt64Rec;
#endif
#ifndef RTE_TYPE_UInt8
#define RTE_TYPE_UInt8
typedef VAR(unsigned char, TYPEDEF) UInt8;
#endif
#ifndef RTE_TYPE_UInt8Impl
#define RTE_TYPE_UInt8Impl
typedef VAR(unsigned char, TYPEDEF) UInt8Impl;
#endif
#ifndef RTE_TYPE_UnprocessedAnchorAreasForExpert_array_t
#define RTE_TYPE_UnprocessedAnchorAreasForExpert_array_t
typedef VAR(boolean, TYPEDEF) UnprocessedAnchorAreasForExpert_array_t[256];
#endif
#ifndef RTE_TYPE_UsgModSts_t
#define RTE_TYPE_UsgModSts_t
typedef VAR(unsigned char, TYPEDEF) UsgModSts_t;
#endif
#ifndef RTE_TYPE_VDYErrors_t
#define RTE_TYPE_VDYErrors_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(SignalInputErrors_t, TYPEDEF) SignalInputErrors;
  VAR(ParInputErrors_t, TYPEDEF) ParInputErrors;
  VAR(OutPutErrors_t, TYPEDEF) OutPutErrors;
} VDYErrors_t;
#endif
#ifndef RTE_TYPE_WhlCurve_t
#define RTE_TYPE_WhlCurve_t
typedef struct
{
  VAR(fCurve_t, TYPEDEF) Curve;
} WhlCurve_t;
#endif
#ifndef RTE_TYPE_WhlFrCurve_t
#define RTE_TYPE_WhlFrCurve_t
typedef struct
{
  VAR(fCurve_t, TYPEDEF) Curve;
} WhlFrCurve_t;
#endif
#ifndef RTE_TYPE_WhlReCurve_t
#define RTE_TYPE_WhlReCurve_t
typedef struct
{
  VAR(fCurve_t, TYPEDEF) Curve;
} WhlReCurve_t;
#endif
#ifndef RTE_TYPE_YwRateCurve_t
#define RTE_TYPE_YwRateCurve_t
typedef struct
{
  VAR(fCurve_t, TYPEDEF) Curve;
} YwRateCurve_t;
#endif
#ifndef RTE_TYPE_VehYawCurve_t
#define RTE_TYPE_VehYawCurve_t
typedef struct
{
  VAR(fCurve_t, TYPEDEF) Curve;
} VehYawCurve_t;
#endif
#ifndef RTE_TYPE_VDYEstCurves_t
#define RTE_TYPE_VDYEstCurves_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(WhlCurve_t, TYPEDEF) Whl;
  VAR(WhlFrCurve_t, TYPEDEF) WhlFr;
  VAR(WhlReCurve_t, TYPEDEF) WhlRe;
  VAR(YwRateCurve_t, TYPEDEF) YwRate;
  VAR(AyCurve_t, TYPEDEF) Ay;
  VAR(SwaCurve_t, TYPEDEF) Swa;
  VAR(DrvIntCurve_t, TYPEDEF) DrvInt;
  VAR(VehYawCurve_t, TYPEDEF) VehYaw;
} VDYEstCurves_t;
#endif
#ifndef RTE_TYPE_VDYIoState_t
#define RTE_TYPE_VDYIoState_t
typedef VAR(unsigned int, TYPEDEF) VDYIoState_t;
#endif
#ifndef RTE_TYPE_VDYNvStWhlAngCal_t
#define RTE_TYPE_VDYNvStWhlAngCal_t
typedef struct
{
  VAR(fAngle_t, TYPEDEF) ZeroAngle;
  VAR(unsigned int, TYPEDEF) CalStatus;
} VDYNvStWhlAngCal_t;
#endif
#ifndef RTE_TYPE_VDYNvSlfStGradCal_t
#define RTE_TYPE_VDYNvSlfStGradCal_t
typedef struct
{
  VAR(float, TYPEDEF) SlfStGrad;
  VAR(unsigned char, TYPEDEF) SlfStGradMax;
  VAR(unsigned char, TYPEDEF) SlfStGradMin;
  VAR(signed char, TYPEDEF) CalStatus;
  VAR(unsigned char, TYPEDEF) Dummy;
} VDYNvSlfStGradCal_t;
#endif
#ifndef RTE_TYPE_fYawRate_t
#define RTE_TYPE_fYawRate_t
typedef VAR(float, TYPEDEF) fYawRate_t;
#endif
#ifndef RTE_TYPE_YwRate_t
#define RTE_TYPE_YwRate_t
typedef struct
{
  VAR(fYawRate_t, TYPEDEF) ZeroRate;
  VAR(fYawRate_t, TYPEDEF) ZeroRateMin;
  VAR(fYawRate_t, TYPEDEF) ZeroRateMax;
  VAR(unsigned int, TYPEDEF) CalStatus;
} YwRate_t;
#endif
#ifndef RTE_TYPE_fRatio_t
#define RTE_TYPE_fRatio_t
typedef VAR(float, TYPEDEF) fRatio_t;
#endif
#ifndef RTE_TYPE_fVelocity_t
#define RTE_TYPE_fVelocity_t
typedef VAR(float, TYPEDEF) fVelocity_t;
#endif
#ifndef RTE_TYPE_VelCorr_t
#define RTE_TYPE_VelCorr_t
typedef struct
{
  VAR(fRatio_t, TYPEDEF) CorrFact;
  VAR(fVelocity_t, TYPEDEF) Velo;
  VAR(float, TYPEDEF) Dev;
} VelCorr_t;
#endif
#ifndef RTE_TYPE_VelCorr_array_t
#define RTE_TYPE_VelCorr_array_t
typedef VAR(VelCorr_t, TYPEDEF) VelCorr_array_t[3];
#endif
#ifndef RTE_TYPE_VDYNvWldCal_t
#define RTE_TYPE_VDYNvWldCal_t
typedef struct
{
  VAR(float, TYPEDEF) Wld_front;
  VAR(float, TYPEDEF) Wld_rear;
  VAR(unsigned char, TYPEDEF) Wld_front_quality;
  VAR(unsigned char, TYPEDEF) Wld_rear_quality;
} VDYNvWldCal_t;
#endif
#ifndef RTE_TYPE_VDYNvmState_t
#define RTE_TYPE_VDYNvmState_t
typedef VAR(unsigned int, TYPEDEF) VDYNvmState_t;
#endif
#ifndef RTE_TYPE_VDYNvIoData_t
#define RTE_TYPE_VDYNvIoData_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(VDYNvStWhlAngCal_t, TYPEDEF) StWhlAng;
  VAR(VDYNvSlfStGradCal_t, TYPEDEF) SlfstGrad;
  VAR(YwRate_t, TYPEDEF) YwRate;
  VAR(LatAcc_t, TYPEDEF) LatAcc;
  VAR(VelCorr_array_t, TYPEDEF) VelCorr;
  VAR(VDYNvWldCal_t, TYPEDEF) Wld;
  VAR(VDYNvmState_t, TYPEDEF) State;
} VDYNvIoData_t;
#endif
#ifndef RTE_TYPE_Ywr_t
#define RTE_TYPE_Ywr_t
typedef struct
{
  VAR(fYawRate_t, TYPEDEF) StandStillOffset;
  VAR(int, TYPEDEF) StandStillState;
  VAR(fYawRate_t, TYPEDEF) DynOffset;
  VAR(fVariance_t, TYPEDEF) DynVariance;
} Ywr_t;
#endif
#ifndef RTE_TYPE_VDYOffsets_t
#define RTE_TYPE_VDYOffsets_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(Ywr_t, TYPEDEF) Ywr;
  VAR(Swa_t, TYPEDEF) Swa;
  VAR(Ay_t, TYPEDEF) Ay;
} VDYOffsets_t;
#endif
#ifndef RTE_TYPE_VDYTrailerConnection_t
#define RTE_TYPE_VDYTrailerConnection_t
typedef VAR(unsigned char, TYPEDEF) VDYTrailerConnection_t;
#endif
#ifndef RTE_TYPE_VFCGrp
#define RTE_TYPE_VFCGrp
typedef struct
{
  VAR(unsigned short, TYPEDEF) Grp1;
  VAR(unsigned short, TYPEDEF) Grp2;
  VAR(unsigned short, TYPEDEF) Grp3;
} VFCGrp;
#endif
#ifndef RTE_TYPE_VarCurve
#define RTE_TYPE_VarCurve
typedef VAR(float, TYPEDEF) VarCurve;
#endif
#ifndef RTE_TYPE_Variance
#define RTE_TYPE_Variance
typedef VAR(float, TYPEDEF) Variance;
#endif
#ifndef RTE_TYPE_Vector2_i32_t
#define RTE_TYPE_Vector2_i32_t
typedef struct
{
  VAR(int, TYPEDEF) nXDist;
  VAR(int, TYPEDEF) nYDist;
} Vector2_i32_t;
#endif
#ifndef RTE_TYPE_Vector2_i8_t
#define RTE_TYPE_Vector2_i8_t
typedef struct
{
  VAR(signed char, TYPEDEF) nXDist;
  VAR(signed char, TYPEDEF) nYDist;
} Vector2_i8_t;
#endif
#ifndef RTE_TYPE_VehCfgPrm
#define RTE_TYPE_VehCfgPrm
typedef struct
{
  VAR(uint8_t, TYPEDEF) BlkIDBytePosn1;
  VAR(uint8_t, TYPEDEF) CCPBytePosn2;
  VAR(uint8_t, TYPEDEF) CCPBytePosn3;
  VAR(uint8_t, TYPEDEF) CCPBytePosn4;
  VAR(uint8_t, TYPEDEF) CCPBytePosn5;
  VAR(uint8_t, TYPEDEF) CCPBytePosn6;
  VAR(uint8_t, TYPEDEF) CCPBytePosn7;
  VAR(uint8_t, TYPEDEF) CCPBytePosn8;
} VehCfgPrm;
#endif
#ifndef RTE_TYPE_VehDynCtrlStsForALgtCmftRec3
#define RTE_TYPE_VehDynCtrlStsForALgtCmftRec3
typedef struct
{
  VAR(Flg_t, TYPEDEF) VehDynCtrlStsNotEna;
  VAR(Flg_t, TYPEDEF) VehDynCtrlStsDend;
  VAR(Flg_t, TYPEDEF) VehDynCtrlStsForBrkPrecActv;
  VAR(Flg_t, TYPEDEF) VehDynCtrlStsForWhlBrkWrm;
  VAR(Flg_t, TYPEDEF) VehDynCtrlStsForBrkActv;
  VAR(uint8_t, TYPEDEF) VehDynCtrlStsForStandStillMgrForPark;
  VAR(uint8_t, TYPEDEF) VehDynCtrlStsChks;
  VAR(uint8_t, TYPEDEF) VehDynCtrlStsCntr;
} VehDynCtrlStsForALgtCmftRec3;
#endif
#ifndef RTE_TYPE_VehDynStatePos_t
#define RTE_TYPE_VehDynStatePos_t
typedef VAR(unsigned char, TYPEDEF) VehDynStatePos_t;
#endif
#ifndef RTE_TYPE_VehDyn_t
#define RTE_TYPE_VehDyn_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(Longitudinal_t, TYPEDEF) Longitudinal;
  VAR(Lateral_t, TYPEDEF) Lateral;
  VAR(MotionStateVehDyn_t, TYPEDEF) MotionState;
  VAR(LegacyVehDyn_t, TYPEDEF) Legacy;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
  VAR(State_array_t, TYPEDEF) State;
} VehDyn_t;
#endif
#ifndef RTE_TYPE_VehLongAccelExt
#define RTE_TYPE_VehLongAccelExt
typedef VAR(float, TYPEDEF) VehLongAccelExt;
#endif
#ifndef RTE_TYPE_VehLongDirExt
#define RTE_TYPE_VehLongDirExt
typedef VAR(LongDirState_t, TYPEDEF) VehLongDirExt;
#endif
#ifndef RTE_TYPE_VehLongMotStateExt_t
#define RTE_TYPE_VehLongMotStateExt_t
typedef VAR(unsigned char, TYPEDEF) VehLongMotStateExt_t;
#endif
#ifndef RTE_TYPE_VehLongMotStateExt
#define RTE_TYPE_VehLongMotStateExt
typedef VAR(VehLongMotStateExt_t, TYPEDEF) VehLongMotStateExt;
#endif
#ifndef RTE_TYPE_VehMNomRec1
#define RTE_TYPE_VehMNomRec1
typedef struct
{
  VAR(uint16_t, TYPEDEF) VehM;
  VAR(uint8_t, TYPEDEF) VehMQly;
  VAR(uint8_t, TYPEDEF) TrlrM;
} VehMNomRec1;
#endif
#ifndef RTE_TYPE_VehModMngtGlbSafe1
#define RTE_TYPE_VehModMngtGlbSafe1
typedef struct
{
  VAR(UsgModSts_t, TYPEDEF) UsgModSts;
  VAR(CarModSts_t, TYPEDEF) CarModSts1;
  VAR(uint8_t, TYPEDEF) CarModSubtypWdCarModSubtyp;
  VAR(uint8_t, TYPEDEF) EgyLvlElecMai;
  VAR(uint8_t, TYPEDEF) EgyLvlElecSubtyp;
  VAR(uint8_t, TYPEDEF) PwrLvlElecMai;
  VAR(uint8_t, TYPEDEF) PwrLvlElecSubtyp;
  VAR(FltEgyCns_t, TYPEDEF) FltEgyCnsWdSts;
  VAR(uint8_t, TYPEDEF) Chks;
  VAR(uint8_t, TYPEDEF) Cntr;
} VehModMngtGlbSafe1;
#endif
#ifndef RTE_TYPE_VehMtnSt_t
#define RTE_TYPE_VehMtnSt_t
typedef VAR(unsigned char, TYPEDEF) VehMtnSt_t;
#endif
#ifndef RTE_TYPE_VehMtnStSafe1
#define RTE_TYPE_VehMtnStSafe1
typedef struct
{
  VAR(VehMtnSt_t, TYPEDEF) VehMtnSt;
  VAR(uint8_t, TYPEDEF) VehMtnStChks;
  VAR(uint8_t, TYPEDEF) VehMtnStCntr;
} VehMtnStSafe1;
#endif
#ifndef RTE_TYPE_VehParAddStatePos_t
#define RTE_TYPE_VehParAddStatePos_t
typedef VAR(unsigned char, TYPEDEF) VehParAddStatePos_t;
#endif
#ifndef RTE_TYPE_VehParAdd_t
#define RTE_TYPE_VehParAdd_t
typedef struct
{
  VAR(State_array_t_5, TYPEDEF) State;
  VAR(float, TYPEDEF) VehicleWidth;
  VAR(float, TYPEDEF) VehicleLength;
  VAR(float, TYPEDEF) CurbWeight;
  VAR(float, TYPEDEF) OverhangFront;
  VAR(float, TYPEDEF) FrontAxleRoadDist;
  VAR(float, TYPEDEF) WheelWidth;
  VAR(float, TYPEDEF) PassableHeight;
  VAR(float, TYPEDEF) DistCameraToHoodX;
  VAR(float, TYPEDEF) DistCameraToHoodY;
  VAR(SteeringVariant_t, TYPEDEF) SteeringVariant;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
} VehParAdd_t;
#endif
#ifndef RTE_TYPE_VehParMainStatePos_t
#define RTE_TYPE_VehParMainStatePos_t
typedef VAR(unsigned char, TYPEDEF) VehParMainStatePos_t;
#endif
#ifndef RTE_TYPE_VehParMain_t
#define RTE_TYPE_VehParMain_t
typedef struct
{
  VAR(State_array_t_4, TYPEDEF) State;
  VAR(float, TYPEDEF) SelfSteerGrad;
  VAR(StRatio_t, TYPEDEF) SteeringRatio;
  VAR(float, TYPEDEF) WheelBase;
  VAR(float, TYPEDEF) TrackWidthFront;
  VAR(float, TYPEDEF) TrackWidthRear;
  VAR(float, TYPEDEF) VehWeight;
  VAR(float, TYPEDEF) CntrOfGravHeight;
  VAR(float, TYPEDEF) AxisLoadDistr;
  VAR(float, TYPEDEF) WhlLoadDepFrontAxle;
  VAR(float, TYPEDEF) WhlLoadDepRearAxle;
  VAR(float, TYPEDEF) WhlCircumference;
  VAR(VDYDrvAxle_t, TYPEDEF) DrvAxle;
  VAR(unsigned char, TYPEDEF) WhlTcksPerRev;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
  VAR(float, TYPEDEF) FrCrnrStiff;
  VAR(float, TYPEDEF) ReCrnrStiff;
} VehParMain_t;
#endif
#ifndef RTE_TYPE_VehParSenMountStatePos_t
#define RTE_TYPE_VehParSenMountStatePos_t
typedef VAR(unsigned char, TYPEDEF) VehParSenMountStatePos_t;
#endif
#ifndef RTE_TYPE_VehParSensorStatePos_t
#define RTE_TYPE_VehParSensorStatePos_t
typedef VAR(unsigned char, TYPEDEF) VehParSensorStatePos_t;
#endif
#ifndef RTE_TYPE_VehPar_t
#define RTE_TYPE_VehPar_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(VehParMain_t, TYPEDEF) VehParMain;
  VAR(VehParAdd_t, TYPEDEF) VehParAdd;
  VAR(SensorMounting_t, TYPEDEF) SensorMounting;
  VAR(Sensor_t, TYPEDEF) Sensor;
} VehPar_t;
#endif
#ifndef RTE_TYPE_VehSigAddStatePos_t
#define RTE_TYPE_VehSigAddStatePos_t
typedef VAR(unsigned char, TYPEDEF) VehSigAddStatePos_t;
#endif
#ifndef RTE_TYPE_WiperState_t
#define RTE_TYPE_WiperState_t
typedef VAR(unsigned char, TYPEDEF) WiperState_t;
#endif
#ifndef RTE_TYPE_WiperStage_t
#define RTE_TYPE_WiperStage_t
typedef VAR(unsigned char, TYPEDEF) WiperStage_t;
#endif
#ifndef RTE_TYPE_WiperWasherFrontState_t
#define RTE_TYPE_WiperWasherFrontState_t
typedef VAR(unsigned char, TYPEDEF) WiperWasherFrontState_t;
#endif
#ifndef RTE_TYPE_WheelHeightLevel_t
#define RTE_TYPE_WheelHeightLevel_t
typedef struct
{
  VAR(short, TYPEDEF) FrontLeft;
  VAR(short, TYPEDEF) FrontRight;
  VAR(short, TYPEDEF) RearLeft;
  VAR(short, TYPEDEF) RearRight;
} WheelHeightLevel_t;
#endif
#ifndef RTE_TYPE_eSuspensionSystem_t
#define RTE_TYPE_eSuspensionSystem_t
typedef VAR(unsigned char, TYPEDEF) eSuspensionSystem_t;
#endif
#ifndef RTE_TYPE_eHeightLevel_t
#define RTE_TYPE_eHeightLevel_t
typedef VAR(unsigned char, TYPEDEF) eHeightLevel_t;
#endif
#ifndef RTE_TYPE_VehSigAdd_t
#define RTE_TYPE_VehSigAdd_t
typedef struct
{
  VAR(State_array_t_1, TYPEDEF) State;
  VAR(float, TYPEDEF) EnvTemp;
  VAR(WiperState_t, TYPEDEF) WiperState;
  VAR(WiperStage_t, TYPEDEF) WiperStage;
  VAR(boolean, TYPEDEF) WiperOutParkPos;
  VAR(WiperWasherFrontState_t, TYPEDEF) WiperWasherFrontState;
  VAR(boolean, TYPEDEF) RainSensor;
  VAR(TurnSignal_t, TYPEDEF) TurnSignal;
  VAR(boolean, TYPEDEF) FogLampFront;
  VAR(boolean, TYPEDEF) FogLampRear;
  VAR(float, TYPEDEF) RoadWhlAngFr;
  VAR(float, TYPEDEF) RoadWhlAngRe;
  VAR(float, TYPEDEF) Odometer;
  VAR(float, TYPEDEF) GasPedalPos;
  VAR(boolean, TYPEDEF) KickDown;
  VAR(boolean, TYPEDEF) BrakePedalPressed;
  VAR(boolean, TYPEDEF) DriverTired;
  VAR(SpeedUnit_t, TYPEDEF) SpeedUnit;
  VAR(float, TYPEDEF) SpeedoSpeed;
  VAR(VDYTrailerConnection_t, TYPEDEF) TrailerConnection;
  VAR(VDYTrailerConnection_t, TYPEDEF) TrailerConnBeforeShutDown;
  VAR(unsigned char, TYPEDEF) TrailerLengthInput;
  VAR(unsigned char, TYPEDEF) ParkAidDet_L;
  VAR(unsigned char, TYPEDEF) ParkAidDet_CL;
  VAR(unsigned char, TYPEDEF) ParkAidDet_CR;
  VAR(unsigned char, TYPEDEF) ParkAidDet_R;
  VAR(IgnitionSwitch_t, TYPEDEF) IgnitionSwitch;
  VAR(WheelHeightLevel_t, TYPEDEF) WheelHeightLevel;
  VAR(eSuspensionSystem_t, TYPEDEF) eSuspensionSystem;
  VAR(eHeightLevel_t, TYPEDEF) eHeightLevel;
  VAR(ExternalCamBlockageDetection_t, TYPEDEF) ExternalCamBlockageDetection;
  VAR(boolean, TYPEDEF) EspStatus;
  VAR(boolean, TYPEDEF) UdlcStatus;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
} VehSigAdd_t;
#endif
#ifndef RTE_TYPE_VehSigBrakeStatePos_t
#define RTE_TYPE_VehSigBrakeStatePos_t
typedef VAR(unsigned char, TYPEDEF) VehSigBrakeStatePos_t;
#endif
#ifndef RTE_TYPE_VehSigMainStatePos_t
#define RTE_TYPE_VehSigMainStatePos_t
typedef VAR(unsigned char, TYPEDEF) VehSigMainStatePos_t;
#endif
#ifndef RTE_TYPE_VehSigMain_t
#define RTE_TYPE_VehSigMain_t
typedef struct
{
  VAR(State_array_t_0, TYPEDEF) State;
  VAR(float, TYPEDEF) YawRate;
  VAR(AlgoDataTimeStamp_t, TYPEDEF) YawRateTimeStamp;
  VAR(float, TYPEDEF) YawRateTemp;
  VAR(float, TYPEDEF) StWheelAngle;
  VAR(AlgoDataTimeStamp_t, TYPEDEF) StWheelAngleTimeStamp;
  VAR(float, TYPEDEF) LatAccel;
  VAR(AlgoDataTimeStamp_t, TYPEDEF) LatAccelTimeStamp;
  VAR(float, TYPEDEF) WhlVelFrLeft;
  VAR(AlgoDataTimeStamp_t, TYPEDEF) WhlVelFrLeftTimeStamp;
  VAR(float, TYPEDEF) WhlVelFrRight;
  VAR(AlgoDataTimeStamp_t, TYPEDEF) WhlVelFrRightTimeStamp;
  VAR(float, TYPEDEF) WhlVelReLeft;
  VAR(AlgoDataTimeStamp_t, TYPEDEF) WhlVelReLeftTimeStamp;
  VAR(float, TYPEDEF) WhlVelReRight;
  VAR(AlgoDataTimeStamp_t, TYPEDEF) WhlVelReRightTimeStamp;
  VAR(float, TYPEDEF) YawRateInt;
  VAR(float, TYPEDEF) YawRateIntTemp;
  VAR(float, TYPEDEF) LongAccel;
  VAR(float, TYPEDEF) RearWhlAngle;
  VAR(float, TYPEDEF) VehVelocityExt;
  VAR(AlgoDataTimeStamp_t, TYPEDEF) VehVelocityExtTimeStamp;
  VAR(float, TYPEDEF) VehLongAccelExt;
  VAR(AlgoDataTimeStamp_t, TYPEDEF) VehLongAccelExtTimeStamp;
  VAR(LongDirState_t, TYPEDEF) WhlDirFrLeft;
  VAR(LongDirState_t, TYPEDEF) WhlDirFrRight;
  VAR(LongDirState_t, TYPEDEF) WhlDirReLeft;
  VAR(LongDirState_t, TYPEDEF) WhlDirReRight;
  VAR(AlgoDataTimeStamp_t, TYPEDEF) WhlTicksDevFrLeftTimeStamp;
  VAR(unsigned char, TYPEDEF) WhlTicksDevFrLeft;
  VAR(unsigned char, TYPEDEF) WhlTicksDevFrRight;
  VAR(unsigned char, TYPEDEF) WhlTicksDevReLeft;
  VAR(unsigned char, TYPEDEF) WhlTicksDevReRight;
  VAR(ActGearPos_t, TYPEDEF) ActGearPos;
  VAR(ParkBrakeState_t, TYPEDEF) ParkBrakeState;
  VAR(LongDirState_t, TYPEDEF) VehLongDirExt;
  VAR(VehLongMotStateExt_t, TYPEDEF) VehLongMotStateExt;
  VAR(unsigned short, TYPEDEF) BrakeActLevel;
  VAR(unsigned char, TYPEDEF) reserved1;
  VAR(unsigned char, TYPEDEF) reserved2;
  VAR(AlgoDataTimeStamp_t, TYPEDEF) WhlTicksDevFrRightTimeStamp;
  VAR(AlgoDataTimeStamp_t, TYPEDEF) WhlTicksDevReLeftTimeStamp;
  VAR(AlgoDataTimeStamp_t, TYPEDEF) WhlTicksDevReRightTimeStamp;
  VAR(float, TYPEDEF) CurveC0Ext;
  VAR(float, TYPEDEF) CurveC1Ext;
  VAR(float, TYPEDEF) SideSlipAngleExt;
} VehSigMain_t;
#endif
#ifndef RTE_TYPE_VehSigPowertrainStatePos_t
#define RTE_TYPE_VehSigPowertrainStatePos_t
typedef VAR(unsigned char, TYPEDEF) VehSigPowertrainStatePos_t;
#endif
#ifndef RTE_TYPE_VehSig_t
#define RTE_TYPE_VehSig_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(VehSigMain_t, TYPEDEF) VehSigMain;
  VAR(VehSigAdd_t, TYPEDEF) VehSigAdd;
  VAR(PowerTrain_t, TYPEDEF) PowerTrain;
  VAR(Brake_t, TYPEDEF) Brake;
} VehSig_t;
#endif
#ifndef RTE_TYPE_VehSpdLgtSafe1
#define RTE_TYPE_VehSpdLgtSafe1
typedef struct
{
  VAR(float32_t, TYPEDEF) VehSpdLgt;
  VAR(GenQf_t, TYPEDEF) VehSpdLgtQf;
  VAR(uint8_t, TYPEDEF) VehSpdLgtCntr;
  VAR(uint8_t, TYPEDEF) VehSpdLgtChks;
} VehSpdLgtSafe1;
#endif
#ifndef RTE_TYPE_VehVSafe1
#define RTE_TYPE_VehVSafe1
typedef struct
{
  VAR(float32_t, TYPEDEF) VehVLat;
  VAR(GenQf_t, TYPEDEF) VehVLatQf;
  VAR(float32_t, TYPEDEF) VehVLgt;
  VAR(GenQf_t, TYPEDEF) VehVLgtQf;
  VAR(uint8_t, TYPEDEF) VehVChks;
  VAR(uint8_t, TYPEDEF) VehVCntr;
} VehVSafe1;
#endif
#ifndef RTE_TYPE_VehVelocityExt
#define RTE_TYPE_VehVelocityExt
typedef VAR(float, TYPEDEF) VehVelocityExt;
#endif
#ifndef RTE_TYPE_VehWeight
#define RTE_TYPE_VehWeight
typedef VAR(float, TYPEDEF) VehWeight;
#endif
#ifndef RTE_TYPE_VehicleLength
#define RTE_TYPE_VehicleLength
typedef VAR(float, TYPEDEF) VehicleLength;
#endif
#ifndef RTE_TYPE_VehicleWidth
#define RTE_TYPE_VehicleWidth
typedef VAR(float, TYPEDEF) VehicleWidth;
#endif
#ifndef RTE_TYPE_VelStatObj_t
#define RTE_TYPE_VelStatObj_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(RefSpeed_t, TYPEDEF) RefSpeed;
} VelStatObj_t;
#endif
#ifndef RTE_TYPE_Velocity
#define RTE_TYPE_Velocity
typedef VAR(float, TYPEDEF) Velocity;
#endif
#ifndef RTE_TYPE_VelocityCorrectionQuality
#define RTE_TYPE_VelocityCorrectionQuality
typedef VAR(VelocityCorrectionQuality_t, TYPEDEF) VelocityCorrectionQuality;
#endif
#ifndef RTE_TYPE_VertPos
#define RTE_TYPE_VertPos
typedef VAR(float, TYPEDEF) VertPos;
#endif
#ifndef RTE_TYPE_VodcaAnchorAreaConfig_t
#define RTE_TYPE_VodcaAnchorAreaConfig_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(short, TYPEDEF) sDefaultValidImageAreaTopLeftX;
  VAR(short, TYPEDEF) sDefaultValidImageAreaTopLeftY;
  VAR(short, TYPEDEF) sDefaultValidImageAreaBottomRightX;
  VAR(short, TYPEDEF) sDefaultValidImageAreaBottomRightY;
  VAR(short, TYPEDEF) sNrOfValidAnchorAreas;
  VAR(unsigned int, TYPEDEF) uAvailableBudget_us;
  VAR(AnchorAreas_array_t, TYPEDEF) AnchorAreas;
} VodcaAnchorAreaConfig_t;
#endif
#ifndef RTE_TYPE_VodcaDetectionIndexes_t
#define RTE_TYPE_VodcaDetectionIndexes_t
typedef struct
{
  VAR(short, TYPEDEF) firstIdx;
  VAR(short, TYPEDEF) lastIdx;
} VodcaDetectionIndexes_t;
#endif
#ifndef RTE_TYPE_VodcaDetectionIndexes_array_t
#define RTE_TYPE_VodcaDetectionIndexes_array_t
typedef VAR(VodcaDetectionIndexes_t, TYPEDEF) VodcaDetectionIndexes_array_t[64];
#endif
#ifndef RTE_TYPE_fp_ConfidenceSubTypes_array_t
#define RTE_TYPE_fp_ConfidenceSubTypes_array_t
typedef VAR(uint8_t, TYPEDEF) fp_ConfidenceSubTypes_array_t[8];
#endif
#ifndef RTE_TYPE_VodcaDetections_t
#define RTE_TYPE_VodcaDetections_t
typedef struct
{
  VAR(float, TYPEDEF) fTopLeftX;
  VAR(float, TYPEDEF) fTopLeftY;
  VAR(float, TYPEDEF) fBottomRightX;
  VAR(float, TYPEDEF) fBottomRightY;
  VAR(unsigned char, TYPEDEF) uClassifierID;
  VAR(uint8_t, TYPEDEF) fp_Confidence;
  VAR(fp_ConfidenceSubTypes_array_t, TYPEDEF) fp_ConfidenceSubTypes;
  VAR(unsigned char, TYPEDEF) uDummy00;
  VAR(unsigned char, TYPEDEF) uDummy01;
} VodcaDetections_t;
#endif
#ifndef RTE_TYPE_VodcaDetections_array_t
#define RTE_TYPE_VodcaDetections_array_t
typedef VAR(VodcaDetections_t, TYPEDEF) VodcaDetections_array_t[512];
#endif
#ifndef RTE_TYPE_unprocessedAnchorAreas_array_t
#define RTE_TYPE_unprocessedAnchorAreas_array_t
typedef VAR(UnprocessedAnchorAreasForExpert_array_t, TYPEDEF) unprocessedAnchorAreas_array_t[4];
#endif
#ifndef RTE_TYPE_VodcaDetectionResults_t
#define RTE_TYPE_VodcaDetectionResults_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(short, TYPEDEF) sNumResults;
  VAR(short, TYPEDEF) sNumUnprocessedAnchorAreas;
  VAR(VodcaDetections_array_t, TYPEDEF) VodcaDetections;
  VAR(VodcaDetectionIndexes_array_t, TYPEDEF) VodcaDetectionIndexes;
  VAR(unprocessedAnchorAreas_array_t, TYPEDEF) unprocessedAnchorAreas;
} VodcaDetectionResults_t;
#endif
#ifndef RTE_TYPE_VodcaDetectorParams_t
#define RTE_TYPE_VodcaDetectorParams_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(unsigned int, TYPEDEF) uNumDetectors;
  VAR(Detector_array_t, TYPEDEF) Detector;
} VodcaDetectorParams_t;
#endif
#ifndef RTE_TYPE_VoidPtr_t
#define RTE_TYPE_VoidPtr_t
typedef P2VAR(void, TYPEDEF, RTE_APPL_DATA) VoidPtr_t;
#endif
#ifndef RTE_TYPE_WeatherState
#define RTE_TYPE_WeatherState
typedef VAR(RTE_HLAR_WeatherState, TYPEDEF) WeatherState;
#endif
#ifndef RTE_TYPE_WheelBase
#define RTE_TYPE_WheelBase
typedef VAR(float, TYPEDEF) WheelBase;
#endif
#ifndef RTE_TYPE_WheelWidth
#define RTE_TYPE_WheelWidth
typedef VAR(float, TYPEDEF) WheelWidth;
#endif
#ifndef RTE_TYPE_WhlAVert_t
#define RTE_TYPE_WhlAVert_t
typedef VAR(short, TYPEDEF) WhlAVert_t;
#endif
#ifndef RTE_TYPE_WhlAVertRec1
#define RTE_TYPE_WhlAVertRec1
typedef struct
{
  VAR(GenQf_t, TYPEDEF) QF;
  VAR(WhlAVert_t, TYPEDEF) WhlAVert;
} WhlAVertRec1;
#endif
#ifndef RTE_TYPE_WhlCircumference
#define RTE_TYPE_WhlCircumference
typedef VAR(float, TYPEDEF) WhlCircumference;
#endif
#ifndef RTE_TYPE_WhlDirFrLeft
#define RTE_TYPE_WhlDirFrLeft
typedef VAR(LongDirState_t, TYPEDEF) WhlDirFrLeft;
#endif
#ifndef RTE_TYPE_WhlDirFrRight
#define RTE_TYPE_WhlDirFrRight
typedef VAR(LongDirState_t, TYPEDEF) WhlDirFrRight;
#endif
#ifndef RTE_TYPE_WhlDirReLeft
#define RTE_TYPE_WhlDirReLeft
typedef VAR(LongDirState_t, TYPEDEF) WhlDirReLeft;
#endif
#ifndef RTE_TYPE_WhlDirReRight
#define RTE_TYPE_WhlDirReRight
typedef VAR(LongDirState_t, TYPEDEF) WhlDirReRight;
#endif
#ifndef RTE_TYPE_WhlRotlDirStd_t
#define RTE_TYPE_WhlRotlDirStd_t
typedef VAR(unsigned char, TYPEDEF) WhlRotlDirStd_t;
#endif
#ifndef RTE_TYPE_WhlDirRotlReRec
#define RTE_TYPE_WhlDirRotlReRec
typedef struct
{
  VAR(WhlRotlDirStd_t, TYPEDEF) WhlDirRotlReLe;
  VAR(WhlRotlDirStd_t, TYPEDEF) WhlDirRotlReRi;
} WhlDirRotlReRec;
#endif
#ifndef RTE_TYPE_WhlLoadDepFrontAxle
#define RTE_TYPE_WhlLoadDepFrontAxle
typedef VAR(float, TYPEDEF) WhlLoadDepFrontAxle;
#endif
#ifndef RTE_TYPE_WhlLoadDepRearAxle
#define RTE_TYPE_WhlLoadDepRearAxle
typedef VAR(float, TYPEDEF) WhlLoadDepRearAxle;
#endif
#ifndef RTE_TYPE_WhlRotToothCntrRec
#define RTE_TYPE_WhlRotToothCntrRec
typedef struct
{
  VAR(uint8_t, TYPEDEF) WhlRotToothCntrFrntLe;
  VAR(uint8_t, TYPEDEF) WhlRotToothCntrFrntRi;
  VAR(uint8_t, TYPEDEF) WhlRotToothCntrReLe;
  VAR(uint8_t, TYPEDEF) WhlRotToothCntrReRi;
} WhlRotToothCntrRec;
#endif
#ifndef RTE_TYPE_WhlSpdCircumlFrntRec1
#define RTE_TYPE_WhlSpdCircumlFrntRec1
typedef struct
{
  VAR(float32_t, TYPEDEF) WhlSpdCircumlFrntLe;
  VAR(GenQf_t, TYPEDEF) WhlSpdCircumlFrntLeQf;
  VAR(float32_t, TYPEDEF) WhlSpdCircumlFrntRi;
  VAR(GenQf_t, TYPEDEF) WhlSpdCircumlFrntRiQf;
  VAR(uint8_t, TYPEDEF) WhlSpdCircumlFrntChks;
  VAR(uint8_t, TYPEDEF) WhlSpdCircumlFrntCntr;
} WhlSpdCircumlFrntRec1;
#endif
#ifndef RTE_TYPE_WhlSpdCircumlReRec1
#define RTE_TYPE_WhlSpdCircumlReRec1
typedef struct
{
  VAR(float32_t, TYPEDEF) WhlSpdCircumlReLe;
  VAR(GenQf_t, TYPEDEF) WhlSpdCircumlReLeQf;
  VAR(float32_t, TYPEDEF) WhlSpdCircumlReRi;
  VAR(GenQf_t, TYPEDEF) WhlSpdCircumlReRiQf;
  VAR(uint8_t, TYPEDEF) WhlSpdCircumlReChks;
  VAR(uint8_t, TYPEDEF) WhlSpdCircumlReCntr;
} WhlSpdCircumlReRec1;
#endif
#ifndef RTE_TYPE_WhlTcksPerRev
#define RTE_TYPE_WhlTcksPerRev
typedef VAR(unsigned char, TYPEDEF) WhlTcksPerRev;
#endif
#ifndef RTE_TYPE_WhlTicksDevFrLeft
#define RTE_TYPE_WhlTicksDevFrLeft
typedef VAR(unsigned char, TYPEDEF) WhlTicksDevFrLeft;
#endif
#ifndef RTE_TYPE_WhlTicksDevFrRight
#define RTE_TYPE_WhlTicksDevFrRight
typedef VAR(unsigned char, TYPEDEF) WhlTicksDevFrRight;
#endif
#ifndef RTE_TYPE_WhlTicksDevReLeft
#define RTE_TYPE_WhlTicksDevReLeft
typedef VAR(unsigned char, TYPEDEF) WhlTicksDevReLeft;
#endif
#ifndef RTE_TYPE_WhlTicksDevReRight
#define RTE_TYPE_WhlTicksDevReRight
typedef VAR(unsigned char, TYPEDEF) WhlTicksDevReRight;
#endif
#ifndef RTE_TYPE_WhlVAgrFrntRec1
#define RTE_TYPE_WhlVAgrFrntRec1
typedef struct
{
  VAR(sint16_t, TYPEDEF) WhlVAgrFrntLe;
  VAR(GenQf_t, TYPEDEF) WhlVAgrFrntLeQf;
  VAR(sint16_t, TYPEDEF) WhlVAgrFrntRi;
  VAR(GenQf_t, TYPEDEF) WhlVAgrFrntRiQf;
  VAR(uint8_t, TYPEDEF) WhlVAgrFrntChks;
  VAR(uint8_t, TYPEDEF) WhlVAgrFrntCntr;
} WhlVAgrFrntRec1;
#endif
#ifndef RTE_TYPE_WhlVAgrReRec1
#define RTE_TYPE_WhlVAgrReRec1
typedef struct
{
  VAR(sint16_t, TYPEDEF) WhlVAgrReLe;
  VAR(GenQf_t, TYPEDEF) WhlVAgrReLeQf;
  VAR(sint16_t, TYPEDEF) WhlVAgrReRi;
  VAR(GenQf_t, TYPEDEF) WhlVAgrReRiQf;
  VAR(uint8_t, TYPEDEF) WhlVAgrReChks;
  VAR(uint8_t, TYPEDEF) WhlVAgrReCntr;
} WhlVAgrReRec1;
#endif
#ifndef RTE_TYPE_WhlVelFrLeft
#define RTE_TYPE_WhlVelFrLeft
typedef VAR(float, TYPEDEF) WhlVelFrLeft;
#endif
#ifndef RTE_TYPE_WhlVelFrRight
#define RTE_TYPE_WhlVelFrRight
typedef VAR(unsigned char, TYPEDEF) WhlVelFrRight;
#endif
#ifndef RTE_TYPE_WhlVelReLeft
#define RTE_TYPE_WhlVelReLeft
typedef VAR(unsigned char, TYPEDEF) WhlVelReLeft;
#endif
#ifndef RTE_TYPE_WhlVelReRight
#define RTE_TYPE_WhlVelReRight
typedef VAR(unsigned char, TYPEDEF) WhlVelReRight;
#endif
#ifndef RTE_TYPE_Width
#define RTE_TYPE_Width
typedef VAR(unsigned char, TYPEDEF) Width;
#endif
#ifndef RTE_TYPE_WiperStage
#define RTE_TYPE_WiperStage
typedef VAR(WiperStage_t, TYPEDEF) WiperStage;
#endif
#ifndef RTE_TYPE_WiperState
#define RTE_TYPE_WiperState
typedef VAR(WiperState_t, TYPEDEF) WiperState;
#endif
#ifndef RTE_TYPE_YawAngle
#define RTE_TYPE_YawAngle
typedef VAR(float, TYPEDEF) YawAngle;
#endif
#ifndef RTE_TYPE_YawRateTemp
#define RTE_TYPE_YawRateTemp
typedef VAR(float, TYPEDEF) YawRateTemp;
#endif
#ifndef RTE_TYPE_aObject
#define RTE_TYPE_aObject
typedef VAR(EM_t_CamObjectArray, TYPEDEF) aObject;
#endif
#ifndef RTE_TYPE_aSlExpTabHwKmh_array_t
#define RTE_TYPE_aSlExpTabHwKmh_array_t
typedef VAR(TsaRteExpirationDistance_t, TYPEDEF) aSlExpTabHwKmh_array_t[5];
#endif
#ifndef RTE_TYPE_aSlExpTabNhwKmh_array_t
#define RTE_TYPE_aSlExpTabNhwKmh_array_t
typedef VAR(TsaRteExpirationDistance_t, TYPEDEF) aSlExpTabNhwKmh_array_t[5];
#endif
#ifndef RTE_TYPE_a_PixelData_array_t
#define RTE_TYPE_a_PixelData_array_t
typedef VAR(unsigned short, TYPEDEF) a_PixelData_array_t[630];
#endif
#ifndef RTE_TYPE_acc_obj_lane_t
#define RTE_TYPE_acc_obj_lane_t
typedef VAR(signed char, TYPEDEF) acc_obj_lane_t;
#endif
#ifndef RTE_TYPE_distance_t
#define RTE_TYPE_distance_t
typedef VAR(short, TYPEDEF) distance_t;
#endif
#ifndef RTE_TYPE_confidence_t
#define RTE_TYPE_confidence_t
typedef VAR(unsigned char, TYPEDEF) confidence_t;
#endif
#ifndef RTE_TYPE_obj_class_t
#define RTE_TYPE_obj_class_t
typedef VAR(unsigned char, TYPEDEF) obj_class_t;
#endif
#ifndef RTE_TYPE_obj_status_t
#define RTE_TYPE_obj_status_t
typedef struct
{
  VAR(boolean, TYPEDEF) MEASURED;
  VAR(boolean, TYPEDEF) TRACKED;
  VAR(boolean, TYPEDEF) NEW;
  VAR(boolean, TYPEDEF) STANDING;
  VAR(boolean, TYPEDEF) STOPPED;
  VAR(boolean, TYPEDEF) MOVING;
  VAR(boolean, TYPEDEF) DETECTED;
  VAR(unsigned char, TYPEDEF) reserved1;
} obj_status_t;
#endif
#ifndef RTE_TYPE_object_t
#define RTE_TYPE_object_t
typedef struct
{
  VAR(velocity_t, TYPEDEF) REL_LONG_SPEED;
  VAR(velocity_t, TYPEDEF) REL_LAT_SPEED;
  VAR(distance_t, TYPEDEF) LONG_DISPLACEMENT;
  VAR(distance_t, TYPEDEF) LAT_DISPLACEMENT;
  VAR(acceleration_t, TYPEDEF) REL_LONG_ACCEL;
  VAR(acceleration_t, TYPEDEF) REL_LAT_ACCEL;
  VAR(confidence_t, TYPEDEF) QUALITY;
  VAR(obj_class_t, TYPEDEF) CLASS;
  VAR(distance_t, TYPEDEF) WIDTH;
  VAR(obj_status_t, TYPEDEF) OBJECT_STATUS;
  VAR(ObjNumber_t, TYPEDEF) OBJECT_ID;
  VAR(a_reserve_array_t, TYPEDEF) a_reserve;
} object_t;
#endif
#ifndef RTE_TYPE_times_t
#define RTE_TYPE_times_t
typedef VAR(unsigned short, TYPEDEF) times_t;
#endif
#ifndef RTE_TYPE_quality_t
#define RTE_TYPE_quality_t
typedef VAR(unsigned char, TYPEDEF) quality_t;
#endif
#ifndef RTE_TYPE_acc_object_usage_status_t
#define RTE_TYPE_acc_object_usage_status_t
typedef struct
{
  VAR(boolean, TYPEDEF) INTEREST;
  VAR(boolean, TYPEDEF) USE_FOR_CONTROL;
  VAR(boolean, TYPEDEF) USE_FOR_ALERT;
  VAR(boolean, TYPEDEF) LOST_REASON;
} acc_object_usage_status_t;
#endif
#ifndef RTE_TYPE_factor_t
#define RTE_TYPE_factor_t
typedef VAR(short, TYPEDEF) factor_t;
#endif
#ifndef RTE_TYPE_acc_object_t
#define RTE_TYPE_acc_object_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(object_t, TYPEDEF) AUTOSAR;
  VAR(velocity_t, TYPEDEF) LONG_SPEED;
  VAR(acceleration_t, TYPEDEF) LONG_ACCEL;
  VAR(distance_t, TYPEDEF) LAT_DISPL_FROM_LANE;
  VAR(acceleration_t, TYPEDEF) MAX_ALLOWED_DECEL;
  VAR(acceleration_t, TYPEDEF) MAX_ALLOWED_ACCEL;
  VAR(acceleration_t, TYPEDEF) CONTROL_ACCEL;
  VAR(acceleration_t, TYPEDEF) NEEDED_DECEL;
  VAR(times_t, TYPEDEF) TTC;
  VAR(acc_obj_lane_t, TYPEDEF) LANE_INFORMATION;
  VAR(quality_t, TYPEDEF) ACC_CUT_IN_OUT_POTENTIAL;
  VAR(percentage_t, TYPEDEF) CONTROL_SMOOTHNESS;
  VAR(ObjNumber_t, TYPEDEF) LAST_OBJECT_ID;
  VAR(acc_object_usage_status_t, TYPEDEF) USAGE_STATUS;
  VAR(distance_t, TYPEDEF) REQUESTED_DISTANCE_MODIFIED_ACT;
  VAR(distance_t, TYPEDEF) REQUESTED_DISTANCE_MODIFIED_PRED;
  VAR(factor_t, TYPEDEF) ALERT_MODIFICATION_FACTOR;
  VAR(acceleration_t, TYPEDEF) LONG_ACCEL_MODIFIED;
  VAR(times_t, TYPEDEF) TTS;
  VAR(acceleration_t, TYPEDEF) ACCEL_REQUEST_FUZZY;
  VAR(acceleration_t, TYPEDEF) ACCEL_REQUEST_TTS;
  VAR(acceleration_t, TYPEDEF) ACCEL_REQUEST_DMIN;
} acc_object_t;
#endif
#ifndef RTE_TYPE_acc_output_status_t
#define RTE_TYPE_acc_output_status_t
typedef struct
{
  VAR(boolean, TYPEDEF) ALERT;
  VAR(boolean, TYPEDEF) INHIBITED;
  VAR(INHIBITION_REASON_t, TYPEDEF) INHIBITION_REASON;
  VAR(boolean, TYPEDEF) ALLOW_INIT;
} acc_output_status_t;
#endif
#ifndef RTE_TYPE_acc_situation_class_t
#define RTE_TYPE_acc_situation_class_t
typedef VAR(unsigned char, TYPEDEF) acc_situation_class_t;
#endif
#ifndef RTE_TYPE_acc_situation_classifier_t
#define RTE_TYPE_acc_situation_classifier_t
typedef struct
{
  VAR(acc_situation_class_t, TYPEDEF) SITUATION;
  VAR(confidence_t, TYPEDEF) CRITICALITY;
} acc_situation_classifier_t;
#endif
#ifndef RTE_TYPE_acc_output_data_t
#define RTE_TYPE_acc_output_data_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(acceleration_t, TYPEDEF) DISTANCE_CTRL_ACCEL_MAX;
  VAR(acceleration_t, TYPEDEF) DISTANCE_CTRL_ACCEL_MIN;
  VAR(acceleration_t, TYPEDEF) MAX_ACC_ACCELERATION;
  VAR(acceleration_t, TYPEDEF) MAX_ACC_DECELERATION;
  VAR(times_t, TYPEDEF) REQUESTED_TIMEGAP;
  VAR(distance_t, TYPEDEF) REQUESTED_DISTANCE;
  VAR(distance_t, TYPEDEF) REQUESTED_MAX_INTRUSION;
  VAR(velocity_t, TYPEDEF) RECOMMENDED_VELOCITY;
  VAR(acc_output_status_t, TYPEDEF) ACC_OUTPUT_STATUS;
  VAR(acc_situation_classifier_t, TYPEDEF) SITUATION_CLASS;
  VAR(percentage_t, TYPEDEF) HEADWAY_SETTING;
  VAR(unsigned char, TYPEDEF) reserved1;
} acc_output_data_t;
#endif
#ifndef RTE_TYPE_afMarkerDashLength_array_t
#define RTE_TYPE_afMarkerDashLength_array_t
typedef VAR(float, TYPEDEF) afMarkerDashLength_array_t[3];
#endif
#ifndef RTE_TYPE_afMarkerDashVoidPhase_array_t
#define RTE_TYPE_afMarkerDashVoidPhase_array_t
typedef VAR(float, TYPEDEF) afMarkerDashVoidPhase_array_t[3];
#endif
#ifndef RTE_TYPE_afMarkerHeights_array_t
#define RTE_TYPE_afMarkerHeights_array_t
typedef VAR(float, TYPEDEF) afMarkerHeights_array_t[3];
#endif
#ifndef RTE_TYPE_afMarkerPositions_array_t
#define RTE_TYPE_afMarkerPositions_array_t
typedef VAR(float, TYPEDEF) afMarkerPositions_array_t[3];
#endif
#ifndef RTE_TYPE_afMarkerVoidLength_array_t
#define RTE_TYPE_afMarkerVoidLength_array_t
typedef VAR(float, TYPEDEF) afMarkerVoidLength_array_t[3];
#endif
#ifndef RTE_TYPE_afMarkerWidthsDev_array_t
#define RTE_TYPE_afMarkerWidthsDev_array_t
typedef VAR(float, TYPEDEF) afMarkerWidthsDev_array_t[3];
#endif
#ifndef RTE_TYPE_afMarkerWidths_array_t
#define RTE_TYPE_afMarkerWidths_array_t
typedef VAR(float, TYPEDEF) afMarkerWidths_array_t[3];
#endif
#ifndef RTE_TYPE_afModelResiduum_array_t
#define RTE_TYPE_afModelResiduum_array_t
typedef VAR(float, TYPEDEF) afModelResiduum_array_t[10];
#endif
#ifndef RTE_TYPE_aiMarkerColors_t
#define RTE_TYPE_aiMarkerColors_t
typedef VAR(unsigned int, TYPEDEF) aiMarkerColors_t;
#endif
#ifndef RTE_TYPE_aiMarkerColors_array_t
#define RTE_TYPE_aiMarkerColors_array_t
typedef VAR(aiMarkerColors_t, TYPEDEF) aiMarkerColors_array_t[3];
#endif
#ifndef RTE_TYPE_aiMarkerTypes_t
#define RTE_TYPE_aiMarkerTypes_t
typedef VAR(unsigned int, TYPEDEF) aiMarkerTypes_t;
#endif
#ifndef RTE_TYPE_aiMarkerTypes_array_t
#define RTE_TYPE_aiMarkerTypes_array_t
typedef VAR(aiMarkerTypes_t, TYPEDEF) aiMarkerTypes_array_t[3];
#endif
#ifndef RTE_TYPE_aiTrackId_array_t
#define RTE_TYPE_aiTrackId_array_t
typedef VAR(int, TYPEDEF) aiTrackId_array_t[3];
#endif
#ifndef RTE_TYPE_s_LD_Boundary_t
#define RTE_TYPE_s_LD_Boundary_t
typedef struct
{
  VAR(s_LD_BoundaryStatus_t, TYPEDEF) sStatus;
  VAR(s_LD_BoundaryAttributes_t, TYPEDEF) sAttributes;
  VAR(s_LD_BoundaryGeometry_t, TYPEDEF) sGeometry;
} s_LD_Boundary_t;
#endif
#ifndef RTE_TYPE_asLaneBoundary_array_t
#define RTE_TYPE_asLaneBoundary_array_t
typedef VAR(s_LD_Boundary_t, TYPEDEF) asLaneBoundary_array_t[10];
#endif
#ifndef RTE_TYPE_bAvailable
#define RTE_TYPE_bAvailable
typedef VAR(bool8, TYPEDEF) bAvailable;
#endif
#ifndef RTE_TYPE_bRollerTestBench
#define RTE_TYPE_bRollerTestBench
typedef VAR(bool8, TYPEDEF) bRollerTestBench;
#endif
#ifndef RTE_TYPE_booleanArray
#define RTE_TYPE_booleanArray
typedef VAR(boolean, TYPEDEF) booleanArray[32];
#endif
#ifndef RTE_TYPE_brightness
#define RTE_TYPE_brightness
typedef VAR(SR_RTE_Brightness_t, TYPEDEF) brightness;
#endif
#ifndef RTE_TYPE_calibrationConfidence
#define RTE_TYPE_calibrationConfidence
typedef VAR(unsigned char, TYPEDEF) calibrationConfidence;
#endif
#ifndef RTE_TYPE_color
#define RTE_TYPE_color
typedef VAR(LSD_e_Light_Color, TYPEDEF) color;
#endif
#ifndef RTE_TYPE_cyclesLost
#define RTE_TYPE_cyclesLost
typedef VAR(unsigned char, TYPEDEF) cyclesLost;
#endif
#ifndef RTE_TYPE_cyclesTraced
#define RTE_TYPE_cyclesTraced
typedef VAR(unsigned short, TYPEDEF) cyclesTraced;
#endif
#ifndef RTE_TYPE_defectPixel_array_t
#define RTE_TYPE_defectPixel_array_t
typedef VAR(LSD_Nvm_DefectPixel_t, TYPEDEF) defectPixel_array_t[90];
#endif
#ifndef RTE_TYPE_deltaX
#define RTE_TYPE_deltaX
typedef VAR(unsigned short, TYPEDEF) deltaX;
#endif
#ifndef RTE_TYPE_deltaXFiltered
#define RTE_TYPE_deltaXFiltered
typedef VAR(unsigned short, TYPEDEF) deltaXFiltered;
#endif
#ifndef RTE_TYPE_deltaY
#define RTE_TYPE_deltaY
typedef VAR(unsigned short, TYPEDEF) deltaY;
#endif
#ifndef RTE_TYPE_distToEffectiveSpeedLimit_array_t
#define RTE_TYPE_distToEffectiveSpeedLimit_array_t
typedef VAR(int, TYPEDEF) distToEffectiveSpeedLimit_array_t[8];
#endif
#ifndef RTE_TYPE_distToVisibleSpeedLimit_array_t
#define RTE_TYPE_distToVisibleSpeedLimit_array_t
typedef VAR(int, TYPEDEF) distToVisibleSpeedLimit_array_t[8];
#endif
#ifndef RTE_TYPE_eColor
#define RTE_TYPE_eColor
typedef VAR(eColor_t, TYPEDEF) eColor;
#endif
#ifndef RTE_TYPE_eCoordinateSystem_t
#define RTE_TYPE_eCoordinateSystem_t
typedef VAR(unsigned int, TYPEDEF) eCoordinateSystem_t;
#endif
#ifndef RTE_TYPE_eEBAObjQuality_t
#define RTE_TYPE_eEBAObjQuality_t
typedef VAR(unsigned char, TYPEDEF) eEBAObjQuality_t;
#endif
#ifndef RTE_TYPE_eEventType_t
#define RTE_TYPE_eEventType_t
typedef VAR(unsigned int, TYPEDEF) eEventType_t;
#endif
#ifndef RTE_TYPE_eLaneChange
#define RTE_TYPE_eLaneChange
typedef VAR(eLaneChange_t, TYPEDEF) eLaneChange;
#endif
#ifndef RTE_TYPE_eLaneEventType
#define RTE_TYPE_eLaneEventType
typedef VAR(eLaneEventType_t, TYPEDEF) eLaneEventType;
#endif
#ifndef RTE_TYPE_eObstacleClass_t
#define RTE_TYPE_eObstacleClass_t
typedef VAR(unsigned char, TYPEDEF) eObstacleClass_t;
#endif
#ifndef RTE_TYPE_eParallelModelActive
#define RTE_TYPE_eParallelModelActive
typedef VAR(eParallelModelActive_t, TYPEDEF) eParallelModelActive;
#endif
#ifndef RTE_TYPE_eParallelModel_t
#define RTE_TYPE_eParallelModel_t
typedef VAR(unsigned int, TYPEDEF) eParallelModel_t;
#endif
#ifndef RTE_TYPE_eSigStatus
#define RTE_TYPE_eSigStatus
typedef VAR(AlgoSignalState_t, TYPEDEF) eSigStatus;
#endif
#ifndef RTE_TYPE_eSteeringSide_t
#define RTE_TYPE_eSteeringSide_t
typedef VAR(unsigned int, TYPEDEF) eSteeringSide_t;
#endif
#ifndef RTE_TYPE_eTraceBracketBitMasks_t
#define RTE_TYPE_eTraceBracketBitMasks_t
typedef VAR(unsigned short, TYPEDEF) eTraceBracketBitMasks_t;
#endif
#ifndef RTE_TYPE_eType
#define RTE_TYPE_eType
typedef VAR(eType_t, TYPEDEF) eType;
#endif
#ifndef RTE_TYPE_e_IntradayState_t
#define RTE_TYPE_e_IntradayState_t
typedef VAR(unsigned char, TYPEDEF) e_IntradayState_t;
#endif
#ifndef RTE_TYPE_e_SuspiciousStopped_t
#define RTE_TYPE_e_SuspiciousStopped_t
typedef VAR(unsigned char, TYPEDEF) e_SuspiciousStopped_t;
#endif
#ifndef RTE_TYPE_effectiveSpeedLimitPreview_array_t
#define RTE_TYPE_effectiveSpeedLimitPreview_array_t
typedef VAR(MapRteOutputSpeedLimit_t, TYPEDEF) effectiveSpeedLimitPreview_array_t[8];
#endif
#ifndef RTE_TYPE_engine_torque_t
#define RTE_TYPE_engine_torque_t
typedef VAR(short, TYPEDEF) engine_torque_t;
#endif
#ifndef RTE_TYPE_fAccelAbs_t
#define RTE_TYPE_fAccelAbs_t
typedef VAR(float, TYPEDEF) fAccelAbs_t;
#endif
#ifndef RTE_TYPE_fAgeMeter
#define RTE_TYPE_fAgeMeter
typedef VAR(float, TYPEDEF) fAgeMeter;
#endif
#ifndef RTE_TYPE_fAngleDeg_t
#define RTE_TYPE_fAngleDeg_t
typedef VAR(float, TYPEDEF) fAngleDeg_t;
#endif
#ifndef RTE_TYPE_fCenterX
#define RTE_TYPE_fCenterX
typedef VAR(float, TYPEDEF) fCenterX;
#endif
#ifndef RTE_TYPE_fCenterY
#define RTE_TYPE_fCenterY
typedef VAR(float, TYPEDEF) fCenterY;
#endif
#ifndef RTE_TYPE_fConfidence_t
#define RTE_TYPE_fConfidence_t
typedef VAR(float, TYPEDEF) fConfidence_t;
#endif
#ifndef RTE_TYPE_fCurvature
#define RTE_TYPE_fCurvature
typedef VAR(float, TYPEDEF) fCurvature;
#endif
#ifndef RTE_TYPE_fCurvatureRate
#define RTE_TYPE_fCurvatureRate
typedef VAR(float, TYPEDEF) fCurvatureRate;
#endif
#ifndef RTE_TYPE_fCurvatureRateStd
#define RTE_TYPE_fCurvatureRateStd
typedef VAR(float, TYPEDEF) fCurvatureRateStd;
#endif
#ifndef RTE_TYPE_fCurvatureStd
#define RTE_TYPE_fCurvatureStd
typedef VAR(float, TYPEDEF) fCurvatureStd;
#endif
#ifndef RTE_TYPE_fDistanceMeter
#define RTE_TYPE_fDistanceMeter
typedef VAR(float, TYPEDEF) fDistanceMeter;
#endif
#ifndef RTE_TYPE_fDistanceStdMeter
#define RTE_TYPE_fDistanceStdMeter
typedef VAR(float, TYPEDEF) fDistanceStdMeter;
#endif
#ifndef RTE_TYPE_fEventDist
#define RTE_TYPE_fEventDist
typedef VAR(float, TYPEDEF) fEventDist;
#endif
#ifndef RTE_TYPE_fGradient_t
#define RTE_TYPE_fGradient_t
typedef VAR(float, TYPEDEF) fGradient_t;
#endif
#ifndef RTE_TYPE_fProbability_t
#define RTE_TYPE_fProbability_t
typedef VAR(float, TYPEDEF) fProbability_t;
#endif
#ifndef RTE_TYPE_fRadius_t
#define RTE_TYPE_fRadius_t
typedef VAR(float, TYPEDEF) fRadius_t;
#endif
#ifndef RTE_TYPE_fStiffness_t
#define RTE_TYPE_fStiffness_t
typedef VAR(float, TYPEDEF) fStiffness_t;
#endif
#ifndef RTE_TYPE_fTemperature_t
#define RTE_TYPE_fTemperature_t
typedef VAR(float, TYPEDEF) fTemperature_t;
#endif
#ifndef RTE_TYPE_fUncertainty_t
#define RTE_TYPE_fUncertainty_t
typedef VAR(float, TYPEDEF) fUncertainty_t;
#endif
#ifndef RTE_TYPE_fValidLengthMeter
#define RTE_TYPE_fValidLengthMeter
typedef VAR(float, TYPEDEF) fValidLengthMeter;
#endif
#ifndef RTE_TYPE_fVelocityAbs_t
#define RTE_TYPE_fVelocityAbs_t
typedef VAR(float, TYPEDEF) fVelocityAbs_t;
#endif
#ifndef RTE_TYPE_fWeight_t
#define RTE_TYPE_fWeight_t
typedef VAR(float, TYPEDEF) fWeight_t;
#endif
#ifndef RTE_TYPE_fWidthMeter
#define RTE_TYPE_fWidthMeter
typedef VAR(float, TYPEDEF) fWidthMeter;
#endif
#ifndef RTE_TYPE_fYaw
#define RTE_TYPE_fYaw
typedef VAR(float, TYPEDEF) fYaw;
#endif
#ifndef RTE_TYPE_fYawAngleRad
#define RTE_TYPE_fYawAngleRad
typedef VAR(float, TYPEDEF) fYawAngleRad;
#endif
#ifndef RTE_TYPE_fYawAngleStdRad
#define RTE_TYPE_fYawAngleStdRad
typedef VAR(float, TYPEDEF) fYawAngleStdRad;
#endif
#ifndef RTE_TYPE_float32Array
#define RTE_TYPE_float32Array
typedef VAR(float, TYPEDEF) float32Array[32];
#endif
#ifndef RTE_TYPE_glareFreeAreas_array_t
#define RTE_TYPE_glareFreeAreas_array_t
typedef VAR(HLA_BusInputSignals_GlareFreeArea_t, TYPEDEF) glareFreeAreas_array_t[5];
#endif
#ifndef RTE_TYPE_iEventQuality
#define RTE_TYPE_iEventQuality
typedef VAR(unsigned char, TYPEDEF) iEventQuality;
#endif
#ifndef RTE_TYPE_iMergeSplitToTrackId
#define RTE_TYPE_iMergeSplitToTrackId
typedef VAR(unsigned char, TYPEDEF) iMergeSplitToTrackId;
#endif
#ifndef RTE_TYPE_iNumOfUsedObjects
#define RTE_TYPE_iNumOfUsedObjects
typedef VAR(ObjNumber_t, TYPEDEF) iNumOfUsedObjects;
#endif
#ifndef RTE_TYPE_iQuality
#define RTE_TYPE_iQuality
typedef VAR(unsigned char, TYPEDEF) iQuality;
#endif
#ifndef RTE_TYPE_iSortedObjectList
#define RTE_TYPE_iSortedObjectList
typedef VAR(EM_t_GenObjSortedIdxArray, TYPEDEF) iSortedObjectList;
#endif
#ifndef RTE_TYPE_lightObjects
#define RTE_TYPE_lightObjects
typedef struct
{
  VAR(LSD_LightObject_General_t, TYPEDEF) general;
  VAR(LSD_LightObject_Kinematic_t, TYPEDEF) kinematic;
  VAR(LSD_LightObject_Attributes_t, TYPEDEF) attributes;
} lightObjects;
#endif
#ifndef RTE_TYPE_lights_array_t
#define RTE_TYPE_lights_array_t
typedef VAR(LSD_Light_t, TYPEDEF) lights_array_t[80];
#endif
#ifndef RTE_TYPE_mapMsgStack_array_t
#define RTE_TYPE_mapMsgStack_array_t
typedef VAR(MapRteCanMsg_t, TYPEDEF) mapMsgStack_array_t[10];
#endif
#ifndef RTE_TYPE_naviSpeedLimitTA19EU_t
#define RTE_TYPE_naviSpeedLimitTA19EU_t
typedef struct
{
  VAR(unsigned char, TYPEDEF) value;
  VAR(TA19NSPDTYP_t, TYPEDEF) type;
  VAR(TA19NSPLSGN_t, TYPEDEF) supplSign;
} naviSpeedLimitTA19EU_t;
#endif
#ifndef RTE_TYPE_naviSpeedLimitTA19EU_array_t
#define RTE_TYPE_naviSpeedLimitTA19EU_array_t
typedef VAR(naviSpeedLimitTA19EU_t, TYPEDEF) naviSpeedLimitTA19EU_array_t[6];
#endif
#ifndef RTE_TYPE_pathData_array_t
#define RTE_TYPE_pathData_array_t
typedef VAR(MapRtePathData_t, TYPEDEF) pathData_array_t[10];
#endif
#ifndef RTE_TYPE_pathData_array_t_0
#define RTE_TYPE_pathData_array_t_0
typedef VAR(MapRtePathData_t, TYPEDEF) pathData_array_t_0[10];
#endif
#ifndef RTE_TYPE_pressure_t
#define RTE_TYPE_pressure_t
typedef VAR(short, TYPEDEF) pressure_t;
#endif
#ifndef RTE_TYPE_road_gradient_t
#define RTE_TYPE_road_gradient_t
typedef VAR(signed char, TYPEDEF) road_gradient_t;
#endif
#ifndef RTE_TYPE_s_AdcValue_t
#define RTE_TYPE_s_AdcValue_t
typedef struct
{
  VAR(float, TYPEDEF) BattVolt;
  VAR(float, TYPEDEF) IgnVolt;
  VAR(float, TYPEDEF) PmicTemp_PF8200;
  VAR(float, TYPEDEF) PmicTemp_FS84;
  VAR(float, TYPEDEF) OmVolt_1V0;
  VAR(float, TYPEDEF) OmVolt_3V3;
  VAR(float, TYPEDEF) McuExtTemp;
  VAR(float, TYPEDEF) SocExtTemp;
} s_AdcValue_t;
#endif
#ifndef RTE_TYPE_s_Def_array_t
#define RTE_TYPE_s_Def_array_t
typedef VAR(GB_t_TileDefinition_t, TYPEDEF) s_Def_array_t[25];
#endif
#ifndef RTE_TYPE_s_Prob_array_t_0
#define RTE_TYPE_s_Prob_array_t_0
typedef VAR(GB_t_BlockageInfo_t, TYPEDEF) s_Prob_array_t_0[5];
#endif
#ifndef RTE_TYPE_s_RadDef_array_t
#define RTE_TYPE_s_RadDef_array_t
typedef VAR(GB_t_RadSegDefinition_t, TYPEDEF) s_RadDef_array_t[8];
#endif
#ifndef RTE_TYPE_s_RawProb_array_t
#define RTE_TYPE_s_RawProb_array_t
typedef VAR(GB_t_BlockageRawInfo_t, TYPEDEF) s_RawProb_array_t[25];
#endif
#ifndef RTE_TYPE_s_ResponseCurve_array_t
#define RTE_TYPE_s_ResponseCurve_array_t
typedef VAR(ImagerRespCurvePt_t, TYPEDEF) s_ResponseCurve_array_t[5];
#endif
#ifndef RTE_TYPE_segmentData_array_t
#define RTE_TYPE_segmentData_array_t
typedef VAR(MapRteSegmentData_t, TYPEDEF) segmentData_array_t[20];
#endif
#ifndef RTE_TYPE_segmentData_array_t_0
#define RTE_TYPE_segmentData_array_t_0
typedef VAR(MapRteSegmentData_t, TYPEDEF) segmentData_array_t_0[10];
#endif
#ifndef RTE_TYPE_sint16Array
#define RTE_TYPE_sint16Array
typedef VAR(short, TYPEDEF) sint16Array[16];
#endif
#ifndef RTE_TYPE_sint32Array
#define RTE_TYPE_sint32Array
typedef VAR(unsigned int, TYPEDEF) sint32Array[32];
#endif
#ifndef RTE_TYPE_sint8Array
#define RTE_TYPE_sint8Array
typedef VAR(signed char, TYPEDEF) sint8Array[8];
#endif
#ifndef RTE_TYPE_sint8_t
#define RTE_TYPE_sint8_t
typedef VAR(signed char, TYPEDEF) sint8_t;
#endif
#ifndef RTE_TYPE_speedLimit_array_t
#define RTE_TYPE_speedLimit_array_t
typedef VAR(MapRteOutputSpeedLimit_t, TYPEDEF) speedLimit_array_t[3];
#endif
#ifndef RTE_TYPE_speedLimit_array_t_0
#define RTE_TYPE_speedLimit_array_t_0
typedef VAR(MapRteOutputSpeedLimit_t, TYPEDEF) speedLimit_array_t_0[3];
#endif
#ifndef RTE_TYPE_t_ConstructionSite
#define RTE_TYPE_t_ConstructionSite
typedef struct
{
  VAR(boolean, TYPEDEF) b_MultipleMarker;
  VAR(boolean, TYPEDEF) b_LeftBarrier;
  VAR(boolean, TYPEDEF) b_RightBarrier;
  VAR(boolean, TYPEDEF) b_CrossingMarker;
  VAR(boolean, TYPEDEF) b_InhibitSingleLane;
  VAR(boolean, TYPEDEF) b_Hold;
} t_ConstructionSite;
#endif
#ifndef RTE_TYPE_t_CamLaneInputData
#define RTE_TYPE_t_CamLaneInputData
typedef struct
{
  VAR(unsigned int, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(CourseInfo_array_t, TYPEDEF) CourseInfo;
  VAR(LaneMarkerInfo_array_t, TYPEDEF) LaneMarkerInfo;
  VAR(t_ConstructionSite, TYPEDEF) ConstructionSite;
} t_CamLaneInputData;
#endif
#ifndef RTE_TYPE_t_CamLaneMarkerEnum
#define RTE_TYPE_t_CamLaneMarkerEnum
typedef VAR(unsigned char, TYPEDEF) t_CamLaneMarkerEnum;
#endif
#ifndef RTE_TYPE_t_Complex8CP16
#define RTE_TYPE_t_Complex8CP16
typedef struct
{
  VAR(signed char, TYPEDEF) s_Imag;
  VAR(signed char, TYPEDEF) s_Real;
} t_Complex8CP16;
#endif
#ifndef RTE_TYPE_t_ComplexPolarf32
#define RTE_TYPE_t_ComplexPolarf32
typedef struct
{
  VAR(float, TYPEDEF) f_Amplitude;
  VAR(float, TYPEDEF) f_Phase;
} t_ComplexPolarf32;
#endif
#ifndef RTE_TYPE_t_Cp16ValBeamDopplerNS
#define RTE_TYPE_t_Cp16ValBeamDopplerNS
typedef VAR(t_Complex8CP16, TYPEDEF) t_Cp16ValBeamDopplerNS[16];
#endif
#ifndef RTE_TYPE_t_Cp16SlideRgNS
#define RTE_TYPE_t_Cp16SlideRgNS
typedef VAR(t_Cp16ValBeamDopplerNS, TYPEDEF) t_Cp16SlideRgNS[256];
#endif
#ifndef RTE_TYPE_t_EBACodingParamFctModsIdx
#define RTE_TYPE_t_EBACodingParamFctModsIdx
typedef VAR(unsigned char, TYPEDEF) t_EBACodingParamFctModsIdx;
#endif
#ifndef RTE_TYPE_t_EcuMStates
#define RTE_TYPE_t_EcuMStates
typedef VAR(unsigned char, TYPEDEF) t_EcuMStates;
#endif
#ifndef RTE_TYPE_t_HMI_Buttons
#define RTE_TYPE_t_HMI_Buttons
typedef struct
{
  VAR(boolean, TYPEDEF) bWindowButtonsPressed;
  VAR(boolean, TYPEDEF) bMirrorButtonsPressed;
  VAR(boolean, TYPEDEF) bIntLightsButtonsPressed;
  VAR(boolean, TYPEDEF) bExtLightsButtonsPressed;
  VAR(boolean, TYPEDEF) bSunRoofButtonsPressed;
  VAR(boolean, TYPEDEF) bStWhlButtonsPressed;
  VAR(boolean, TYPEDEF) bMidConsoleButtonsPressed;
  VAR(boolean, TYPEDEF) bRadioButtonsPressed;
  VAR(boolean, TYPEDEF) bOtherButtonsPressed;
} t_HMI_Buttons;
#endif
#ifndef RTE_TYPE_t_HMI_DynamicOnly
#define RTE_TYPE_t_HMI_DynamicOnly
typedef struct
{
  VAR(t_HMI_Buttons, TYPEDEF) s_HMI_Buttons;
} t_HMI_DynamicOnly;
#endif
#ifndef RTE_TYPE_t_HMI_On_Off_Switch_t
#define RTE_TYPE_t_HMI_On_Off_Switch_t
typedef VAR(unsigned char, TYPEDEF) t_HMI_On_Off_Switch_t;
#endif
#ifndef RTE_TYPE_t_HMI_Warning_Levels_t
#define RTE_TYPE_t_HMI_Warning_Levels_t
typedef VAR(unsigned char, TYPEDEF) t_HMI_Warning_Levels_t;
#endif
#ifndef RTE_TYPE_t_HMI_NVMRelevant
#define RTE_TYPE_t_HMI_NVMRelevant
typedef struct
{
  VAR(t_HMI_On_Off_Switch_t, TYPEDEF) FCT_EBA_VEH_Enable;
  VAR(t_HMI_On_Off_Switch_t, TYPEDEF) FCT_EBA_PED_Enable;
  VAR(t_HMI_On_Off_Switch_t, TYPEDEF) FCT_EBA_NOCLASS_Enable;
  VAR(t_HMI_On_Off_Switch_t, TYPEDEF) FCT_ALDW_Enable;
  VAR(t_HMI_Warning_Levels_t, TYPEDEF) FCT_EBA_VEH_SensitivityLevel;
  VAR(t_HMI_Warning_Levels_t, TYPEDEF) FCT_EBA_PED_SensitivityLevel;
  VAR(t_HMI_Warning_Levels_t, TYPEDEF) FCT_EBA_NOCLASS_SensitivityLevel;
  VAR(t_HMI_Warning_Levels_t, TYPEDEF) FCT_ALDW_SensitivityLevel;
  VAR(t_HMI_On_Off_Switch_t, TYPEDEF) FCT_LDP_Enable;
} t_HMI_NVMRelevant;
#endif
#ifndef RTE_TYPE_t_HMI_Data_t
#define RTE_TYPE_t_HMI_Data_t
typedef struct
{
  VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
  VAR(SignalHeader_t, TYPEDEF) sSigHeader;
  VAR(t_HMI_DynamicOnly, TYPEDEF) s_HMI_DynamicOnly;
  VAR(t_HMI_NVMRelevant, TYPEDEF) s_HMI_NVMRelevant;
} t_HMI_Data_t;
#endif
#ifndef RTE_TYPE_t_OpModeCan
#define RTE_TYPE_t_OpModeCan
typedef VAR(unsigned char, TYPEDEF) t_OpModeCan;
#endif
#ifndef RTE_TYPE_t_OpModeDia
#define RTE_TYPE_t_OpModeDia
typedef VAR(unsigned char, TYPEDEF) t_OpModeDia;
#endif
#ifndef RTE_TYPE_t_OpModeRfCom
#define RTE_TYPE_t_OpModeRfCom
typedef VAR(unsigned char, TYPEDEF) t_OpModeRfCom;
#endif
#ifndef RTE_TYPE_t_OpModeSen
#define RTE_TYPE_t_OpModeSen
typedef VAR(unsigned char, TYPEDEF) t_OpModeSen;
#endif
#ifndef RTE_TYPE_t_PixelData
#define RTE_TYPE_t_PixelData
typedef VAR(unsigned short, TYPEDEF) t_PixelData;
#endif
#ifndef RTE_TYPE_u_CrashDumpBuffer_array_t
#define RTE_TYPE_u_CrashDumpBuffer_array_t
typedef VAR(unsigned char, TYPEDEF) u_CrashDumpBuffer_array_t[1055];
#endif
#ifndef RTE_TYPE_t_SoCCrashDump_t
#define RTE_TYPE_t_SoCCrashDump_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(u_CrashDumpBuffer_array_t, TYPEDEF) u_CrashDumpBuffer;
} t_SoCCrashDump_t;
#endif
#ifndef RTE_TYPE_u_DemBuffer_array_t
#define RTE_TYPE_u_DemBuffer_array_t
typedef VAR(unsigned short, TYPEDEF) u_DemBuffer_array_t[512];
#endif
#ifndef RTE_TYPE_t_SoCDemSlaveEvents_t
#define RTE_TYPE_t_SoCDemSlaveEvents_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(u_DemBuffer_array_t, TYPEDEF) u_DemBuffer;
} t_SoCDemSlaveEvents_t;
#endif
#ifndef RTE_TYPE_t_SoCStatEcuData_t
#define RTE_TYPE_t_SoCStatEcuData_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(unsigned short, TYPEDEF) u_StatCntryCodeValue;
  VAR(unsigned int, TYPEDEF) u_StatOptimeTotalValue;
  VAR(unsigned int, TYPEDEF) u_StatOptimeNightValue;
  VAR(unsigned int, TYPEDEF) u_StatOptimeWiperValue;
  VAR(unsigned int, TYPEDEF) u_StatDrivenDistTotalValue;
  VAR(unsigned int, TYPEDEF) u_StatDrivenDistUrbanValue;
  VAR(unsigned int, TYPEDEF) u_StatDrivenDistRuralValue;
  VAR(unsigned int, TYPEDEF) u_StatDrivenDistMowayValue;
  VAR(unsigned int, TYPEDEF) u_StatDrivenDistNaValue;
  VAR(unsigned short, TYPEDEF) u_StatAmntEyeqResetValue;
  VAR(unsigned short, TYPEDEF) u_StatAmntOnlineCalibValue;
} t_SoCStatEcuData_t;
#endif
#ifndef RTE_TYPE_t_SoCSystemConfigInfo_t
#define RTE_TYPE_t_SoCSystemConfigInfo_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(unsigned char, TYPEDEF) u_LengthOfRightImageBuffers;
} t_SoCSystemConfigInfo_t;
#endif
#ifndef RTE_TYPE_u_CustomerSpecificVersion_array_t
#define RTE_TYPE_u_CustomerSpecificVersion_array_t
typedef VAR(unsigned char, TYPEDEF) u_CustomerSpecificVersion_array_t[16];
#endif
#ifndef RTE_TYPE_u_Reserved_Fields_array_t_0
#define RTE_TYPE_u_Reserved_Fields_array_t_0
typedef VAR(unsigned int, TYPEDEF) u_Reserved_Fields_array_t_0[7];
#endif
#ifndef RTE_TYPE_t_SoCSystemData_t
#define RTE_TYPE_t_SoCSystemData_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(unsigned int, TYPEDEF) u_SynchTimeStampL;
  VAR(unsigned int, TYPEDEF) u_SynchTimeStampH;
  VAR(unsigned int, TYPEDEF) u_ACTLStateActual;
  VAR(BaseSchedulingMode_t, TYPEDEF) eSchedulingModeActual;
  VAR(float, TYPEDEF) f_TempSensorRight;
  VAR(float, TYPEDEF) f_TempSensorLeft;
  VAR(u_CustomerSpecificVersion_array_t, TYPEDEF) u_CustomerSpecificVersion;
  VAR(unsigned int, TYPEDEF) u_SystemState;
  VAR(u_Reserved_Fields_array_t_0, TYPEDEF) u_Reserved_Fields;
} t_SoCSystemData_t;
#endif
#ifndef RTE_TYPE_u_Data_array_t
#define RTE_TYPE_u_Data_array_t
typedef VAR(unsigned char, TYPEDEF) u_Data_array_t[64];
#endif
#ifndef RTE_TYPE_t_SoCXcpRxData_t
#define RTE_TYPE_t_SoCXcpRxData_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(unsigned int, TYPEDEF) u_Receiver;
  VAR(unsigned int, TYPEDEF) u_CmdIdentifier;
  VAR(unsigned int, TYPEDEF) u_MemStart;
  VAR(unsigned int, TYPEDEF) u_MemLength;
  VAR(u_Data_array_t, TYPEDEF) u_Data;
} t_SoCXcpRxData_t;
#endif
#ifndef RTE_TYPE_u_Data_array_t_0
#define RTE_TYPE_u_Data_array_t_0
typedef VAR(unsigned char, TYPEDEF) u_Data_array_t_0[64];
#endif
#ifndef RTE_TYPE_t_SoCXcpTxData_t
#define RTE_TYPE_t_SoCXcpTxData_t
typedef struct
{
  VAR(unsigned int, TYPEDEF) u_VersionNumber;
  VAR(unsigned int, TYPEDEF) u_ReadLength;
  VAR(u_Data_array_t_0, TYPEDEF) u_Data;
} t_SoCXcpTxData_t;
#endif
#ifndef RTE_TYPE_u_MeafreezesData_array_t
#define RTE_TYPE_u_MeafreezesData_array_t
typedef VAR(unsigned char, TYPEDEF) u_MeafreezesData_array_t[7936];
#endif
#ifndef RTE_TYPE_u_Reserved_Fields_array_t
#define RTE_TYPE_u_Reserved_Fields_array_t
typedef VAR(unsigned int, TYPEDEF) u_Reserved_Fields_array_t[7];
#endif
#ifndef RTE_TYPE_uiCycleCounter
#define RTE_TYPE_uiCycleCounter
typedef VAR(AlgoCycleCounter_t, TYPEDEF) uiCycleCounter;
#endif
#ifndef RTE_TYPE_uiMeasurementCounter
#define RTE_TYPE_uiMeasurementCounter
typedef VAR(AlgoCycleCounter_t, TYPEDEF) uiMeasurementCounter;
#endif
#ifndef RTE_TYPE_uiTimeStamp
#define RTE_TYPE_uiTimeStamp
typedef VAR(AlgoDataTimeStamp_t, TYPEDEF) uiTimeStamp;
#endif
#ifndef RTE_TYPE_uiVersionNumber
#define RTE_TYPE_uiVersionNumber
typedef VAR(AlgoInterfaceVersionNumber_t, TYPEDEF) uiVersionNumber;
#endif
#ifndef RTE_TYPE_uint16Array
#define RTE_TYPE_uint16Array
typedef VAR(unsigned short, TYPEDEF) uint16Array[16];
#endif
#ifndef RTE_TYPE_uint32Array
#define RTE_TYPE_uint32Array
typedef VAR(unsigned int, TYPEDEF) uint32Array[32];
#endif
#ifndef RTE_TYPE_uint64_t
#define RTE_TYPE_uint64_t
typedef VAR(unsigned long long, TYPEDEF) uint64_t;
#endif
#ifndef RTE_TYPE_uint8Array
#define RTE_TYPE_uint8Array
typedef VAR(unsigned char, TYPEDEF) uint8Array[8];
#endif
#ifndef RTE_TYPE_value_t
#define RTE_TYPE_value_t
typedef VAR(unsigned char, TYPEDEF) value_t;
#endif
#ifndef RTE_TYPE_varAccel
#define RTE_TYPE_varAccel
typedef VAR(float, TYPEDEF) varAccel;
#endif
#ifndef RTE_TYPE_varVelocity
#define RTE_TYPE_varVelocity
typedef VAR(float, TYPEDEF) varVelocity;
#endif
#ifndef RTE_TYPE_visibleSpeedLimitPreview_array_t
#define RTE_TYPE_visibleSpeedLimitPreview_array_t
typedef VAR(MapRteOutputSpeedLimit_t, TYPEDEF) visibleSpeedLimitPreview_array_t[8];
#endif
#ifndef RTE_TYPE_void_t
#define RTE_TYPE_void_t
typedef VAR(void, TYPEDEF) void_t;
#endif
#ifndef RTE_TYPE_s_Esh_ErrorStatusInfo_t
#define RTE_TYPE_s_Esh_ErrorStatusInfo_t
typedef struct
{
  VAR(boolean, TYPEDEF) AEB;
  VAR(boolean, TYPEDEF) ELK;
  VAR(boolean, TYPEDEF) FCW;
  VAR(boolean, TYPEDEF) HLA;
  VAR(boolean, TYPEDEF) LDW;
  VAR(boolean, TYPEDEF) LKA;
  VAR(boolean, TYPEDEF) TSA;
  VAR(boolean, TYPEDEF) FAB;
} s_Esh_ErrorStatusInfo_t;
#endif
#ifndef RTE_TYPE_Rte_Cs_TransactionHandleType
#define RTE_TYPE_Rte_Cs_TransactionHandleType
typedef struct
{
  VAR(uint16, TYPEDEF) clientId;
  VAR(uint16, TYPEDEF) sequenceCounter;
} Rte_Cs_TransactionHandleType;
#endif
typedef struct
{
  VAR(uint8, TYPEDEF) currentMode;
  VAR(uint8, TYPEDEF) previousMode;
  VAR(uint8, TYPEDEF) nextMode;
} Rte_Intern_OsApplication_C0_Rte_ModeVariable_0Type;
typedef struct
{
  VAR(uint8, TYPEDEF) currentMode;
  VAR(uint8, TYPEDEF) previousMode;
  VAR(uint8, TYPEDEF) nextMode;
} Rte_Intern_OsApplication_C0_Rte_ModeVariable_1Type;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_AebDs;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_BswM_OsApplication_C0;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_EvAdc;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_Cdm;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_ComM;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_Comco;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_Cpr;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_Cps;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_CtCdSPI;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_Dcm;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_Dem;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_DevelopmentErrorTracer;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_Dsm;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_EcuM;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_Esh;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_Esm;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_FSMonitor;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_Fcu;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_FiM;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_HeartbeatDet;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_HlaAdapter;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_Logging;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_Med;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_ModM;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_NvM;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_Qsm;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_RtaAdapter_C0;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_Sdc;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_Sed;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_SpiSync;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_StbM;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_Time;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_TsaAdapter;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_VdyAdapter;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_VoltMonI;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_WdgM_CORE_0;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_BswM_OsApplication_C1;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_Esm_Core1;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_FctAdapter;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_RtaAdapter_C1;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_WdgM_CORE_1;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_BswM_OsApplication_C2;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_Esm_Core2;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_RtaAdapter_C2;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_BswM_OsApplication_C3;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_Esm_Core3;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_LcfAdapter;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_MtsiAdapter;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_RtaAdapter_C3;

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif
/** @} doxygen end group definition  */
/* ==================[end of file]============================================ */

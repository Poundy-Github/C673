#ifndef RTE_VOLTMONI_HOOK_H
#define RTE_VOLTMONI_HOOK_H
/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \version 6.6.3
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2021 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

/*
 * This file contains Rte hook declarations for the software component type VoltMonI
 *
 * This file has been automatically generated by
 * EB tresos AutoCore Rte Generator Version 6.6.3
 * on Sun Apr 23 15:33:27 CST 2023. !!!IGNORE-LINE!!!
 */

/*
 * \addtogroup Rte Runtime Environment
 * @{
 */

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* ==================[Includes]=============================================== */
#include <Rte_Cfg.h>
#include <Rte_Type.h>

/* ==================[Macros]================================================= */
#ifndef RTE_CORE
#ifndef RTE_VFB_TRACE
#define RTE_VFB_TRACE 0
#endif
#endif
#define RTE_START_SEC_CODE
#include <Rte_MemMap.h>
#if (defined(Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_DisableCommunication_DE_VoltMonI_DisableCommunication_Start)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_DisableCommunication_DE_VoltMonI_DisableCommunication_Start
#endif
#if defined(Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_DisableCommunication_DE_VoltMonI_DisableCommunication_Start)
#undef Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_DisableCommunication_DE_VoltMonI_DisableCommunication_Start
extern FUNC(void, RTE_APPL_CODE) Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_DisableCommunication_DE_VoltMonI_DisableCommunication_Start (boolean data);
#else
#define Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_DisableCommunication_DE_VoltMonI_DisableCommunication_Start(data) ((void)0)
#endif
#if (defined(Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_DisableCommunication_DE_VoltMonI_DisableCommunication_Return)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_DisableCommunication_DE_VoltMonI_DisableCommunication_Return
#endif
#if defined(Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_DisableCommunication_DE_VoltMonI_DisableCommunication_Return)
#undef Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_DisableCommunication_DE_VoltMonI_DisableCommunication_Return
extern FUNC(void, RTE_APPL_CODE) Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_DisableCommunication_DE_VoltMonI_DisableCommunication_Return (boolean data);
#else
#define Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_DisableCommunication_DE_VoltMonI_DisableCommunication_Return(data) ((void)0)
#endif
#if (defined(Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_VoltState_DE_VoltMonI_VoltState_Start)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_VoltState_DE_VoltMonI_VoltState_Start
#endif
#if defined(Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_VoltState_DE_VoltMonI_VoltState_Start)
#undef Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_VoltState_DE_VoltMonI_VoltState_Start
extern FUNC(void, RTE_APPL_CODE) Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_VoltState_DE_VoltMonI_VoltState_Start (uint8 data);
#else
#define Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_VoltState_DE_VoltMonI_VoltState_Start(data) ((void)0)
#endif
#if (defined(Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_VoltState_DE_VoltMonI_VoltState_Return)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_VoltState_DE_VoltMonI_VoltState_Return
#endif
#if defined(Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_VoltState_DE_VoltMonI_VoltState_Return)
#undef Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_VoltState_DE_VoltMonI_VoltState_Return
extern FUNC(void, RTE_APPL_CODE) Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_VoltState_DE_VoltMonI_VoltState_Return (uint8 data);
#else
#define Rte_WriteHook_VoltMonI_PP_VoltMonI_SRI_VoltState_DE_VoltMonI_VoltState_Return(data) ((void)0)
#endif
#if (defined(Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_BATT_GetPhyValue_Start)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_BATT_GetPhyValue_Start
#endif
#if defined(Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_BATT_GetPhyValue_Start)
#undef Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_BATT_GetPhyValue_Start
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_BATT_GetPhyValue_Start (P2VAR(float32_t, AUTOMATIC, RTE_APPL_DATA) value);
#else
#define Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_BATT_GetPhyValue_Start(value) ((void)0)
#endif
#if (defined(Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_BATT_GetPhyValue_Return)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_BATT_GetPhyValue_Return
#endif
#if defined(Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_BATT_GetPhyValue_Return)
#undef Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_BATT_GetPhyValue_Return
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_BATT_GetPhyValue_Return (P2VAR(float32_t, AUTOMATIC, RTE_APPL_DATA) value);
#else
#define Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_BATT_GetPhyValue_Return(value) ((void)0)
#endif
#if (defined(Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_IGN_GetPhyValue_Start)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_IGN_GetPhyValue_Start
#endif
#if defined(Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_IGN_GetPhyValue_Start)
#undef Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_IGN_GetPhyValue_Start
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_IGN_GetPhyValue_Start (P2VAR(float32_t, AUTOMATIC, RTE_APPL_DATA) value);
#else
#define Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_IGN_GetPhyValue_Start(value) ((void)0)
#endif
#if (defined(Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_IGN_GetPhyValue_Return)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_IGN_GetPhyValue_Return
#endif
#if defined(Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_IGN_GetPhyValue_Return)
#undef Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_IGN_GetPhyValue_Return
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_IGN_GetPhyValue_Return (P2VAR(float32_t, AUTOMATIC, RTE_APPL_DATA) value);
#else
#define Rte_CallHook_VoltMonI_RP_EvAdc_GetValue_VMON_IGN_GetPhyValue_Return(value) ((void)0)
#endif
#if (defined(Rte_CallHook_VoltMonI_RP_Comco_CSI_NMWakupFlag_NMWakupFlag_Start)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_VoltMonI_RP_Comco_CSI_NMWakupFlag_NMWakupFlag_Start
#endif
#if defined(Rte_CallHook_VoltMonI_RP_Comco_CSI_NMWakupFlag_NMWakupFlag_Start)
#undef Rte_CallHook_VoltMonI_RP_Comco_CSI_NMWakupFlag_NMWakupFlag_Start
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_VoltMonI_RP_Comco_CSI_NMWakupFlag_NMWakupFlag_Start (P2VAR(uint8_t, AUTOMATIC, RTE_APPL_DATA) u_WakeupFlag);
#else
#define Rte_CallHook_VoltMonI_RP_Comco_CSI_NMWakupFlag_NMWakupFlag_Start(u_WakeupFlag) ((void)0)
#endif
#if (defined(Rte_CallHook_VoltMonI_RP_Comco_CSI_NMWakupFlag_NMWakupFlag_Return)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_VoltMonI_RP_Comco_CSI_NMWakupFlag_NMWakupFlag_Return
#endif
#if defined(Rte_CallHook_VoltMonI_RP_Comco_CSI_NMWakupFlag_NMWakupFlag_Return)
#undef Rte_CallHook_VoltMonI_RP_Comco_CSI_NMWakupFlag_NMWakupFlag_Return
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_VoltMonI_RP_Comco_CSI_NMWakupFlag_NMWakupFlag_Return (P2VAR(uint8_t, AUTOMATIC, RTE_APPL_DATA) u_WakeupFlag);
#else
#define Rte_CallHook_VoltMonI_RP_Comco_CSI_NMWakupFlag_NMWakupFlag_Return(u_WakeupFlag) ((void)0)
#endif
#if (defined(Rte_Runnable_VoltMonI_VoltMonI_InitFunction_Start)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_VoltMonI_VoltMonI_InitFunction_Start
#endif
#if defined(Rte_Runnable_VoltMonI_VoltMonI_InitFunction_Start)
#undef Rte_Runnable_VoltMonI_VoltMonI_InitFunction_Start
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_VoltMonI_VoltMonI_InitFunction_Start (void);
#else
#define Rte_Runnable_VoltMonI_VoltMonI_InitFunction_Start() ((void)0)
#endif
#if (defined(Rte_Runnable_VoltMonI_VoltMonI_InitFunction_Return)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_VoltMonI_VoltMonI_InitFunction_Return
#endif
#if defined(Rte_Runnable_VoltMonI_VoltMonI_InitFunction_Return)
#undef Rte_Runnable_VoltMonI_VoltMonI_InitFunction_Return
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_VoltMonI_VoltMonI_InitFunction_Return (void);
#else
#define Rte_Runnable_VoltMonI_VoltMonI_InitFunction_Return() ((void)0)
#endif
#if (defined(Rte_Runnable_VoltMonI_VoltMonI_MainFunction_Start)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_VoltMonI_VoltMonI_MainFunction_Start
#endif
#if defined(Rte_Runnable_VoltMonI_VoltMonI_MainFunction_Start)
#undef Rte_Runnable_VoltMonI_VoltMonI_MainFunction_Start
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_VoltMonI_VoltMonI_MainFunction_Start (void);
#else
#define Rte_Runnable_VoltMonI_VoltMonI_MainFunction_Start() ((void)0)
#endif
#if (defined(Rte_Runnable_VoltMonI_VoltMonI_MainFunction_Return)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_VoltMonI_VoltMonI_MainFunction_Return
#endif
#if defined(Rte_Runnable_VoltMonI_VoltMonI_MainFunction_Return)
#undef Rte_Runnable_VoltMonI_VoltMonI_MainFunction_Return
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_VoltMonI_VoltMonI_MainFunction_Return (void);
#else
#define Rte_Runnable_VoltMonI_VoltMonI_MainFunction_Return() ((void)0)
#endif
#define RTE_STOP_SEC_CODE
#include <Rte_MemMap.h>

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif
/** @} doxygen end group definition  */
/* ==================[end of file]============================================ */

# read file list containing all variables used in this scfg file
execfile(File("#../../../01_Source_Code/algo/hla/algo_lib_file_list.scfg").abspath)
# execfile(File("#../hla_sim/sim_swc_hla/sim_swc_hla_file_list.scfg").abspath)

# source and include paths for C674x
c674x_src = Split(hla_algo_sources)
c674x_cpp_path = Split(hla_algo_include_paths) + Split(hla_algo_common_include_paths)
# include paths that must be added before compiler includes
c674x_prepend_cpp_path = []

# source and include paths for CortexA8
ca8_src = Split(hla_algo_sources)
ca8_cpp_path = Split(hla_algo_include_paths) + Split(hla_algo_common_include_paths)
# include paths that must be added before compiler includes
ca8_prepend_cpp_path = []

# source and include paths for PC sim
pc_sim_src = Split(hla_algo_sources) + Split(hla_algo_pdo_sources)
pc_sim_cpp_path = Split(hla_algo_include_paths) + Split(hla_algo_common_include_paths)
# include paths that must be added before compiler includes
pc_prepend_cpp_path = []

# source and include paths for Arp32
arp32_src = Split(hla_algo_ti_eve_arp32_sources)
arp32_cpp_path = Split(hla_algo_ti_eve_arp32_include_paths) + Split(hla_algo_common_include_paths)
# include paths that must be added before compiler includes
arp32_prepend_cpp_path = []

# pdo source
pdo_src_list = Split(hla_algo_pdo_sources)

# pdo source for sim
# pdo_sim_src_list = pdo_src_list + map(lambda x: ("../../../03_Workspace/algo/hla_sim/sim_swc_hla/" + x), Split(hla_sim_swc_pdo_sources))

# fingerprint source
fingerprint_src_list = Split(hla_algo_sources) + Split(hla_algo_ti_eve_arp32_sources)

# define if sdl is generated when lib is compiled (default: True)
generate_sdl_when_compiling_lib = True

# header file containing TASK_ID_(component)
id_file_path = "#../../../01_Source_Code/common/glob_comp_id.h"

# task ID. The value of this task ID will replace %s in PDO_TOOL_OPTIONS_ECU and PDO_TOOL_OPTIONS_SIM
task_id_define = "TASK_ID_" + algo_name.upper()


# PDO tool option for ECU
PDO_TOOL_OPTIONS_ECU = ("-f sdl2.0 --disable normalobj --enable virtualobj --cycleinfo default," + 
                       algo_name.upper() + "_ENV_PVT " + algo_name.upper() + " %s -v 0x00000000-0xFFFFFFFF --checkvirtrange 0x00000000-0xFFFFFFFF")

# PDO tool option for sim DLL                       
PDO_TOOL_OPTIONS_SIM = ("-f sdl2.0 --disable normalobj --enable virtualobj --cycleinfo default," + 
                       algo_name.upper() + "_ENV," + algo_name.upper() + "_ENV_PVT " +  algo_name.upper() + " %s -v 0x00000000-0xFFFFFFFF --checkvirtrange 0x00000000-0xFFFFFFFF")

# compiler include path required by pdo_scan when generating sdl file for sim
compiler_include_paths = """
C:/LegacyApp/VisualStudio2005/VC/INCLUDE
"""
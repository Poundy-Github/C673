#ifndef RTE_SMC_OSAPPLICATION_C0_H
#define RTE_SMC_OSAPPLICATION_C0_H
/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \version 6.6.3
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2021 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

/*
 *
 *
 * This file has been automatically generated by
 * EB tresos AutoCore Rte Generator Version 6.6.3
 * on Tue Feb 28 15:54:30 CST 2023. !!!IGNORE-LINE!!!
 */

/*
 * \addtogroup Rte Runtime Environment
 * @{
 */

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* ==================[Definition of variables with external linkage]========== */
#define RTE_START_SEC_SHARED_OSAPPLICATION_C0_VAR_32
#include <Rte_MemMap.h>
extern VAR(DIMInputCustom_t, RTE_VAR) Rte_Smc_Rte_FctAdapter_Prototype_RP_Fcu_DimInputCustomData_DimInputCustomData;
extern VAR(DIMInputGeneric_t, RTE_VAR) Rte_Smc_Rte_FctAdapter_Prototype_RP_Fcu_DimInputGenericData_DimInputGenericData;
extern VAR(FCTCtrlData_t, RTE_VAR) Rte_Smc_Rte_FctAdapter_Prototype_RP_Fcu_FctCtrlData_FctCtrlData;
extern VAR(HEADInputCustom_t, RTE_VAR) Rte_Smc_Rte_FctAdapter_Prototype_RP_Fcu_HeadInputCustomData_HeadInputCustomData;
extern VAR(HEADInputGeneric_t, RTE_VAR) Rte_Smc_Rte_FctAdapter_Prototype_RP_Fcu_HeadInputGenericData_HeadInputGenericData;
extern VAR(VehPar_t, RTE_VAR) Rte_Smc_Rte_FctAdapter_Prototype_RP_Fcu_VehPar_VehPar;
extern VAR(VehSig_t, RTE_VAR) Rte_Smc_Rte_FctAdapter_Prototype_RP_Fcu_VehSig_VehSig;
extern VAR(EM_t_ARSObjectList, RTE_VAR) Rte_Smc_Rte_FctAdapter_Prototype_RP_Sdc_Cem_ARSObjectList_ARSObjectList;
extern VAR(EM_t_FusionObjectList, RTE_VAR) Rte_Smc_Rte_FctAdapter_Prototype_RP_Sdc_Cem_FusionObjectList_FusionObjectList;
extern VAR(EM_t_GenObjectList, RTE_VAR) Rte_Smc_Rte_FctAdapter_Prototype_RP_Sdc_Cem_GenObjectList_GenObjectList;
extern VAR(VehDyn_t, RTE_VAR) Rte_Smc_Rte_FctAdapter_Prototype_RP_VdyAdapter_VehDyn_VehDyn;
extern VAR(BaseCtrlData_t, RTE_VAR) Rte_Smc_Rte_LcfAdapter_Prototype_RP_Fcu_BaseCtrlData_BaseCtrlData;
extern VAR(LCF_GenericInputs_t, RTE_VAR) Rte_Smc_Rte_LcfAdapter_Prototype_RP_Fcu_LcfGenericInputData_LcfGenericInputData;
extern VAR(AbdOutputData_t, RTE_VAR) Rte_Smc_Rte_LcfAdapter_Prototype_RP_Sdc_Perception_AbdOutputData_AbdOutputData_t;
extern VAR(VDYOffsets_t, RTE_VAR) Rte_Smc_Rte_LcfAdapter_Prototype_RP_VdyAdapter_VdyOffsets_VdyOffsets;
#define RTE_STOP_SEC_SHARED_OSAPPLICATION_C0_VAR_32
#include <Rte_MemMap.h>
#define RTE_START_SEC_SHARED_OSAPPLICATION_C0_VAR_8
#include <Rte_MemMap.h>
extern VAR(uint8, RTE_VAR) Rte_Smc_Rte_ModeReceiveQueue_788B4C92C1303405B6002337F9CFC312[1];
extern volatile VAR(uint8, RTE_VAR) Rte_Smc_Rte_ModeReceiveQueue_788B4C92C1303405B6002337F9CFC312_tail;
extern VAR(uint8, RTE_VAR) Rte_Smc_Rte_ModeReceiveQueue_12F5B0DED9CAB6D8D73ADEB8B179B6C1[1];
extern volatile VAR(uint8, RTE_VAR) Rte_Smc_Rte_ModeReceiveQueue_12F5B0DED9CAB6D8D73ADEB8B179B6C1_tail;
extern VAR(uint8, RTE_VAR) Rte_Smc_Rte_ModeReceiveQueue_B7A976E740C73DF0839BD6CE784C8A55[1];
extern volatile VAR(uint8, RTE_VAR) Rte_Smc_Rte_ModeReceiveQueue_B7A976E740C73DF0839BD6CE784C8A55_tail;
extern VAR(uint8, RTE_VAR) Rte_Smc_SchM_State_OsApplication_C0;
extern VAR(uint8, RTE_VAR) Rte_Smc_Rte_State_OsApplication_C0;
extern VAR(boolean, RTE_VAR) Rte_Smc_Rte_EcuM_1_Core_1__EcuM_MasterCoreSyncPort[1];
extern volatile VAR(uint8, RTE_VAR) Rte_Smc_Rte_EcuM_1_Core_1__EcuM_MasterCoreSyncPort_tail;
extern VAR(uint8, RTE_VAR) Rte_Smc_Rte_EcuM_1_Core_1__EcuM_MasterCoreSyncPort_ldcWriter;
extern VAR(boolean, RTE_VAR) Rte_Smc_Rte_EcuM_1_Core_2__EcuM_MasterCoreSyncPort[1];
extern volatile VAR(uint8, RTE_VAR) Rte_Smc_Rte_EcuM_1_Core_2__EcuM_MasterCoreSyncPort_tail;
extern VAR(uint8, RTE_VAR) Rte_Smc_Rte_EcuM_1_Core_2__EcuM_MasterCoreSyncPort_ldcWriter;
extern VAR(boolean, RTE_VAR) Rte_Smc_Rte_EcuM_1_Core_3__EcuM_MasterCoreSyncPort[1];
extern volatile VAR(uint8, RTE_VAR) Rte_Smc_Rte_EcuM_1_Core_3__EcuM_MasterCoreSyncPort_tail;
extern VAR(uint8, RTE_VAR) Rte_Smc_Rte_EcuM_1_Core_3__EcuM_MasterCoreSyncPort_ldcWriter;
extern volatile VAR(uint8, RTE_VAR) Rte_Smc_Rte_EcuM__EcuM_SlaveCoreSyncPort_head;
extern VAR(uint8, RTE_VAR) Rte_Smc_Rte_EcuM__EcuM_SlaveCoreSyncPort_ldcReader;
#define RTE_STOP_SEC_SHARED_OSAPPLICATION_C0_VAR_8
#include <Rte_MemMap.h>

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif
/** @} doxygen end group definition  */
/* ==================[end of file]============================================ */

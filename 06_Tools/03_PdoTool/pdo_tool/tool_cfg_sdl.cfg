/*
	Configuration file for PDO-Tool
	Template for SDL2.0 (MTS) output
	
	Note: C and C++ comments are supported
	Each statement has to be terminated by a semicolon ';'
	$Revision: 1.1 $
	$Log: tool_cfg_sdl.cfg  $
	Revision 1.1 2017/07/13 08:10:30CEST Wartusch, Benedikt (uid40190) 
	Initial revision
	Member added to project /C_ST/Automated_Parking/20_System_Design/40_Implementation/50_Test/Tools/PDO/project.pj
	Revision 1.10 2014/05/19 16:21:20CEST ungvaryg 
	Add file version header
	Add new PDO 2.14 sdl_unit_enum_str_output keyword settting (default ON for SDL2.0, OFF for SDL 2.1)
	- Added comments -  ungvaryg [May 19, 2014 4:21:21 PM CEST]
	Change Package : 237861:1 http://mks-psad:7002/im/viewissue?selection=237861
*/

msg_format = "msvc";

extended_type_compat = enable;	// Extended type compatibility flag: typedef-level indirection differences get ignored when enabled. If disabled,
				// strict type checking is done: typedefs have to be completely equal to be compatible

output_format = "SDL2.0";	// Supported values: "ASAP2", "XmlDat1.0", "TextDat", "SDL2.0", "EcuExtract"
output_encoding = "UTF-8";	// Output encoding currently always UTF-8
//output_file_name = "testcfg.sdl";	// Output file name setting (only use in special cases)

sdl_padding = enable;		// Add dummy fields where alignment requires fill (workaround for SDL compiler issues)
				// The padding fields added to struct are called __pdo_dummy_padding__

sdl_header_alignment = 4;	// SDL Header alignment value, needs to be 1, 2, 4 or 8

sdl_unit_enum_str_output = enable;	// Output enumerations as hacked 'units' string for GBV TableView

values_output = "only";		// Values declaration comment handling. Possible values: "none", "only", "both"
				// Note: due to SDL2.0 format issues support for 'both' is limited (the file format
				// does not allow outputing alternative representations in some cases)

scaling_for_floats = enable;	// Special work-around for supressing scaling/offset for float types

//address_filter = 0x0-0xFFFFF, 0x804000-0x82FFFF;	// Coma seperated address range specifications for normal addresses (note: normally these should not be output!)
virtual_address_filter = 0x20010000-0x203FFFFF;	// Coma seperated address range specifications for virtual addresses

check_virtual_address_range = 0x20010000-0x203FFFFF;

//allow_filter = "oem_bmw", "all_cust"; 	// Coma seperated list of allow IDs to use
//identifier_filter = "BorderDistLeft", "Dynamic";	// Come seperated list of identifier filters to use
//file_filter = "common/rte/rte_type.h";		// List of unix-slashed file names to filter output for
view_cfg("AlgoVehCycle", 	207, 	"CycleId_207","FCT_VEH"	);
view_cfg("AlgoSenCycle",	208,	"CycleId_208","FCT_ENV"	);
view_cfg("Lcf_Veh",			23,		"CycleId_23","LCF_VEH_ENV_PVT"	);
view_cfg("Lcf_Sen",			90,		"CycleId_90","LCF_SEN_ENV_PVT","LCF_MEAS_ID_DEBUG_SEN"	);
view_cfg("HLA",				65,		"CycleId_65","HLA_ENV_PVT"	);
view_cfg("TimeSync",		100,	"CycleId_100"	);
view_cfg("Vdy",				21,		"CycleId_21"	);
view_cfg("Tsa",				66,		"CycleId_66","TSA_ENV_PRIVATE","TSA_CYCLE_ID_PVT"	);
view_cfg("Vdy_Internal",	2,		"vdy_cycle_id"	);
view_cfg("Sdc",				110,	"CycleId_110"	);


//* **********************************************************************
//  COMPANY:         $CompanyInfo: CONFIDENTIAL AND PROPRIETARY PROPERTY OF CONTINENTAL AG , A.D.C. GmbH  -  ALL RIGHTS RESERVED $
//  
//  PROJECT:         MFC30x_MCU
//  CPU:             MPC5675K
//  
//  PACKAGE:         $Source: ic_registers_bitmasks.h $ $Revision: 1.1 $
//  MKS Date:        $Date: 2021/12/13 17:25:57CET $
//  
//  RHAPSODY:        7.5.3
//  COMPONENT:       IC
//  CONFIGURATION:   DefaultConfig
//  MODEL ELEMENT:   ic_registers_bitmasks
//  MODULNAME:       ..\..\..\04_Engineering\01_Source_Code\Algo\ic\ic_registers_bitmasks.h
//  LOGIN:           uidt3974  
//  
//  
//  
//  AUTHOR:          $Author: Wang, David (Wangd3) $
//! CREATION DATE:   Thu, 19, Jul 2012  9:45 W. Europe Daylight Time PM 
//**************************************************************************** */

#ifndef ic_registers_bitmasks_H
#define ic_registers_bitmasks_H

/*## package Ic_Pkg */

/*## class TopLevel::ic_registers_bitmasks */


/*#[ ignore */

#ifdef __cplusplus
extern "C"
{
#endif

/*#]*/


/*## attribute IMGREG_cui16_BITSHIFT_DIGITAL_TEST_COL_GAIN */
#define IMGREG_cui16_BITSHIFT_DIGITAL_TEST_COL_GAIN (4u)

/*## attribute IMGREG_cui16_BITMASK_DIGITAL_TEST_COL_GAIN */
#define IMGREG_cui16_BITMASK_DIGITAL_TEST_COL_GAIN ((uint16)(3u << IMGREG_cui16_BITSHIFT_DIGITAL_TEST_COL_GAIN))

/*## attribute IMGREG_cui16_BITSHIFT_OPERATION_MODE_CTRL_RATIO_T2_T3 */
#define IMGREG_cui16_BITSHIFT_OPERATION_MODE_CTRL_RATIO_T2_T3 (4u)

/*## attribute IMGREG_cui16_BITMASK_OPERATION_MODE_CTRL_RATIO_T2_T3 */
#define IMGREG_cui16_BITMASK_OPERATION_MODE_CTRL_RATIO_T2_T3 ((uint16)(3u << IMGREG_cui16_BITSHIFT_OPERATION_MODE_CTRL_RATIO_T2_T3))

/*## attribute IMGREG_cui16_BITSHIFT_OPERATION_MODE_CTRL_RATIO_T1_T2 */
#define IMGREG_cui16_BITSHIFT_OPERATION_MODE_CTRL_RATIO_T1_T2 (2u)

/*## attribute IMGREG_cui16_BITMASK_OPERATION_MODE_CTRL_RATIO_T1_T2 */
#define IMGREG_cui16_BITMASK_OPERATION_MODE_CTRL_RATIO_T1_T2 ((uint16)(3u << IMGREG_cui16_BITSHIFT_OPERATION_MODE_CTRL_RATIO_T1_T2))

/*## attribute IMGREG_cui16_BITSHIFT_AE_CTRL_REG_DCG_MANUAL_SET */
#define IMGREG_cui16_BITSHIFT_AE_CTRL_REG_DCG_MANUAL_SET (2u)

/*## attribute IMGREG_cui16_BITMASK_AE_CTRL_REG_DCG_MANUAL_SET */
#define IMGREG_cui16_BITMASK_AE_CTRL_REG_DCG_MANUAL_SET ((uint16)(1u << IMGREG_cui16_BITSHIFT_AE_CTRL_REG_DCG_MANUAL_SET))

/*## attribute IMGREG_cui16_BITSHIFT_RESET_REGISTER_STREAM */
#define IMGREG_cui16_BITSHIFT_RESET_REGISTER_STREAM (2u)

/*## attribute IMGREG_cui16_BITMASK_RESET_REGISTER_STREAM */
#define IMGREG_cui16_BITMASK_RESET_REGISTER_STREAM ((uint16)(1u << IMGREG_cui16_BITSHIFT_RESET_REGISTER_STREAM))

/*## attribute IMGREG_cui16_BITSHIFT_RESET_REGISTER_RESTART */
#define IMGREG_cui16_BITSHIFT_RESET_REGISTER_RESTART (1u)

/*## attribute IMGREG_cui16_BITMASK_RESET_REGISTER_RESTART */
#define IMGREG_cui16_BITMASK_RESET_REGISTER_RESTART ((uint16)(1u << IMGREG_cui16_BITSHIFT_RESET_REGISTER_RESTART))

/*## attribute IMGREG_cui16_BITSHIFT_RESET_REGISTER_RESET */
#define IMGREG_cui16_BITSHIFT_RESET_REGISTER_RESET (0u)

/*## attribute IMGREG_cui16_BITMASK_RESET_REGISTER_RESET */
#define IMGREG_cui16_BITMASK_RESET_REGISTER_RESET ((uint16)(1u << IMGREG_cui16_BITSHIFT_RESET_REGISTER_RESET))

/*## attribute IMGREG_cui16_BITSHIFT_RESET_REGISTER_GPI_EN */
#define IMGREG_cui16_BITSHIFT_RESET_REGISTER_GPI_EN (8u)

/*## attribute IMGREG_cui16_BITMASK_RESET_REGISTER_GPI_EN */
#define IMGREG_cui16_BITMASK_RESET_REGISTER_GPI_EN ((uint16)(1u << IMGREG_cui16_BITSHIFT_RESET_REGISTER_GPI_EN))

/*## attribute IMGREG_cui16_BITSHIFT_RESET_REGISTER_FORCED_PLL_ON */
#define IMGREG_cui16_BITSHIFT_RESET_REGISTER_FORCED_PLL_ON (11u)

/*## attribute IMGREG_cui16_BITMASK_RESET_REGISTER_FORCED_PLL_ON */
#define IMGREG_cui16_BITMASK_RESET_REGISTER_FORCED_PLL_ON ((uint16)(1u << IMGREG_cui16_BITSHIFT_RESET_REGISTER_FORCED_PLL_ON))

/*## attribute IMGREG_cui16_BITSHIFT_RESET_REGISTER_REG_RD_EN */
#define IMGREG_cui16_BITSHIFT_RESET_REGISTER_REG_RD_EN (5u)

/*## attribute IMGREG_cui16_BITMASK_RESET_REGISTER_REG_RD_EN */
#define IMGREG_cui16_BITMASK_RESET_REGISTER_REG_RD_EN ((uint16)(1u << IMGREG_cui16_BITSHIFT_RESET_REGISTER_REG_RD_EN))

/*## attribute IMGREG_cui16_BITSHIFT_BIST_BUFFERS_STATUS1_TEST_FAILED */
#define IMGREG_cui16_BITSHIFT_BIST_BUFFERS_STATUS1_TEST_FAILED (0u)

/*## attribute IMGREG_cui16_BITMASK_BIST_BUFFERS_STATUS1_TEST_FAILED */
#define IMGREG_cui16_BITMASK_BIST_BUFFERS_STATUS1_TEST_FAILED ((uint16)(1u << IMGREG_cui16_BITSHIFT_BIST_BUFFERS_STATUS1_TEST_FAILED))

/*## attribute IMGREG_cui16_BITSHIFT_TEMPSENS_CTRL_TEMP_START_CONVERSION */
#define IMGREG_cui16_BITSHIFT_TEMPSENS_CTRL_TEMP_START_CONVERSION (4u)

/*## attribute IMGREG_cui16_BITMASK_TEMPSENS_CTRL_TEMP_START_CONVERSION */
#define IMGREG_cui16_BITMASK_TEMPSENS_CTRL_TEMP_START_CONVERSION ((uint16)(1u << IMGREG_cui16_BITSHIFT_TEMPSENS_CTRL_TEMP_START_CONVERSION))

/*## attribute IMGREG_cui16_BITSHIFT_TEMPSENS_CTRL_TEMPSENS_POWER_ON */
#define IMGREG_cui16_BITSHIFT_TEMPSENS_CTRL_TEMPSENS_POWER_ON (0u)

/*## attribute IMGREG_cui16_BITMASK_TEMPSENS_CTRL_TEMPSENS_POWER_ON */
#define IMGREG_cui16_BITMASK_TEMPSENS_CTRL_TEMPSENS_POWER_ON ((uint16)(1u << IMGREG_cui16_BITSHIFT_TEMPSENS_CTRL_TEMPSENS_POWER_ON))

/*## attribute IMGREG_cui16_BITSHIFT_DIGITAL_CTRL_ENABLE_DCG_COLCORR_RETRIGG */
#define IMGREG_cui16_BITSHIFT_DIGITAL_CTRL_ENABLE_DCG_COLCORR_RETRIGG (0)

/*## attribute IMGREG_cui16_BITMASK_DIGITAL_CTRL_ENABLE_DCG_COLCORR_RETRIGG */
#define IMGREG_cui16_BITMASK_DIGITAL_CTRL_ENABLE_DCG_COLCORR_RETRIGG ((uint16)(1 << IMGREG_cui16_BITSHIFT_DIGITAL_CTRL_ENABLE_DCG_COLCORR_RETRIGG))

/*## attribute IMGREG_cui16_BITSHIFT_DIGITAL_CTRL_ENABLE_AGS_COLCORR_RETRIGG */
#define IMGREG_cui16_BITSHIFT_DIGITAL_CTRL_ENABLE_AGS_COLCORR_RETRIGG (1)

/*## attribute IMGREG_cui16_BITMASK_DIGITAL_CTRL_ENABLE_AGS_COLCORR_RETRIGG */
#define IMGREG_cui16_BITMASK_DIGITAL_CTRL_ENABLE_AGS_COLCORR_RETRIGG ((uint16)(1 << IMGREG_cui16_BITSHIFT_DIGITAL_CTRL_ENABLE_AGS_COLCORR_RETRIGG))

/*## attribute IMGREG_cui16_BITSHIFT_DIGITAL_CTRL_COL_CORR_CORRECT_ALWAYS */
#define IMGREG_cui16_BITSHIFT_DIGITAL_CTRL_COL_CORR_CORRECT_ALWAYS (3)

/*## attribute IMGREG_cui16_BITMASK_DIGITAL_CTRL_COL_CORR_CORRECT_ALWAYS */
#define IMGREG_cui16_BITMASK_DIGITAL_CTRL_COL_CORR_CORRECT_ALWAYS ((uint16)(1 << IMGREG_cui16_BITSHIFT_DIGITAL_CTRL_COL_CORR_CORRECT_ALWAYS))

/***    User explicit entries    ***/



/*#[ ignore */

#ifdef __cplusplus
}
#endif

/*#]*/


/*## package Ic_Pkg */

/*## class TopLevel::ic_registers_bitmasks */

#endif
/*********************************************************************
	File Path: ..\..\..\04_Engineering\01_Source_Code\Algo\ic\ic_registers_bitmasks.h
*********************************************************************/

# Note:
# 1. Replace xxx with component name in lowercase and XXX with component name in uppercase.
# 2. Fill {variant}_ccflags with required compiler flags.
#    The value in this template is only for example.
# 3. Fill {variant}_cppdefines with required preprocessor defines.
#    The value in this template is only for example.
#    Each preprocessor define must be written as string and separated with ,
# 4. Fill {variant}_linkflags with required linker flags.
#    The value in this template is only for example.
# 5. Fill {variant}_libpaths with required library include paths.
#    The value in this template is only for example.
# 6. Fill {variant}_libs with required libraries in library include paths.
#    The value in this template is only for example.
# 7. Fill {variant}_lcffile with required linker files.
#    The value in this template is only for example.
# 8. When additional variant is created, add it in the variant_list. Otherwise, the
#    variant will not be created.
# ----------------------------------------------------------------------------------------

#-----------------------
# variant config
#-----------------------

execfile(File("#../../../02_Development_Tools/scons_tools/scons_common_config/common_config.scfg").abspath)

# create release variant
release_variant = "release"
release_ccflags = "-O3 --symdebug:skeletal -kv -kh --silicon_version=v210"
release_cppdefines = ["DEFINE1", "DEFINE2"]
release_linkflags = ""
release_libpaths = ["#../../../04_Build/algo/" + algo_name + "/ti_arp32/release/", evestarterware_dir + "lib/eve1/"]
release_libs = ["SIB_Harvester_release.lib", "eve_starterware_0_1.lib"]
release_lcffile = ["#../lcf_sim/lcf_evm_hil/vme/evm_hil_projects/arp32/src/linker.cmd"]

# create debug variant
debug_variant = "debug"
debug_ccflags = "-g -kv -kh --silicon_version=v210"
debug_cppdefines = ["DEFINE1", "DEFINE2"]
debug_linkflags = ""
debug_libpaths = ["#../../../04_Build/algo/" + algo_name + "/ti_arp32/debug/", evestarterware_dir + "lib/eve1/"]
debug_libs = ["SIB_Harvester_debug.lib", "eve_starterware_0_1.lib"]
debug_lcffile = ["#../lcf_sim/lcf_evm_hil/vme/evm_hil_projects/arp32/src/linker.cmd"]

# variable containing compiler flags, defines and linker flags for all variants
# when creating additional variant beside "release" and "debug", the variant must be added in this variable
variant_list = [
[release_variant, release_ccflags, release_cppdefines, release_linkflags, release_libpaths, release_libs, release_lcffile],
[debug_variant,   debug_ccflags,   debug_cppdefines,   debug_linkflags, debug_libpaths, debug_libs, debug_lcffile],
]

# out file name
outfile_name = "vcop_" + algo_name.upper() + ".out"

# ccs project name
ccs_project_name = algo_name.upper() + "_TI_Arp32_EvmHilWrapper"

# If ARP32 miniapp is used(default: False)
eve_hil_miniapp = False

# Use list Obj_Size_arp32 for adding more object files used for RAM/ROM calculation e.g Obj_Size_arp32 = ["abc.obj", "xyz.obj"]
# Obj_Size_arp32 = []
/*
	Configuration file for PDO-Tool
	Template for SDL2.0 (MTS) output
	
	Note: C and C++ comments are supported
	Each statement has to be terminated by a semicolon ';'
	$Revision: 1.1 $
	$Log: tool_cfg_sdl.cfg  $
	Revision 1.1 2021/12/13 18:43:08CET Wang, David (Wangd3) 
	Initial revision
	Member added to project /ADAS/Projects/MFC5xx/MFC5J3/06_Algorithm/DPU/04_Engineering/02_Development_Tools/pdo_tool/project.pj
	Revision 1.10 2014/05/19 16:21:20CEST ungvaryg 
	Add file version header
	Add new PDO 2.14 sdl_unit_enum_str_output keyword settting (default ON for SDL2.0, OFF for SDL 2.1)
	- Added comments -  ungvaryg [May 19, 2014 4:21:21 PM CEST]
	Change Package : 237861:1 http://mks-psad:7002/im/viewissue?selection=237861
*/

msg_format = "msvc";

extended_type_compat = enable;	// Extended type compatibility flag: typedef-level indirection differences get ignored when enabled. If disabled,
				// strict type checking is done: typedefs have to be completely equal to be compatible

output_format = "SDL2.0";	// Supported values: "ASAP2", "XmlDat1.0", "TextDat", "SDL2.0", "EcuExtract"
output_encoding = "UTF-8";	// Output encoding currently always UTF-8
//output_file_name = "testcfg.sdl";	// Output file name setting (only use in special cases)

sdl_padding = disable;		// Add dummy fields where alignment requires fill (workaround for SDL compiler issues)
				// The padding fields added to struct are called __pdo_dummy_padding__

sdl_header_alignment = 4;	// SDL Header alignment value, needs to be 1, 2, 4 or 8

sdl_unit_enum_str_output = enable;	// Output enumerations as hacked 'units' string for GBV TableView

values_output = "only";		// Values declaration comment handling. Possible values: "none", "only", "both"
				// Note: due to SDL2.0 format issues support for 'both' is limited (the file format
				// does not allow outputing alternative representations in some cases)

scaling_for_floats = enable;	// Special work-around for supressing scaling/offset for float types

//address_filter = 0x0-0xFFFFF, 0x804000-0x82FFFF;	// Coma seperated address range specifications for normal addresses (note: normally these should not be output!)
virtual_address_filter = 0x0-0x8FFFFF,0x902000-0xFFFFFFFF;	// Coma seperated address range specifications for virtual addresses

check_virtual_address_range = 0x0-0x8FFFFF,0x902000-0xFFFFFFFF;

//allow_filter = "oem_bmw", "all_cust"; 	// Coma seperated list of allow IDs to use
//identifier_filter = "BorderDistLeft", "Dynamic";	// Come seperated list of identifier filters to use
//file_filter = "common/rte/rte_type.h";		// List of unix-slashed file names to filter output for

view_cfg("RawDataCycle",  204, "CYCLEID_ALGO_RAW_DATA", "RSP1_ENV");
view_cfg("DataProcCycle", 205, "RSP2_ENV", "EM_ENV", "ALN_ENV");
view_cfg("AlgoRhcCycle",  206, "RHC_ENV");
view_cfg("AlgoVehCycle",  207, "vdy_cycle_id", "vdy_in_cycle_id", "FCT_VEH", "FCT_VEH_IN");
view_cfg("AlgoSenCycle",  208, "FCT_ENV");
view_cfg("SW_Every10ms",  209, "DEM_ENV", "RTA_ENV", "SYSEXT_ENV", "SW_MAIN_ENV", "FS_SAFESECTION_ENV", "FS_TASK_ENV", "FS_IOHWAB_ENV");
view_cfg("SW_Every20ms",  210, "CYCLEID_SW_02");
view_cfg("SW_RccCycle",   211, "RCC_ENV", "MTS_ENV", "NORM_ENV", "APL_ENV", "ICC_ENV", "RFCOM_ENV", "SCTL_ENV");
view_cfg("PeakListCycle", 212, "RSP1_PEAK_LIST_ENV", "RSP1_PEAKS");
view_cfg("SW_DSP",        213, "CYCLEID_DSP");
view_cfg("SW_EVERY_100MS", 214, "CYCLEID_Res_01");
view_cfg("SW_EVERY_10S",  215, "CYCLEID_Res_02");
view_cfg("SW_Res_03",     216, "CYCLEID_Res_03");

# Note:
# 1. Replace xxx with component name in lowercase.
# 2. Update each variable according to the existing 
#    source files (relative to 04_Engineering/01_Source_Code/xxx) and 
#    include paths (relative to the directory where 
#    SConstruct is located in, i.e. starting with "#").
# 3. Update project specific files with respect to project_path
# ----------------------------------------------------------------------------------------

# config file containing algo source file list

Import("project_name")

engineering_path = "#../../../"
hla_algo_sources_project_specific = ''
hla_wrapper_sources = ''
hla_wrapper_sources_project_specific = ''
hla_algo_include_paths_project_specific = ''
hla_algo_common_include_paths_project_specific = ''

###################################################
# LIB SOURCE FILES
###################################################
# Project independent source files
hla_algo_sources = """
            function/hlaf.c
            function/hlaf_decision.c
            function/hlaf_decision_blockage.c
            function/hlaf_decision_environment.c
            function/hlaf_decision_keepoff.c
            function/hlaf_matrix.c
            function/hlaf_matrixgfa.c
            frame/hla_main.c
            frame/hla_outputs.c
            frame/hla_input_checks.c
            frame/hla_output_checks.c
            hla_errorhandling.c
            hla_utils.c
"""
# algo source files for the project "project_name"
#relative path of the project specific files with respect to "04_Engineering/00_Projects/<project_name>/<component_name>"
hla_algo_sources_project_specific = """
    sw_support/hla_cpar_init.c
    parameters/HLA_DecisionParameters.c
    parameters/HLA_MatrixParameters.c
 """

# Now the additional ones that are really project specific
if project_name == 'MFC431':
    #relative path of the project specific files with respect to "04_Engineering/00_Projects/<project_name>/<component_name>"
    hla_algo_sources_project_specific += """
     """

# Concatenate algo source files lists     
project_path                           = "../../00_Projects/" + project_name + "/hla/"
hla_algo_sources_project_specific_list = [project_path + rel_path for rel_path in hla_algo_sources_project_specific.split()]
hla_algo_sources                       = '\n'.join(hla_algo_sources.split() + hla_algo_sources_project_specific_list)


###################################################
# PDO TOOL SOURCES FOR SDL FILE GENERATION
###################################################
hla_algo_pdo_sources = """
    hla_pdo_tags_file_copy.cpp
"""


###################################################
# HELPER SOURCES FOR SIMULATION/EVM HIL
###################################################
hla_helper_sources = """
"""

# Now the additional ones that are really project specific
if 'MFC5' in project_name:
    hla_helper_sources += """
    ../cml/matrix/cml_mat.c
    ../cml/misc/cml_misc.c
    ../cml/trigo/cml_trigo.c
    """  
###################################################
# LIB INCLUDE PATHS
###################################################
# relative path with respect to "04_Engineering/01_Source_Code/<component_name>"

hla_algo_include_paths = """
    .
    function
    frame
"""

# algo include paths for the project "project_name"
#relative path of the project specific files with respect to "04_Engineering/00_Projects/<project_name>/<component_name>"
hla_algo_include_paths_project_specific = """
    .
    parameters
    sw_support
"""

# Now the additional ones that are really project specific
if project_name == 'MFC431':
    #relative path of the project specific files with respect to "04_Engineering/00_Projects/<project_name>/<component_name>"
    hla_algo_include_paths_project_specific += """
    """    

project_path                                 = engineering_path + "00_Projects/" + project_name + "/hla/"
source_path                                  = engineering_path + "01_Source_Code/hla/"
hla_algo_include_paths_project_specific_list = [project_path + rel_path for rel_path in hla_algo_include_paths_project_specific.split()]
hla_algo_include_paths_list                  = [source_path + rel_path for rel_path in hla_algo_include_paths.split()]
hla_algo_include_paths                       = '\n'.join(hla_algo_include_paths_list + hla_algo_include_paths_project_specific_list)

###################################################
# COMMON INCLUDE PATHS
###################################################
#relative path of the project specific files with respect to "04_Engineering/01_Source_Code/"
hla_algo_common_include_paths = """
    common/GLOB
    common/GLOB/GLOB_DPU
    common/MTSI
    common/RTA
    cml
    RTA
"""

# algo common include paths for the project "project_name"
#relative path of the project specific files with respect to "04_Engineering/00_Projects/<project_name>/"
hla_algo_common_include_paths_project_specific = """
    common/DGM
    common/GLOB
    common/RTE_VH/algo
    common/RTE_VH/include
    ga
"""
    
# Now the additional ones that are really project specific
if project_name == 'MFC431':
    #relative path of the project specific files with respect to "04_Engineering/00_Projects/<project_name>/"
    hla_algo_common_include_paths_project_specific += """
    """

project_path                                        = engineering_path + "00_Projects/" + project_name + "/"
include_path                                        = engineering_path + "01_Source_Code/"
hla_algo_common_include_paths_project_specific_list = [project_path + rel_path for rel_path in hla_algo_common_include_paths_project_specific.split()]
hla_algo_common_include_paths_list                  = [include_path + rel_path for rel_path in hla_algo_common_include_paths.split()]
hla_algo_common_include_paths                       = '\n'.join(hla_algo_common_include_paths_list + hla_algo_common_include_paths_project_specific_list)

# if project_name.upper().startswith('MFC5'):hla_algo_common_include_paths = '\n'.join(hla_algo_common_include_paths_list + algo_common_include_paths_list) 

###################################################
# QAC EXCLUDE PATHS
###################################################
# exclude paths for qac
# all files in this path will not (!) be analysed by QAC
qac_exclude_paths = """
    #../../../01_Source_Code/common
    #../../../01_Source_Code/common/rte
    #../../../01_Source_Code/cct
    #../../../01_Source_Code/cml
    #../../../02_Development_Tools
    #../../../03_Workspace
    #../../../04_Build
"""

###################################################
# POLYSPACE
###################################################
# algo polyspace addtional source files
hla_algo_ps_additional_sources = """

"""

# algo polyspace additional include paths
hla_algo_ps_additional_include_paths = """

"""
#ifndef RTE_SMC_OSAPPLICATION_C3_H
#define RTE_SMC_OSAPPLICATION_C3_H
/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \version 6.6.3
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2021 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

/*
 *
 *
 * This file has been automatically generated by
 * EB tresos AutoCore Rte Generator Version 6.6.3
 * on Tue Feb 28 15:54:30 CST 2023. !!!IGNORE-LINE!!!
 */

/*
 * \addtogroup Rte Runtime Environment
 * @{
 */

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* ==================[Definition of variables with external linkage]========== */
#define RTE_START_SEC_SHARED_OSAPPLICATION_C3_VAR_16
#include <Rte_MemMap.h>
extern VAR(uint16, RTE_VAR) Rte_Smc_Rte_HlaAdapter_Prototype_RP_MtsiAdapter_MeasFreezeData_MeasFreezeData_0;
extern VAR(uint16, RTE_VAR) Rte_Smc_Rte_HlaAdapter_Prototype_RP_UpdateTaskCycle_UpdateTaskCycle_0;
extern VAR(uint16, RTE_VAR) Rte_Smc_Rte_RtaAdapter_C0_RP_MtsiAdapter_UpdateTaskCycle_UpdateTaskCycle_0;
extern VAR(uint16, RTE_VAR) Rte_Smc_Rte_VdyAdapter_Prototype_RP_MtsiAdapter_MeasFreezeData_MeasFreezeData_0;
extern VAR(uint16, RTE_VAR) Rte_Smc_Rte_VdyAdapter_Prototype_RP_MtsiAdapter_UpdateTaskCycle_UpdateTaskCycle_0;
extern VAR(uint16, RTE_VAR) Rte_Smc_Rte_FctAdapter_Prototype_RP_MtsiAdapter_MeasFreezeData_MeasFreezeData_0;
extern VAR(uint16, RTE_VAR) Rte_Smc_Rte_FctAdapter_Prototype_RP_UpdateTaskCycle_UpdateTaskCycle_0;
extern VAR(uint16, RTE_VAR) Rte_Smc_Rte_RtaAdapter_C1_RP_MtsiAdapter_UpdateTaskCycle_UpdateTaskCycle_0;
extern VAR(uint16, RTE_VAR) Rte_Smc_Rte_RtaAdapter_C2_RP_MtsiAdapter_UpdateTaskCycle_UpdateTaskCycle_0;
#define RTE_STOP_SEC_SHARED_OSAPPLICATION_C3_VAR_16
#include <Rte_MemMap.h>
#define RTE_START_SEC_OSAPPLICATION_C3_VAR_16
#include <Rte_MemMap.h>
extern VAR(uint16, RTE_VAR) Rte_Smc_Rte_LcfAdapter_Prototype_RP_MtsiAdapter_MeasFreezeData_MeasFreezeData_0;
extern VAR(uint16, RTE_VAR) Rte_Smc_Rte_LcfAdapter_Prototype_RP_MtsiAdapter_UpdateTaskCycle_UpdateTaskCycle_0;
extern VAR(uint16, RTE_VAR) Rte_Smc_Rte_RtaAdapter_C3_RP_MtsiAdapter_UpdateTaskCycle_UpdateTaskCycle_0;
#define RTE_STOP_SEC_OSAPPLICATION_C3_VAR_16
#include <Rte_MemMap.h>
#define RTE_START_SEC_SHARED_OSAPPLICATION_C3_VAR_32
#include <Rte_MemMap.h>
extern VAR(LCF_SenGenericOutputs_t, RTE_VAR) Rte_Smc_Rte_Fcu_Prototype_RP_LcfAdapter_LcfSenGenericOutputData_LcfSenGenericOutputData;
extern VAR(LCF_VehGenericOutputs_t, RTE_VAR) Rte_Smc_Rte_Fcu_Prototype_RP_LcfAdapter_LcfVehGenericOutputData_LcfVehGenricOutputData;
#define RTE_STOP_SEC_SHARED_OSAPPLICATION_C3_VAR_32
#include <Rte_MemMap.h>
#define RTE_START_SEC_SHARED_OSAPPLICATION_C3_VAR_8
#include <Rte_MemMap.h>
extern VAR(uint8, RTE_VAR) Rte_Smc_SchM_State_OsApplication_C3;
extern VAR(uint8, RTE_VAR) Rte_Smc_Rte_State_OsApplication_C3;
extern volatile VAR(uint8, RTE_VAR) Rte_Smc_Rte_ModeReceiveQueue_B7A976E740C73DF0839BD6CE784C8A55_head;
extern volatile VAR(uint8, RTE_VAR) Rte_Smc_Rte_EcuM_1_Core_3__EcuM_MasterCoreSyncPort_head;
extern VAR(uint8, RTE_VAR) Rte_Smc_Rte_EcuM_1_Core_3__EcuM_MasterCoreSyncPort_ldcReader;
extern VAR(Std_ReturnType, RTE_VAR) Rte_Smc_Rte_HlaAdapter_Prototype_RP_MtsiAdapter_MeasFreezeData_MeasFreezeData_1;
extern VAR(Std_ReturnType, RTE_VAR) Rte_Smc_Rte_VdyAdapter_Prototype_RP_MtsiAdapter_MeasFreezeData_MeasFreezeData_1;
extern VAR(Std_ReturnType, RTE_VAR) Rte_Smc_Rte_FctAdapter_Prototype_RP_MtsiAdapter_MeasFreezeData_MeasFreezeData_1;
#define RTE_STOP_SEC_SHARED_OSAPPLICATION_C3_VAR_8
#include <Rte_MemMap.h>
#define RTE_START_SEC_OSAPPLICATION_C3_VAR_8
#include <Rte_MemMap.h>
extern VAR(Std_ReturnType, RTE_VAR) Rte_Smc_Rte_LcfAdapter_Prototype_RP_MtsiAdapter_MeasFreezeData_MeasFreezeData_1;
#define RTE_STOP_SEC_OSAPPLICATION_C3_VAR_8
#include <Rte_MemMap.h>
#define RTE_START_SEC_SHARED_OSAPPLICATION_C3_VAR_8
#include <Rte_MemMap.h>
extern volatile VAR(uint8, RTE_VAR) Rte_Smc_Rte_MtsiAdapter_Prototype_ppMeasFreezeData_MeasFreezeData_head;
extern volatile VAR(uint8, RTE_VAR) Rte_Smc_Rte_MtsiAdapter_Prototype_ppUpdateTaskCycle_UpdateTaskCycle_head;
#define RTE_STOP_SEC_SHARED_OSAPPLICATION_C3_VAR_8
#include <Rte_MemMap.h>

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif
/** @} doxygen end group definition  */
/* ==================[end of file]============================================ */

// COMPANY:   Continental Automotive
// COMPONENT: IPCBASE
// VERSION:   $Revision: 1.1 $

/// generated part of the RTE Wrapper for IPC.
///
/// @file

#ifndef IPC_IOCWRAPPERGEN_H
#define IPC_IOCWRAPPERGEN_H

#include <Std_Types.h>
#include <public/Ioc_basic_types.h>
#include <ipc_sync_cfg.h>
#include <ipc_sync_iuc_cfg.h>

/// Read function for typecasting inside the Mapping Table
typedef Std_ReturnType (*IocClusterReadFunction)(void* const p_Data);

/// Write function for typecasting inside the Mapping Table
typedef Std_ReturnType (*IocClusterWriteFunction)(const void* const p_Data);

/// Mapping Table entry
typedef struct tag_IpcRteMappingTableEntry
{
  IPC_CLUSTER_ID clusterId;                ///< ID of the cluster
  IocClusterReadFunction RteClusterRead;   ///< Function pointer to the cluster specific read function
  IocClusterWriteFunction RteClusterWrite; ///< Function pointer to the cluster specific write function
} IpcRteMappingTableEntry;

/// IPC IOC Mapping Table for assigning IOC read and write functions to cluster ids.
extern const IpcRteMappingTableEntry IpcRteMappingTable[IPC_E_NUM_CLUSTERS];

#if(CFG_ENABLED(IPC_IOC_IS_RTE_UPDATED_FLAG))

/// Write function for typecasting inside the Mapping Table
typedef boolean (*IpcRteIsUpdatedFunction)(void);

/// Mapping Table entry
typedef struct tag_IpcRteIsUpdatedMappingTableEntry
{
  IPC_CLUSTER_ID clusterId;                   ///< ID of the cluster
  IpcRteIsUpdatedFunction rteIsUpdatedFunc;   ///< Function pointer to the cluster specific function to if the specific cluster is updated/written
} IpcRteIsUpdatedMappingTableEntry;

/// Mapping table for all the Tx IPC clusters: Map to corresponding RTE function which provides status if the cluster was updated after last read
extern const IpcRteIsUpdatedMappingTableEntry IpcRteIsUpdated_funcMappingTable[IPC_NO_IUC_SEND_CLUSTERS];
#endif

/*!<codegen_start:IPC_IOC_WRAPPER_FUNCTIONS_H>*/
/*!<codegen_end:IPC_IOC_WRAPPER_FUNCTIONS_H>*/

#endif //IPC_IOCWRAPPERGEN_H


/*
	Configuration file for PDO-Tool
	Template for EcuExtract (AutoSar) output
	
	Note: C and C++ comments are supported
	Each statement has to be terminated by a semicolon ';'
*/

msg_format = "msvc";

extended_type_compat = enable;	// Extended type compatibility flag: typedef-level indirection differences get ignored when enabled. If disabled,
				// strict type checking is done: typedefs have to be completely equal to be compatible

output_format = "EcuExtract";	// Supported values: "ASAP2", "XmlDat1.0", "TextDat", "SDL2.0", "EcuExtract"
output_encoding = "UTF-8";	// Output encoding currently always UTF-8
//output_file_name = "testcfg.ecuextract";	// Output file name setting (only use in special cases)

values_output = "only";		// Values declaration comment handling. Possible values: "none", "only", "both"
				// Note: due to SDL2.0 format issues support for 'both' is limited (the file format
				// does not allow outputing alternative representations in some cases)

scaling_for_floats = enable;	// Special work-around for supressing scaling/offset for float types

//address_filter = 0x0-0xFFFFF, 0x804000-0x82FFFF;	// Coma seperated address range specifications for normal addresses (note: normally these should not be output!)
//virtual_address_filter = 0x0-0x8FFFFF,0x902000-0xFFFFFFFF;	// Coma seperated address range specifications for virtual addresses

//allow_filter = "oem_bmw", "all_cust"; 	// Coma seperated list of allow IDs to use
//identifier_filter = "BorderDistLeft", "Dynamic";	// Come seperated list of identifier filters to use

//view_cfg("ARSMainCycle", 60, "default", "cycleid_60");	// View configuration, in the form view_cfg(name, number, coma seperated cycle-ids)
//view_cfg("ARS20cycle", 20, "vdy_cycle_id");

ecuextract_max_short_name_len = 32;	// The maximum short name length allowed in the output

ecuextract_use_raw_ranges = on;		// Use raw ranges of types for generation of EcuExtract limits, or use comments/enumeration information
					// Note: when wishing binary compatibility with the structs, this should be set to 'on'. If one wishes
					// most efficient data representation, with no need of binary compatibility, then set to 'off'.

ecuextract_process_unions = off;	// AutoSar can not describe unions. This switch controls if unions shall be represented by record types.

ecuextract_process_pointers = on;	// AutoSar can not describe pointers. This switch controls if pointers shall be represented by simple
					// corresponding integer types, when set to on. If binary image compatibility is desired set to 'on'.

ecuextract_process_bit_fields = off;	// Autosar can not describe bit-fields. This switch controls if bit-fields shall be processed at all
					// (on) or errors for them shall be generated (off)

ecuextract_process_tagged_obj = off;	// Process tagged objects (tag names of structs/unions/enums) for output

ecuextract_force_typedefs = on;		// Force creation of typedefs along type chains. If set to off only types that are different on
					// the autosar level are created (i.e.: eqvivalence of types is checked, on spurious types are
					// discarded & type trees simplified). If set to on the objects explicitly named by a typedef
					// are processed each with seperate autosar objects.

ecuextract_allow_leading_underscore = off;	// Some AutoSar implementations do not accept leading underscores in short names. If set to 'off'
						// then leading underscores are chopped off.

ecuextract_root_package_path = "TestPackage";	// Name of the top level package. Note: currently no tests done for validity, please use valid identifiers!

ecuextract_root_package_desc = "Test package generated by PDO";	// Description string of top level package. Note: currently no encoding tests done for validity, do not use any special XML chars!

//allow_filter = "oem_bmw", "all_cust"; 	// Coma seperated list of allow IDs to use
//identifier_filter = "BorderDistLeft", "Dynamic";	// Come seperated list of identifier filters to use
//file_filter = "common/rte/rte_type.h";		// List of unix-slashed file names to filter output for


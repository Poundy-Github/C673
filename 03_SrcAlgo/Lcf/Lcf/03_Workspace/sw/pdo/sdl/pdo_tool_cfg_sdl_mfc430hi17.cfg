/*
	Configuration file for PDO-Tool
	Template for SDL2.0 (MTS) output
	
	Note: C and C++ comments are supported
	Each statement has to be terminated by a semicolon ';'
*/

output_format = "SDL2.0";	// Supported values: "ASAP2", "XmlDat1.0", "TextDat", "SDL2.0", "EcuExtract"
output_encoding = "UTF-8";	// Output encoding currently always UTF-8
//output_file_name = "testcfg.sdl";	// Output file name setting (only use in special cases)

sdl_padding = disable;  // Add dummy fields where alignment requires fill (workaround for SDL compiler issues)
                        // The padding fields added to struct are called __pdo_dummy_padding__

sdl_header_alignment = 4;	// SDL Header alignment value, needs to be 1, 2, 4 or 8

values_output = "only";    // Values declaration comment handling. Possible values: "none", "only", "both"
                           // Note: due to SDL2.0 format issues support for 'both' is limited (the file format
                           // does not allow outputing alternative representations in some cases)

//address_filter = 0x0-0xFFFFF, 0x804000-0x82FFFF;	// Coma seperated address range specifications for normal addresses (note: normally these should not be output!)
//virtual_address_filter = 0x0-0x8FFFFF,0x902000-0xFFFFFFFF;	// Coma seperated address range specifications for virtual addresses

//allow_filter = "oem_bmw", "all_cust"; 	// Coma seperated list of allow IDs to use
//identifier_filter = "BorderDistLeft", "Dynamic";	// Come seperated list of identifier filters to use

// View configuration, in the form view_cfg(name, number, coma seperated cycle-ids)

view_cfg("VDY",   20, "vdy_cycle_id");
view_cfg("FCTVehicle", 21, "FCT_VEH");
//view_cfg("FCT",   22, "FCT_ENV");
view_cfg("ALDWVEH",   22, "ALDW_VEH");
view_cfg("LCF_VEH",   23, "LCF_VEH_ENV");
view_cfg("LD",    49, "LD_ENV");
view_cfg("SR_B",    		83, "SR_ENV_B"); 
//view_cfg("SR_A",    		82, "SR_ENV"); 
view_cfg("EM",    70, "EM_ENV");

view_cfg("CIPP",  61, "CIPP_ENV");
view_cfg("CB",    62, "CB_ENV");
view_cfg("ECM",   63, "ECM_ENV");
view_cfg("IC",    64, "IC_ENV");
view_cfg("HLA",   65, "HLA_ENV");
view_cfg("TSA",		66, "TSA_ENV");



view_cfg("PV",    71, "PV_ENV");
view_cfg("FCTSensor", 72, "FCT_ENV");

view_cfg("GS",    74, "GS_ENV");
view_cfg("FAMO",    87, "FAMO_ENV");
view_cfg("ACAL",    88, "ACAL_ENV");
view_cfg("LCF_SEN",    90, "LCF_SEN_ENV");
view_cfg("RUM",    92, "RUM_ENV");
view_cfg("LSD",    91, "LSD_ENV");
view_cfg("UDW",    93, "UDW_ENV");

view_cfg("FSD",  102, "FSD_ENV");
view_cfg("EMO",  104, "EMO_ENV", "FTRC_ENV");
view_cfg("GEN",  105, "GEN_ENV");

view_cfg("PC",   108, "PC_ENV");
view_cfg("TLR", 119, "TLR_ENV");
view_cfg("IPC",  132, "IPC_ENV", "ALDW_VEH_IN", "ECM_ENV_IPC", "FCT_VEH_IN", "FLSP_ENV", "HMI_ENV", "vdy_in_cycle_id", "SW_M3_0_IPC", "MEAS_CYCID_SYSDATA_MCU", "MEAS_CYCID_SYSDATA_SOC", "MEAS_CYCID_NVM_CONFIG_ECUSW");
view_cfg("IA",  141, "SW_IA_ENV");

view_cfg("SW_CA8_0",  140, "SW_CA8_0_ENV");
view_cfg("SW_M3_0",   141, "SW_M3_0_ENV");
view_cfg("SW_M3_1",   142, "SW_M3_1_ENV");
view_cfg("SW_DSP_0",  143, "SW_DSP_0_ENV");
view_cfg("SW_CA8_1",  145, "SW_CA8_1_ENV");
view_cfg("SW_DSP_1",  149, "SW_DSP_1_ENV");
view_cfg("SW_EVE_0",  135, "SW_EVE_0_ENV");
view_cfg("SW_EVE_1",  137, "SW_EVE_1_ENV");

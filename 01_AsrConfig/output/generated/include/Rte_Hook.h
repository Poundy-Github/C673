#ifndef RTE_HOOK_H
#define RTE_HOOK_H
/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \version 6.6.3
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2021 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

/*
 * This file contains Rte hook declarations
 *
 * This file has been automatically generated by
 * EB tresos AutoCore Rte Generator Version 6.6.3
 * on Mon Jul 10 12:27:54 CST 2023. !!!IGNORE-LINE!!!
 */

/*
 * \addtogroup Rte Runtime Environment
 * @{
 */

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* ==================[Includes]=============================================== */
#include <Rte_Cfg.h>
#include <Os.h>
#include <Rte_Type.h>
#include <Rte_AebDs_Hook.h>
#include <Rte_BswM_OsApplication_C0_Hook.h>
#include <Rte_EvAdc_Hook.h>
#include <Rte_Cdm_Hook.h>
#include <Rte_ComM_Hook.h>
#include <Rte_Comco_Hook.h>
#include <Rte_Cpr_Hook.h>
#include <Rte_Cps_Hook.h>
#include <Rte_CtCdSPI_Hook.h>
#include <Rte_Dcm_Hook.h>
#include <Rte_Dem_Hook.h>
#include <Rte_DevelopmentErrorTracer_Hook.h>
#include <Rte_Dsm_Hook.h>
#include <Rte_EcuM_Hook.h>
#include <Rte_Esh_Hook.h>
#include <Rte_Esm_Hook.h>
#include <Rte_FSMonitor_Hook.h>
#include <Rte_Fcu_Hook.h>
#include <Rte_FiM_Hook.h>
#include <Rte_HeartbeatDet_Hook.h>
#include <Rte_HlaAdapter_Hook.h>
#include <Rte_Logging_Hook.h>
#include <Rte_Med_Hook.h>
#include <Rte_ModM_Hook.h>
#include <Rte_NvM_Hook.h>
#include <Rte_Qsm_Hook.h>
#include <Rte_RtaAdapter_C0_Hook.h>
#include <Rte_Sdc_Hook.h>
#include <Rte_Sed_Hook.h>
#include <Rte_SpiSync_Hook.h>
#include <Rte_StbM_Hook.h>
#include <Rte_Time_Hook.h>
#include <Rte_TsaAdapter_Hook.h>
#include <Rte_VdyAdapter_Hook.h>
#include <Rte_VoltMonI_Hook.h>
#include <Rte_WdgM_CORE_0_Hook.h>
#include <SchM_XcpHook.h>
#include <SchM_Wdg_17_ScuHook.h>
#include <SchM_WdgMHook.h>
#include <SchM_WdgIfHook.h>
#include <SchM_StbMHook.h>
#include <SchM_SpiHook.h>
#include <SchM_SmuHook.h>
#include <SchM_Pwm_17_GtmCcu6Hook.h>
#include <SchM_PortHook.h>
#include <SchM_PduRHook.h>
#include <SchM_PbcfgMHook.h>
#include <SchM_NvMHook.h>
#include <SchM_NmHook.h>
#include <SchM_MemIfHook.h>
#include <SchM_McuHook.h>
#include <SchM_McalLibHook.h>
#include <SchM_McalExtHook.h>
#include <SchM_Icu_17_TimerIpHook.h>
#include <SchM_I2cHook.h>
#include <SchM_Fls_17_DmuHook.h>
#include <SchM_FiMHook.h>
#include <SchM_FeeHook.h>
#include <SchM_EcuMHook.h>
#include <SchM_EcuCHook.h>
#include <SchM_DmaHook.h>
#include <SchM_DioHook.h>
#include <SchM_DetHook.h>
#include <SchM_DemHook.h>
#include <SchM_DcmHook.h>
#include <SchM_CrcHook.h>
#include <SchM_ComHook.h>
#include <SchM_ComMHook.h>
#include <SchM_Can_17_McmCanHook.h>
#include <SchM_CanTpHook.h>
#include <SchM_CanTSynHook.h>
#include <SchM_CanSMHook.h>
#include <SchM_CanNmHook.h>
#include <SchM_CanIfHook.h>
#include <SchM_BswM_1_OsApplication_C0Hook.h>
#include <SchM_BswMHook.h>
#include <SchM_BaseHook.h>
#include <SchM_AtomicsHook.h>
#include <SchM_AdcHook.h>
#include <Rte_BswM_OsApplication_C1_Hook.h>
#include <Rte_Esm_Core1_Hook.h>
#include <Rte_FctAdapter_Hook.h>
#include <Rte_RtaAdapter_C1_Hook.h>
#include <Rte_WdgM_CORE_1_Hook.h>
#include <SchM_WdgM_1_CORE_1Hook.h>
#include <SchM_EcuM_1_Core_1Hook.h>
#include <SchM_BswM_1_OsApplication_C1Hook.h>
#include <Rte_BswM_OsApplication_C2_Hook.h>
#include <Rte_Esm_Core2_Hook.h>
#include <Rte_RtaAdapter_C2_Hook.h>
#include <SchM_EcuM_1_Core_2Hook.h>
#include <SchM_BswM_1_OsApplication_C2Hook.h>
#include <Rte_BswM_OsApplication_C3_Hook.h>
#include <Rte_Esm_Core3_Hook.h>
#include <Rte_LcfAdapter_Hook.h>
#include <Rte_MtsiAdapter_Hook.h>
#include <Rte_RtaAdapter_C3_Hook.h>
#include <SchM_EcuM_1_Core_3Hook.h>
#include <SchM_BswM_1_OsApplication_C3Hook.h>

/* ==================[Macros]================================================= */
#ifndef RTE_VFB_TRACE
#define RTE_VFB_TRACE FALSE
#endif
#if (defined(Rte_ComHook_SGEspVehSpd_378R_SigRx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SGEspVehSpd_378R_SigRx
#endif
#if defined(Rte_ComHook_SGEspVehSpd_378R_SigRx)
#undef Rte_ComHook_SGEspVehSpd_378R_SigRx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SGEspVehSpd_378R_SigRx (P2VAR(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SGEspVehSpd_378R_SigRx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SGEspVehSpdVld_378R_SigRx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SGEspVehSpdVld_378R_SigRx
#endif
#if defined(Rte_ComHook_SGEspVehSpdVld_378R_SigRx)
#undef Rte_ComHook_SGEspVehSpdVld_378R_SigRx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SGEspVehSpdVld_378R_SigRx (P2VAR(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SGEspVehSpdVld_378R_SigRx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SGBcmPwrStsFb_648R_SigRx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SGBcmPwrStsFb_648R_SigRx
#endif
#if defined(Rte_ComHook_SGBcmPwrStsFb_648R_SigRx)
#undef Rte_ComHook_SGBcmPwrStsFb_648R_SigRx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SGBcmPwrStsFb_648R_SigRx (P2VAR(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SGBcmPwrStsFb_648R_SigRx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SGCdcTotMilg_722R_SigRx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SGCdcTotMilg_722R_SigRx
#endif
#if defined(Rte_ComHook_SGCdcTotMilg_722R_SigRx)
#undef Rte_ComHook_SGCdcTotMilg_722R_SigRx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SGCdcTotMilg_722R_SigRx (P2VAR(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SGCdcTotMilg_722R_SigRx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SGESP_YawRate_632R_SigRx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SGESP_YawRate_632R_SigRx
#endif
#if defined(Rte_ComHook_SGESP_YawRate_632R_SigRx)
#undef Rte_ComHook_SGESP_YawRate_632R_SigRx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SGESP_YawRate_632R_SigRx (P2VAR(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SGESP_YawRate_632R_SigRx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SGEpsSasSteerAg_384R_SigRx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SGEpsSasSteerAg_384R_SigRx
#endif
#if defined(Rte_ComHook_SGEpsSasSteerAg_384R_SigRx)
#undef Rte_ComHook_SGEpsSasSteerAg_384R_SigRx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SGEpsSasSteerAg_384R_SigRx (P2VAR(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SGEpsSasSteerAg_384R_SigRx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SGTboxLocalTiDate_759R_SigRx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SGTboxLocalTiDate_759R_SigRx
#endif
#if defined(Rte_ComHook_SGTboxLocalTiDate_759R_SigRx)
#undef Rte_ComHook_SGTboxLocalTiDate_759R_SigRx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SGTboxLocalTiDate_759R_SigRx (P2VAR(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SGTboxLocalTiDate_759R_SigRx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SGTboxLocalTiHr_759R_SigRx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SGTboxLocalTiHr_759R_SigRx
#endif
#if defined(Rte_ComHook_SGTboxLocalTiHr_759R_SigRx)
#undef Rte_ComHook_SGTboxLocalTiHr_759R_SigRx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SGTboxLocalTiHr_759R_SigRx (P2VAR(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SGTboxLocalTiHr_759R_SigRx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SGTboxLocalTiMins_759R_SigRx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SGTboxLocalTiMins_759R_SigRx
#endif
#if defined(Rte_ComHook_SGTboxLocalTiMins_759R_SigRx)
#undef Rte_ComHook_SGTboxLocalTiMins_759R_SigRx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SGTboxLocalTiMins_759R_SigRx (P2VAR(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SGTboxLocalTiMins_759R_SigRx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SGTboxLocalTiMth_759R_SigRx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SGTboxLocalTiMth_759R_SigRx
#endif
#if defined(Rte_ComHook_SGTboxLocalTiMth_759R_SigRx)
#undef Rte_ComHook_SGTboxLocalTiMth_759R_SigRx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SGTboxLocalTiMth_759R_SigRx (P2VAR(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SGTboxLocalTiMth_759R_SigRx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SGTboxLocalTiSec_759R_SigRx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SGTboxLocalTiSec_759R_SigRx
#endif
#if defined(Rte_ComHook_SGTboxLocalTiSec_759R_SigRx)
#undef Rte_ComHook_SGTboxLocalTiSec_759R_SigRx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SGTboxLocalTiSec_759R_SigRx (P2VAR(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SGTboxLocalTiSec_759R_SigRx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SGTboxLocalTiYear_759R_SigRx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SGTboxLocalTiYear_759R_SigRx
#endif
#if defined(Rte_ComHook_SGTboxLocalTiYear_759R_SigRx)
#undef Rte_ComHook_SGTboxLocalTiYear_759R_SigRx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SGTboxLocalTiYear_759R_SigRx (P2VAR(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SGTboxLocalTiYear_759R_SigRx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SGVcuGearPosn_353R_SigRx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SGVcuGearPosn_353R_SigRx
#endif
#if defined(Rte_ComHook_SGVcuGearPosn_353R_SigRx)
#undef Rte_ComHook_SGVcuGearPosn_353R_SigRx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SGVcuGearPosn_353R_SigRx (P2VAR(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SGVcuGearPosn_353R_SigRx(data) ((void)0)
#endif
#if (defined(Rte_Task_Activate)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_Activate
#endif
#if defined(Rte_Task_Activate)
#undef Rte_Task_Activate
extern FUNC(void, RTE_APPL_CODE) Rte_Task_Activate (TaskType task);
#else
#define Rte_Task_Activate(task) ((void)0)
#endif
#if (defined(Rte_Task_Dispatch)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_Dispatch
#endif
#if defined(Rte_Task_Dispatch)
#undef Rte_Task_Dispatch
extern FUNC(void, RTE_APPL_CODE) Rte_Task_Dispatch (TaskType task);
#else
#define Rte_Task_Dispatch(task) ((void)0)
#endif
#if (defined(Rte_Task_SetEvent)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_SetEvent
#endif
#if defined(Rte_Task_SetEvent)
#undef Rte_Task_SetEvent
extern FUNC(void, RTE_APPL_CODE) Rte_Task_SetEvent (TaskType task, EventMaskType ev);
#else
#define Rte_Task_SetEvent(task, ev) ((void)0)
#endif
#if (defined(Rte_Task_WaitEvent)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_WaitEvent
#endif
#if defined(Rte_Task_WaitEvent)
#undef Rte_Task_WaitEvent
extern FUNC(void, RTE_APPL_CODE) Rte_Task_WaitEvent (TaskType task, EventMaskType ev);
#else
#define Rte_Task_WaitEvent(task, ev) ((void)0)
#endif
#if (defined(Rte_Task_WaitEventRet)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_WaitEventRet
#endif
#if defined(Rte_Task_WaitEventRet)
#undef Rte_Task_WaitEventRet
extern FUNC(void, RTE_APPL_CODE) Rte_Task_WaitEventRet (TaskType task, EventMaskType ev);
#else
#define Rte_Task_WaitEventRet(task, ev) ((void)0)
#endif
#if (defined(Rte_Task_EndHook)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_EndHook
#endif
#if defined(Rte_Task_EndHook)
#undef Rte_Task_EndHook
extern FUNC(void, RTE_APPL_CODE) Rte_Task_EndHook (TaskType task);
#else
#define Rte_Task_EndHook(task) ((void)0)
#endif
#if (defined(Rte_Task_Terminate)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_Terminate
#endif
#if defined(Rte_Task_Terminate)
#undef Rte_Task_Terminate
extern FUNC(void, RTE_APPL_CODE) Rte_Task_Terminate (TaskType task);
#else
#define Rte_Task_Terminate(task) ((void)0)
#endif

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif
/** @} doxygen end group definition  */
/* ==================[end of file]============================================ */

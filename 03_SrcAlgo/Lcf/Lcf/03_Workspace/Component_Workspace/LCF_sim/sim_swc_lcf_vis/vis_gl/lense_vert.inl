
/*********************************************************************

This file is generated by StringifyShaderSource. 
Please do not modify except you know what you do.

StringifySource is a utility from sim_swc_ld_vis2. 
Please look in that directory to find them.

The Source is file is : '..\vis_gl\lense.vert'
Generatted at : 'Thu Jul 17 13:52:22 2014'

*********************************************************************/

"\n"
"// $Revision: 1.1 $\n"
"// invert correction via formular vu = v * ( 1+ k1 r + k2 * r * r)\n"
"\n"
"uniform double fK1;\n"
"uniform double fK2;\n"
"uniform vec2 v2Center;\n"
"\n"
"\n"
"float Cardano( double p, double q)\n"
"{\n"
"  double u=pow( float( -q/2.0 + sqrt( q*q/4.0 + p*p*p/27.0)), float( 1.0/3.0));\n"
"  return float( u-p/(3.0*u));\n"
"}\n"
"\n"
"double Dist2UndistTailor( double f, float r2, double fK1, double fK2, float fu)\n"
"{\n"
"  return f * ( 1 + fK1 * r2 + fK2 * r2 * r2) - fu;\n"
"}\n"
"\n"
"double Dist2UndistDerived( double x, double y, double fK1, double fK2)\n"
"{\n"
"  return 1.0 + fK1*y*y + fK2*y*y*y*y + 3.0*(fK1+2.0*fK2*y*y)*x*x + 5.0*fK2*x*x*x*x;\n"
"}\n"
"\n"
"vec2 CameraUndistorted2Distored( vec2 pos)\n"
"{\n"
"  if( fK2 == 0.0F)\n"
"  {\n"
"    if( fK1 != 0.0F)\n"
"    {\n"
"      // Use Cardano method to solve x(r)=x(r)( 1+k1*r2)\n"
"      // Cardano can be used if x*x term is avoided\n"
"      pos -= v2Center;\n"
"      float r2 = dot( pos, pos);\n"
"      dvec2 tmp;\n"
"      tmp.x = Cardano( pos.y*pos.y + 1.0/fK1, -pos.x/fK1);\n"
"      tmp.y = Cardano( pos.x*pos.x + 1.0/fK1, -pos.y/fK1);\n"
"      pos = tmp + v2Center;\n"
"    }\n"
"  }\n"
"  else\n"
"  {\n"
"    pos -= v2Center;\n"
"    float r2 = dot( pos, pos);\n"
"    vec2 p1 = pos;\n"
"\n"
"    for( int i=0; i < 5; i++)\n"
"    {\n"
"      dvec2 p2;\n"
"      p2.x = pos.x - ( Dist2UndistTailor( p1.x, r2, fK1, fK2, pos.x) / Dist2UndistDerived( p1.x, p1.y, fK1, fK2));\n"
"      p2.y = pos.y - ( Dist2UndistTailor( p1.y, r2, fK1, fK2, pos.y) / Dist2UndistDerived( p1.y, p1.x, fK1, fK2));\n"
"      p1 = p2;\n"
"    }\n"
"\n"
"    pos = p1 + v2Center;\n"
"  }\n"
"  return pos;\n"
"}\n"
"\n"
"void main()\n"
"{\n"
"  vec4 p4d = ftransform();\n"
"  vec2 p2d = vec2( p4d.x, p4d.y);\n"
"  p2d = CameraUndistorted2Distored( p2d);\n"
"  gl_Position = vec4( p2d, p4d.z, p4d.w);\n"
"  gl_FrontColor = gl_Color;\n"
"  gl_BackColor = gl_Color;\n"
"}\n"
"\n"
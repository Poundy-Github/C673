/*******************************************************************************
**----------------------------------------------------------------------------**
** Copyright (c) 2023 conti smart core
**----------------------------------------------------------------------------**
**
* Administrative Information
* Namespace_: \..\
* Class_____: H
* Name______: Qsm_Type.h
* vision____: 0.1
* Author____: YinXing
* History___: 2023/05/12 V0.1 new creation 
*******************************************************************************
** DESCRIPTION:
** Quasi Static manager is implemented by the user to manage the quasi-static 
** data. Quasi Static data blocks are read and written using FEEâ€™s read and 
** write APIs.
*******************************************************************************/
#ifndef QSM_TYPE_H_
#define QSM_TYPE_H_
/******************************************************************************/
/*----------------------------------Includes----------------------------------*/
/******************************************************************************/

/******************************************************************************/
/*--------------------------------Configuration-------------------------------*/
/******************************************************************************/

/******************************************************************************/
/*--------------------------------Enumerations--------------------------------*/
/******************************************************************************/

typedef enum 
{
	QSM_IDLE,
	QSM_REQREAD,
	QSM_REQWRITE,
	QSM_ERASE,
	QSM_ERROR,
}QSM_ReqType_e;

typedef enum
{
	QSM_ERASE_IDLE,
	QSM_ERASE_START,
	QSM_ERASE_PENDING,
	QSM_ERASE_CHECK,
}QSM_EraseStatus_e;

typedef enum
{
	QSM_READ_IDLE,
	QSM_READ_START,
	QSM_READ_PENDING,
	QSM_READ_CHECK,
}QSM_ReadStatus_e;

typedef enum
{
	QSM_WRITE_IDLE,
	QSM_WRITE_START,
	QSM_WRITE_PENDING,
	QSM_WRITE_CHECK,
}QSM_WriteStatus_e;

/******************************************************************************/
/*-----------------------------Data Structures--------------------------------*/
/******************************************************************************/
typedef struct 
{
	Std_ReturnType ReqResult;
	QSM_ReqType_e QSM_ReqOpretion;
	uint16 BlockId;
	uint16 BlockOffset;
	uint16 BlockLength;
	uint32 CycCounter;
	const void * DataBuffer;
}QSM_ReqInfo_s;

/******************************************************************************/
/*------------------------------Global variables------------------------------*/
/******************************************************************************/

/******************************************************************************/
/*-----------------------------------Macros-----------------------------------*/
/******************************************************************************/
#define QSM_REQRESULT_OK		(uint8)0x00u
#define QSM_REQRESULT_NOT_OK	(uint8)0x01u
#define QSM_REQRESULT_PENDING	(uint8)0x02u
#define QSM_MutiRead	0u
/******************************************************************************/
/*-------------------------Function Prototypes--------------------------------*/
/******************************************************************************/

/******************************************************************************/
/*----------------------------------END-FILE----------------------------------*/
/******************************************************************************/
#endif 


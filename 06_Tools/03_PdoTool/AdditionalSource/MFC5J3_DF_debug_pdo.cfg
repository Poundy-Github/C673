#define __inline inline

/* keywords of Taskings TriCore compiler */
#define __interrupt(x) 	/* empty */
#define __interrupt_fast(x) /* empty */
#define __indirect
#define __asm asm
#define __near near
#define __far far
#define __a0 /* empty */
#define __a1 /* empty */
#define __a8 /* empty */
#define __a9 /* empty */
#define __at(x) /* empty */
#define __atbit(x) /* empty */
#define __circ /* empty */
#define __sfrbit16 /* empty */
#define __sfrbit32 /* empty */
#define __enable_ /* empty */
#define __bisr_(x) /* empty */
#define __noinline /* empty */
#define __trap(x) /* empty */
#define __trap_fast(x) /* empty */
#define __syscallfunc(x) /* empty */
#define __stackparm /* empty */

/*
  The TriCore compiler additionally supports a '__bit' type, which
  corresponds to a 8 bit aligned 8 bit type with a value of either
  0 or 1. (See Tasking C compiler user manual 3.2.3)
*/
#define __bit	unsigned char		/* 8 bit data with two possible values */

/*
  The TriCore compiler also has fixed-point arithmetic types. These
  are currently not completely supported by PDO, so just map them
  to simple C types with similar representations. (See Tasking
  C compiler user manual 3.2.2)
*/
#define __sfract signed short		/* 16-bit Fix-point fractional [-1,1> */
#define __fract signed int		/* 32 bit Fix-point fractional [-1,1> */
#define __laccum signed long long	/* 64 bit Fix-point fractional [-131072,131072> */

/*
  Packed data types of the TriCore compiler (see Tasking C compiler
  manual 3.2.4). PDO currently does not have any support for vector types 
  (MMX anyone?) so just map these to normal standard scalars.
*/
#define __packb int		/* packed 4 byte = 32 bit vector */
#define __packhw short		/* packed 2 short = 32 bit vector */

/*
	Type allocation definitions
	This part of the file the allocator is configured. The alignment, byte order, and
	representation types of C-types can be specified here. All type descriptions have
	to start with the keyword 'type' followed by the parenthesized bitwise or of the
	types for which the description applies. This is followed by the bracketed ({})
	list of settings. The settings names are: 'alignement', 'size', 'byteorder' and
	'reptype'. It is required that for a valid simple type at least one of 'size'
	and 'reptype' needs to be set. (i.e.: it is not needed for struct/union/enum/function
	and arrays) If 'size' is not set, but 'reptype' is, then the size is auto deduced from
	the representation type. Under circumstances if no built-in type describes the
	representation, it can be useful to just set the size of the type without adding a
	representation type.
*/


type (unsigned long long)
{
	alignment	= 4;			/* 4-byte aligned always */
	size		= 8;			/* Size is 4 bytes (note: if not set, deduced from reptype) */
	byteorder	= littleendian; /* Byte-order is intel */
	reptype		= uint64;		/* Representation is unsigned 64-bit integer */
}

type (signed long long)
{
	alignment	= 4;			/* 4-byte aligned always */
	size		= 8;			/* Size is 4 bytes (note: if not set, deduced from reptype) */
	byteorder	= littleendian;		/* Byte-order is intel */
	reptype		= sint64;		/* Representation is unsigned 64-bit integer */
}

type (unsigned int  | unsigned long)
{
	alignment	= 4;			/* 4-byte aligned */
	size		= 4;			/* Size is 4 bytes (note: if not set, deduced from reptype) */
	byteorder	= littleendian;		/* Byte-order is intel */
	reptype		= uint32;		/* Representation is unsigned 32-bit integer */
}

type (signed int | signed long)
{
	alignment	= 4;			/* 4-byte aligned */
	byteorder	= littleendian;		/* Byte-order is intel */
	reptype		= sint32;		/* Representation is signed 32-bit integer */
}

type (signed short)
{
	alignment	= 2;
	byteorder	= littleendian;
	reptype		= sint16;
}

type (unsigned short)
{
	alignment	= 2;
	byteorder	= littleendian;
	reptype		= uint16;
}

type (char | signed char)
{
	alignment	= 1;
    size  = 1;
    byteorder	= littleendian;
	reptype		= sbyte;
}

type (unsigned char)
{
	alignment	= 1;
    size  = 1;
    byteorder	= littleendian;
	reptype		= ubyte;
}

type (float)
{
	alignment	= 4;
	size		= 4;
	byteorder	= littleendian;
	reptype		= float32;
}

type (double | long double)
{
	alignment	= 4;
	size		= 8;
	byteorder	= littleendian;
	reptype		= float64;
}

type (pointer)
{
	alignment	= 4;
	byteorder	= littleendian;
	reptype		= uint32;
}

type (function)
{
	alignment	= 4;
    byteorder	= littleendian;
	reptype		= uint32;
}

type (struct | union)
{
	alignment	= 1;		/* Default struct/union alignement 1 byte - will automatically allocate
	byteorder	= littleendian;						structs with fields with greater alignement requirements to greater
							alignment boundaries */

}

type (enum)
{
	size		= 4;
    alignment	= 4;
    byteorder	= littleendian;
    
}


sys_include_dirs = 
"../../02_SrcAppl/ComH/Cpr/02_Config",
"../../02_SrcAppl/ComH/Cpr/8001_CSC_Platform_CPR/01_Implements",
"../../02_SrcAppl/ComH/Cps/02_Config",
"../../02_SrcAppl/ComH/Cps/8002_CSC_Platform_CPS/01_Implements",
"../../02_SrcAppl/ComH/Fcu",
"../../02_SrcAppl/DiagServ/Dsm",
"../../02_SrcAppl/EbIntegr/boards/TriboardTC387TH_DPM",
"../../02_SrcAppl/EbIntegr/EbIntegr",
"../../02_SrcAppl/ErrH/Esh",
"../../02_SrcAppl/ErrH/Med/02_Config",
"../../02_SrcAppl/ErrH/Med/8003_CSC_Platform_MED/01_Implements",
"../../02_SrcAppl/ErrH/Sed/02_Config",
"../../02_SrcAppl/ErrH/Sed/8005_CSC_Platform_SED/01_Implements",
"../../02_SrcAppl/HwAbs/HwAbs",
"../../02_SrcAppl/HwMon/FSMonitor",
"../../02_SrcAppl/HwMon/HeartbeatDet",
"../../02_SrcAppl/MeasServ/Mtsi/02_Config",
"../../02_SrcAppl/MeasServ/Mtsi/A000_CSC_Platform_Mtsi4Hssl/01_Implements/Mtsi/include",
"../../02_SrcAppl/MeasServ/Mtsi/A000_CSC_Platform_Mtsi4Hssl/01_Implements/Mtsi_tc3xx/include",
"../../02_SrcAppl/MeasServ/Rta/02_Config/GenData",
"../../02_SrcAppl/MeasServ/Rta/02_Config/Project/common",
"../../02_SrcAppl/MeasServ/Rta/02_Config/Project/iuc",
"../../02_SrcAppl/MeasServ/Rta/8006_CSC_Platform_Rta/01_Implements/Private_IF/conf_interface",
"../../02_SrcAppl/MeasServ/Rta/8006_CSC_Platform_Rta/01_Implements/Private_IF/memmap_interface/mfc5j3",
"../../02_SrcAppl/MeasServ/Rta/8006_CSC_Platform_Rta/01_Implements/Private_IF/protected_interface",
"../../02_SrcAppl/MeasServ/Rta/8006_CSC_Platform_Rta/01_Implements/Private_IF/req_interface",
"../../02_SrcAppl/MeasServ/Rta/8006_CSC_Platform_Rta/01_Implements/Public_IF",
"../../02_SrcAppl/MeasServ/Rta/8006_CSC_Platform_Rta/01_Implements/Source/aux_cores",
"../../02_SrcAppl/MeasServ/Rta/8006_CSC_Platform_Rta/01_Implements/Source/em_freeze",
"../../02_SrcAppl/MeasServ/Rta/8006_CSC_Platform_Rta/01_Implements/Source/ll_addevent",
"../../02_SrcAppl/MeasServ/Rta/8006_CSC_Platform_Rta/01_Implements/Source/os/basic",
"../../02_SrcAppl/MeasServ/Rta/8006_CSC_Platform_Rta/01_Implements/Source/rta_basic/en",
"../../02_SrcAppl/MeasServ/Rta/8006_CSC_Platform_Rta/01_Implements/Source/suspend",
"../../02_SrcAppl/MeasServ/Rta/8006_CSC_Platform_Rta/01_Implements/Source",
"../../02_SrcAppl/MeasServ/test",
"../../02_SrcAppl/MemServ/Cdm",
"../../02_SrcAppl/MemServ/AEBDS",
"../../02_SrcAppl/ModM/ComM",
"../../02_SrcAppl/ModM/Esm",
"../../02_SrcAppl/ModM/Gp_PowerCtrl",
"../../02_SrcAppl/Platform",
"../../02_SrcAppl/Platform/CSC_Platform/02_Config",
"../../02_SrcAppl/Platform/CSC_Platform/8000_CSC_Platform_Common",
"../../02_SrcAppl/Platform/CSC_Platform/8000_CSC_Platform_Common/01_Implements/01_Common",
"../../02_SrcAppl/Platform/CSC_Platform/8000_CSC_Platform_Common/01_Implements/02_DataConvert",
"../../02_SrcAppl/Platform/CSC_Platform/8000_CSC_Platform_Common/01_Implements/03_Time",
"../../02_SrcAppl/Platform/CSC_Platform/8000_CSC_Platform_Common/01_Implements/04_Dbg",
"../../02_SrcAppl/Platform/VerInfo",
"../../02_SrcAppl/PmicServ/FS8X_driver",
"../../02_SrcAppl/PmicServ/PF8X_driver",
"../../02_SrcAppl/PmicServ/PF5xdriver",
"../../02_SrcAppl/SecurityServ/Ucb",
"../../02_SrcAppl/SecurityServ/Ucb/mbedtls",
"../../02_SrcAppl/SpiServ/Sdc/inc",
"../../02_SrcAppl/SpiServ/SpiTp",
"../../02_SrcAppl/Stubs",
"../../02_SrcAppl/TimeServ/SpiSync/02_Config",
"../../02_SrcAppl/TimeServ/SpiSync/8004_CSC_Platform_SpiSync/01_Implements",
"../../03_SrcAlgo/Common/cml",
"../../03_SrcAlgo/Common/Common",
"../../03_SrcAlgo/Fct/FctAdapter",
"../../03_SrcAlgo/Fct/Fct/00_Custom",
"../../03_SrcAlgo/Fct/Fct/fct",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/ACDC",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/FCT",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/ISC",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/LOCC",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/LOHP",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/LOPC",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/MEDIC",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/SLATE",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/SLATE1",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/SLATE2",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/SPM",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/ACDC/aip",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/ACDC/cd",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/ACDC/emp",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/ACDC/espm",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/ACDC/frame_acdc",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/FCT/frame",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/FCT/frame_sen",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/FCT/frame_veh",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/ISC/frame_isc",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/ISC/isc",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/ISC/isc/hmi",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/ISC/isc/sm",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/LOCC/frame_locc",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/LOCC/locc",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/LOCC/locc/cc",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/LOHP/frame_lohp",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/LOHP/lohp",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/LOHP/lohp/dm",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/LOHP/lohp/fca",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/LOHP/lohp/hp",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/LOHP/lohp/pred",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/LOHP/lohp/tc",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/LOPC/frame_lopc",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/LOPC/lopc",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/LOPC/lopc/kmc",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/LOPC/lopc/loc",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/LOPC/lopc/lop",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/LOPC/lopc/tci",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/MEDIC/dim",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/MEDIC/dim20",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/MEDIC/frame_medic",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/MEDIC/head",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/MEDIC/head20",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/MEDIC/dim/dim_eba",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/SLATE/frame_slate",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/SLATE1/cp",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/SLATE1/la",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/SLATE1/ooi",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/SLATE1/out",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/SLATE1/sit",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/SLATE2/apm",
"../../03_SrcAlgo/Fct/Fct/00_Custom/fct/SLATE2/fip",
"../../03_SrcAlgo/Fct/Fct/fct/ACDC",
"../../03_SrcAlgo/Fct/Fct/fct/CAL",
"../../03_SrcAlgo/Fct/Fct/fct/FCT",
"../../03_SrcAlgo/Fct/Fct/fct/ISC",
"../../03_SrcAlgo/Fct/Fct/fct/LOCC",
"../../03_SrcAlgo/Fct/Fct/fct/LOHP",
"../../03_SrcAlgo/Fct/Fct/fct/LOPC",
"../../03_SrcAlgo/Fct/Fct/fct/MEDIC",
"../../03_SrcAlgo/Fct/Fct/fct/SLATE",
"../../03_SrcAlgo/Fct/Fct/fct/SLATE1",
"../../03_SrcAlgo/Fct/Fct/fct/SLATE2",
"../../03_SrcAlgo/Fct/Fct/fct/SPM",
"../../03_SrcAlgo/Fct/Fct/fct/ACDC/aip",
"../../03_SrcAlgo/Fct/Fct/fct/ACDC/cd",
"../../03_SrcAlgo/Fct/Fct/fct/ACDC/emp",
"../../03_SrcAlgo/Fct/Fct/fct/ACDC/espm",
"../../03_SrcAlgo/Fct/Fct/fct/ACDC/frame_acdc",
"../../03_SrcAlgo/Fct/Fct/fct/ACDC/sfl",
"../../03_SrcAlgo/Fct/Fct/fct/FCT/frame",
"../../03_SrcAlgo/Fct/Fct/fct/FCT/frame_sen",
"../../03_SrcAlgo/Fct/Fct/fct/FCT/frame_veh",
"../../03_SrcAlgo/Fct/Fct/fct/ISC/frame_isc",
"../../03_SrcAlgo/Fct/Fct/fct/ISC/isc",
"../../03_SrcAlgo/Fct/Fct/fct/ISC/isc/hmi",
"../../03_SrcAlgo/Fct/Fct/fct/ISC/isc/sm",
"../../03_SrcAlgo/Fct/Fct/fct/LOCC/frame_locc",
"../../03_SrcAlgo/Fct/Fct/fct/LOCC/locc",
"../../03_SrcAlgo/Fct/Fct/fct/LOCC/locc/cc",
"../../03_SrcAlgo/Fct/Fct/fct/LOHP/frame_lohp",
"../../03_SrcAlgo/Fct/Fct/fct/LOHP/lohp",
"../../03_SrcAlgo/Fct/Fct/fct/LOHP/lohp/dm",
"../../03_SrcAlgo/Fct/Fct/fct/LOHP/lohp/fca",
"../../03_SrcAlgo/Fct/Fct/fct/LOHP/lohp/hp",
"../../03_SrcAlgo/Fct/Fct/fct/LOHP/lohp/pred",
"../../03_SrcAlgo/Fct/Fct/fct/LOHP/lohp/tc",
"../../03_SrcAlgo/Fct/Fct/fct/LOPC/frame_lopc",
"../../03_SrcAlgo/Fct/Fct/fct/LOPC/lopc",
"../../03_SrcAlgo/Fct/Fct/fct/LOPC/lopc/kmc",
"../../03_SrcAlgo/Fct/Fct/fct/LOPC/lopc/loc",
"../../03_SrcAlgo/Fct/Fct/fct/LOPC/lopc/lop",
"../../03_SrcAlgo/Fct/Fct/fct/LOPC/lopc/tci",
"../../03_SrcAlgo/Fct/Fct/fct/MEDIC/dim",
"../../03_SrcAlgo/Fct/Fct/fct/MEDIC/dim20",
"../../03_SrcAlgo/Fct/Fct/fct/MEDIC/frame_medic",
"../../03_SrcAlgo/Fct/Fct/fct/MEDIC/head",
"../../03_SrcAlgo/Fct/Fct/fct/MEDIC/head20",
"../../03_SrcAlgo/Fct/Fct/fct/MEDIC/targetplanner",
"../../03_SrcAlgo/Fct/Fct/fct/SLATE/frame_slate",
"../../03_SrcAlgo/Fct/Fct/fct/SLATE1/cp",
"../../03_SrcAlgo/Fct/Fct/fct/SLATE1/la",
"../../03_SrcAlgo/Fct/Fct/fct/SLATE1/ooi",
"../../03_SrcAlgo/Fct/Fct/fct/SLATE1/out",
"../../03_SrcAlgo/Fct/Fct/fct/SLATE1/sit",
"../../03_SrcAlgo/Fct/Fct/fct/SLATE2/apm",
"../../03_SrcAlgo/Fct/Fct/fct/SLATE2/fip",
"../../03_SrcAlgo/Fct/Fct/fct/SPM/blockage",
"../../03_SrcAlgo/Fct/Fct/fct/SPM/frame",
"../../03_SrcAlgo/Fct/Fct/fct/SPM/interference",
"../../03_SrcAlgo/Fct/Fct/fct/SPM/srr_frame",
"../../03_SrcAlgo/Hla/HlaAdapter",
"../../03_SrcAlgo/Hla/Hla/04_Engineering/00_Projects/MFC5J3/HLA",
"../../03_SrcAlgo/Hla/Hla/04_Engineering/00_Projects/MFC5J3/HLA/parameters",
"../../03_SrcAlgo/Hla/Hla/04_Engineering/00_Projects/MFC5J3/HLA/sw_support",
"../../03_SrcAlgo/Hla/Hla/04_Engineering/01_Source_Code/HLA",
"../../03_SrcAlgo/Hla/Hla/04_Engineering/01_Source_Code/HLA/frame",
"../../03_SrcAlgo/Hla/Hla/04_Engineering/01_Source_Code/HLA/function",
"../../03_SrcAlgo/Lcf/LcfAdapter",
"../../03_SrcAlgo/Lcf/Lcf/00_Projects/MFC5J3CN15",
"../../03_SrcAlgo/Lcf/Lcf/00_Projects/MFC5J3CN15/LCF",
"../../03_SrcAlgo/Lcf/Lcf/00_Projects/MFC5J3CN15/LCF/MFJSCT",
"../../03_SrcAlgo/Lcf/Lcf/00_Projects/MFC5J3CN15/LCF/HMIOC",
"../../03_SrcAlgo/Lcf/Lcf/00_Projects/MFC5J3CN15/LCF/LCF_DPU",
"../../03_SrcAlgo/Lcf/Lcf/00_Projects/MFC5J3CN15/LCF/MFJSCT/JCNCTR",
"../../03_SrcAlgo/Lcf/Lcf/00_Projects/MFC5J3CN15/LCF/HMIOC/HMODFL",
"../../03_SrcAlgo/Lcf/Lcf/00_Projects/MFC5J3CN15/LCF/LCF_DPU/LCFERR",
"../../03_SrcAlgo/Lcf/Lcf/00_Projects/MFC5J3CN15/LCF/LCF_DPU/LCFPRM",
"../../03_SrcAlgo/Lcf/Lcf/00_Projects/MFC5J3CN15/LCF/LCF_DPU/LCFRCV",
"../../03_SrcAlgo/Lcf/Lcf/00_Projects/MFC5J3CN15/LCF/LCF_DPU/LCFSEN",
"../../03_SrcAlgo/Lcf/Lcf/00_Projects/MFC5J3CN15/LCF/LCF_DPU/LCFSND",
"../../03_SrcAlgo/Lcf/Lcf/00_Projects/MFC5J3CN15/LCF/LCF_DPU/LCFVEH",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/common",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/common/LCF",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/common/LCF/RTW",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/ABPR",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/ALCASA",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/Common",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/CTRSC",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/DRVMN",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/LATDMC",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/LCFERR",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/LCF_MFC431x",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/LDPSA",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/MDCTR",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/ODPR",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/RDPSA",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/TJASA",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/TRJCTR",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/TRJPLN",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/VDPR",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/ABPR/ABPLBP",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/ABPR/ABPREP",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/ALCASA/LCRSIA",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/ALCASA/LCRSMI",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/ALCASA/LCRTTG",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/ALCASA/LCRTVG",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/Common/SDA",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/Common/sw_support",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/Common/utils",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/CTRSC/CSCLTA",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/DRVMN/DRMDAE",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/DRVMN/DRMHOD",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/LATDMC/latdmc_veh_ang",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/LCF_MFC431x/DPU",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/LCF_MFC431x/DPU/FRAME_SEN",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/LCF_MFC431x/DPU/FRAME_VEH",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/LCF_MFC431x/DPU/LCFRCV",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/LCF_MFC431x/DPU/LCFSND",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/LDPSA/DPLSIA",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/LDPSA/DPLSMI",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/LDPSA/DPLSMW",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/LDPSA/DPLTTG",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/LDPSA/DPLTVG",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/MDCTR/MCTLFC",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/ODPR/ODPFOH",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/ODPR/ODPFOP",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/RDPSA/DPRSIA",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/RDPSA/DPRSMI",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/RDPSA/DPRSMW",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/RDPSA/DPRTTG",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/RDPSA/DPRTVG",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/TJASA/TJACMB",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/TJASA/TJAGEN",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/TJASA/TJALKA",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/TJASA/TJAOBF",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/TJASA/TJASTM",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/TJASA/TJATTG",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/TJASA/TJATVG",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/TRJCTR/TCTCDC",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/TRJCTR/TCTCLM",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/TRJCTR/TCTDTE",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/TRJCTR/TCTEST",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/TRJCTR/TCTFFC",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/TRJCTR/TCTLGC",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/TRJPLN/TPLCEN",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/TRJPLN/TPLFBT",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/TRJPLN/TPLFRT",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/TRJPLN/TPLLCO",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/TRJPLN/TPLTJC",
"../../03_SrcAlgo/Lcf/Lcf/01_Source_Code/LCF/VDPR/VDPDRV",
"../../03_SrcAlgo/Tsa/TsaAdapter",
"../../03_SrcAlgo/Vdy/VdyAdapter",
"../../03_SrcAlgo/Vdy/Vdy/00_Projects/MFC431BD10/VDY/custom",
"../../03_SrcAlgo/Vdy/Vdy/00_Projects/MFC431BD10/VDY/custom/sw_support",
"../../03_SrcAlgo/Vdy/Vdy/00_Projects/MFC431BD10/VDY/custom/vdy",
"../../03_SrcAlgo/Vdy/Vdy/00_Projects/MFC431BD10/VDY/custom/sw_support/vdy",
"../../03_SrcAlgo/Vdy/Vdy/01_Source_Code/VDY/rtw",
"../../03_SrcAlgo/Vdy/Vdy/01_Source_Code/VDY/vdy",
"../../01_AsrConfig/output/generated/include";/* Coma seperated list of directories (either absolute or relative to working dir) */